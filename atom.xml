<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2015-03-10T22:57:28+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Developer View]]></title>
    <link href="http://geekhmer.github.io/blog/2015/03/10/the-developer-view/"/>
    <updated>2015-03-10T19:55:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/03/10/the-developer-view</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/professional_programmer.jpg" width="550" alt="The Developer View" />
</p>




<p>
  A developer might be someone who writes code, or it may be an interaction designer, a graphic designer, or a tester. In this document describes the things that happend in between the daily standup meetings.
</p>




<p>
  <strong>1. Tools and Practices</strong><br/>
  Tools don&#8217;t solve your problem; people do. Tools just help. It&#8217;s crucial to choose the right practices to go with your tools &#8211; the right ways to use your tools so that they do the most for you.
</p>




<p>
  And day-to-day as required, we discuss how our tools are helping or hurting us, and how they can work better for us. When things aren&#8217;t working quite right, we&#8217;ll first try to look at the way we&#8217;re using the tool; changing our practices is less costly and disruptive than changing a tool. But we occasionally change the tool as well.
</p>




<p>
  <strong>2. Pair Programming</strong><br/>
  Pair programming involves two programmers at a single computer (each with a monitor and keyboard of their own) working together on a single task. As a unit, they maintain a hight level of quality as well as ensuring a broad perspective on problem solving. For many complex problems and architectural design exercises, pair programming can drastically reduce defects and helps ensure that code requires a minimum amount of rewriting.
</p>




<p>
  When used effectively, pair programming reduces the overall cost of development and maintenance.
</p>




<p>
  We look at each coding and design task determine if pairing is appropriate, and at the discretion of the project team, many coding tasks are performed solo. When this happens, the code must pass code review before moving to QA.
</p>




<p>
  <strong>3. Test-Driven Development</strong><br/>
</p>




<p>
  <strong>4. Behavior-Driven Development</strong><br/>
</p>




<p>
  <strong>5. Code Review</strong><br/>
  Although many tasks call for pair programming, it is simply not practical or efficient to pair on every task. Then tasks are tackled by a solo developer, their work must always be reviewed by another developer on the team.
</p>




<p>
  Our task manangement system is configured to give a task two paths out of development. One path is &#8220;Completed by Pair, Ready for QA&#8221; Tasks handled by a solo developer follow an alternate path: &#8220;Completed Solo, Ready for Code Review&#8221;. That allows us to ensure that every piece of code that gets delivered to our customers thas been seen by at least two developers. Of course, that doesn&#8217;t mean there aren&#8217;t any problems, but it does shorten an important feedback loop, catching most problems early, when fixing them is cheapest.
</p>




<p>
  <strong>6. Continuous Integration</strong><br/>
  Continuous Integration (CI) ensures that an application is healthy by making sure that automated test pass on a neutral machine (not just a specific developer&#8217;s machine). Whenever anybody commits code to the central code repository, a CI server downloads the code and runs the build to ensure that the tests are still passing. If any of the automated tests fail, the build fails and the entire team is notified.
</p>




<p>
  We believe that the build should always be passing, and if somebody breaks the build, it needs to be fixed immediately before futher development can task place.
</p>




<p>
  <strong>7. Code Coverage</strong><br/>
  Code coverage has many definitions, but it normally represents the percentage of lines (or branches) in a software project that are covered by automated tests. A low score probably means bad code, but a hight score doesn&#8217;t necessarily mean good code.
</p>




<p>
  At the start of a project, the project team can choose what code coverage standard to enforce.
</p>




<p>
  <strong>8. Distributed Source Control</strong><br/>
  We uses a distributed source control system called Git (and Github) to store and track source code and other development-related artifacts.
</p>




<p>
  This is more important than it may first appear. Traditional, centralized source control systems inhibit agile teams by making branch and merge operations expensive. This make parallel, distributed development more costly. So much so, in fact, that source control can become a bottleneck on overall productivity of the team.
</p>




<p>
  <strong>9. Fridays (20% Time)</strong><br/>
  On Fridays, we don&#8217;t do billable client work. We spend our time on things that improve our lives as developer, our own pet project or passions, and for giving back to the rich sea of open-source software (espcially development tools) in which our business swims and thrives.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Versioning with PaperTrail on Rails]]></title>
    <link href="http://geekhmer.github.io/blog/2015/03/03/versioning-with-papertrail-on-rails/"/>
    <updated>2015-03-03T21:28:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/03/03/versioning-with-papertrail-on-rails</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Versioning with PaperTrail on Rails" />
</p>




<p>
  Imagine the situation, You open your website’s admin page to do some clean up, find some old data that hasn’t been viewed by anyone for ages, and delete it. Deletion succeeds and everything is okay, but after a second &#8220;No!!! That data contained VERY IMPORTANT INFORMATION that could possibly change the world!&#8221;, you realize. But, it’s gone and the world remains unchanged (well, there is still a chance for recovery if you have a backup of the Database).
</p>




<p>
  Can we prevent this situation in our Rails application? Yes, for sure we can. Well, in this article, we are going to talk about how to implement a &#8220;History&#8221; page and an &#8220;undo&#8221; button (as well as &#8220;redo&#8221;) with the help of the <code>paper_trail</code> gem.
</p>




<p>
  We are going to build a simple blog that allows to add, update, and destroy posts. And would be able to undo every action related to the posts (for example, undoing an unintentional delete). We will also provide a &#8220;History&#8221; page displaying a list of actions (and some other info) that users performed while working with posts.
</p>




<p>
  <strong>Create Rails Project</strong><br/>
  Run command below to create a new Rails application:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">blog</span> <span class="o">-</span><span class="n">d</span> <span class="n">mysql</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Add Gems</strong><br/>
  We will add a gems to our Gemfile. paper_trail, it will help us to create both the “History” page and an “undo” button:
</p>




<figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;paper_trail&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 3.0.1&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  The blog app has one controller (apart from the ApplicationController), PostsController, that will be used to manage our posts. Initially, it has seven default methods: index, new, create, destroy, edit and update, along with a number of views related to them. I will not go into the details on how to create these methods and views, because they are really basic (you can create them using rails g scaffold Posts).
</p>




<p>
  The blog contains a model: Post. The posts table have the following columns: id, title, body, created_at, updated_at.
</p>




<p>
  And routes file will looks like:
</p>




<figure class='code'><figcaption><span>routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;posts#index&#39;</span>
</span><span class='line'><span class="n">resources</span> <span class="ss">:posts</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  At this point, we are ready to setup paper_trail. First of all, create a special table to store the versions (it’s a cool feature of paper_trail – if we want to clear old versions later, we would need only to access one table).
</p>




<p>
  Run command below to generate and migrate paper_trail:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rails</span> <span class="n">generate</span> <span class="n">paper_trail</span><span class="ss">:install</span>
</span><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Create and apply the required migration. Add the following line to your Post model (app/models/post.rb):
</p>




<figure class='code'><figcaption><span>post.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_paper_trail</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Well! Now, all changes to the posts table will be audited automatically. How cool is that?
</p>




<p>
  You can also specify which changes should not be tracked. For example, if posts had a view_count column in and we did not want to track changes to it, the modification looks like in (app/models/post.rb):
</p>




<figure class='code'><figcaption><span>post.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_paper_trail</span> <span class="ss">ignore</span><span class="p">:</span> <span class="o">[</span><span class="ss">:view_count</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Some fields can be skipped, they will neither be tracked nor included in the serialized version of the object (app/models/post.rb):
</p>




<figure class='code'><figcaption><span>post.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_paper_trail</span> <span class="ss">skip</span><span class="p">:</span> <span class="o">[</span><span class="ss">:view_count</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Or can specified as well (app/models/post.rb):
</p>




<figure class='code'><figcaption><span>post.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_paper_trail</span> <span class="ss">on</span><span class="p">:</span> <span class="o">[</span><span class="ss">:update</span><span class="p">,</span> <span class="ss">:create</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Or provide conditions on whether to track the event:
</p>




<figure class='code'><figcaption><span>post.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_paper_trail</span> <span class="k">if</span><span class="p">:</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">title</span><span class="o">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">10</span> <span class="p">},</span>
</span><span class='line'>                <span class="k">unless</span><span class="p">:</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">body</span><span class="o">.</span><span class="n">blank?</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Display the Log</strong><br/>
  Now, you probably want to display the audited versions, It’s easy, just, add the following route:
</p>




<figure class='code'><figcaption><span>routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;posts#index&#39;</span>
</span><span class='line'><span class="n">resources</span> <span class="ss">:posts</span>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/posts/history&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;posts#history&#39;</span><span class="p">,</span> <span class="ss">as</span><span class="p">:</span> <span class="ss">:posts_history</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  To the history page for Posts. If your app has many models that are being audited, it’s a good idea to create a separate VersionsController and place all versions-related methods there. However, in our case, only the Post model is being audited, so let’s stick with one controller.
</p>




<p>
  Add a history method to the controller (app/controllers/posts_controller.rb):
</p>




<figure class='code'><figcaption><span>posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">history</span>
</span><span class='line'>  <span class="vi">@versions</span> <span class="o">=</span> <span class="ss">PaperTrail</span><span class="p">:</span><span class="ss">:Version</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="s1">&#39;created_at DESC&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Note that we have to use PaperTrail::Version, not just Version. This line of code extracts all the recorded events from the versions table that we have created earlier and sorts them by the creation date. In a real app, paginating these events by using will_paginate or kaminari gem is advisable.
</p>




<p>
  Rendering the view history (app/views/posts/history.html.erb):
</p>




<figure class='code'><figcaption><span>history.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">History</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'><span class="sr"> </span>
</span><span class='line'><span class="sr">  &lt;ul&gt;</span>
</span><span class='line'><span class="sr">    &lt;% @versions.each do |version| %&gt;</span>
</span><span class='line'><span class="sr">      &lt;li&gt;</span>
</span><span class='line'><span class="sr">        &lt;%= l(version.created_at, format: &quot;%-d.%m.%Y %H:%M:%S %Z&quot;) %&gt;&lt;br/</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="no">Event</span> <span class="ss">ID</span><span class="p">:</span> <span class="o">&lt;</span><span class="sx">%= version.id %&gt;&lt;br/&gt;</span>
</span><span class='line'><span class="sx">        &lt;b&gt;Target:&lt;/b&gt; &lt;%=</span> <span class="n">version</span><span class="o">.</span><span class="n">item_type</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">        &lt;small&gt;</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="o">&lt;</span><span class="sx">%= version.item_id %&gt;)&lt;/small&gt;; &lt;b&gt;action&lt;/b&gt; &lt;%=</span> <span class="n">version</span><span class="o">.</span><span class="n">event</span> <span class="sx">%&gt;;&lt;br/&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="no">More</span> <span class="ss">info</span><span class="p">:</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;%=</span> <span class="n">version</span><span class="o">.</span><span class="n">object</span> <span class="sx">%&gt;&lt;/pre&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'><span class="sr">      &lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx">  &lt;/ul&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Here is the data being displayed:
</p>


<table>
<thead>
<tr>
<th>Data </th>
<th> Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>version.created_at </td>
<td> When this event took place.</td>
</tr>
<tr>
<td>version.id </td>
<td> ID of this event.</td>
</tr>
<tr>
<td>version.item_type </td>
<td> Model name for the event. In our case, it’s Post.</td>
</tr>
<tr>
<td>version.item_id </td>
<td> ID of the resource (Post) that was changed.</td>
</tr>
<tr>
<td>version.event </td>
<td> The action applied to the resource (create, update, destroy).version.object, Full dump of the resource that was changed.</td>
</tr>
</tbody>
</table>


<p>
  <br/>
  There are some things that could be improved. For example, which fields were changed (especially for the update action)? Well, that is very easy to implement.
</p>




<p>
  Run command below to create and apply migration:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">migration</span> <span class="n">add_object_changes_to_versions</span> <span class="n">object_changes</span><span class="ss">:text</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  This can also be done when setting up paper_trail. You just need to provide an appropriate option to the generator below:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">generate</span> <span class="n">paper_trail</span><span class="ss">:install</span> <span class="o">--</span><span class="n">with</span><span class="o">-</span><span class="n">changes</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  No further action is required, paper_trail will automatically diff the versions.
</p>




<p>
  Now, we can add a new div with version.changeset block to our view (app/views/posts/history.html.erb):
</p>




<figure class='code'><figcaption><span>history.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[.</span><span class="n">.</span><span class="o">.]</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="ss">Changeset</span><span class="p">:</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;%=</span> <span class="n">version</span><span class="o">.</span><span class="n">changeset</span> <span class="sx">%&gt;&lt;/pre&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'><span class="sr">[...]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  It will display attribute values before and after the event (if an attribute remained unchanged it will not be displayed).
</p>




<p>
  <strong>Track User-Specific Information</strong><br/>
  Okay, now we know when of our precious blog post deletion. But, we don’t know who, High time to fix this issue.
</p>




<p>
  Let’s track an IP address of the user responsible for the action. Of course, an IP address can be forged, but the main point here is to explain how to store metadata alongside with the event’s data. Go on and create a new migration below:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">migration</span> <span class="n">add_ip_to_versions</span> <span class="ss">ip</span><span class="p">:</span><span class="n">string</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  paper_trail will not store anything in the ip column, by default, so we need to help it out a bit. Add this method to the ApplicationController (app/controllers/application_controller.rb):
</p>




<figure class='code'><figcaption><span>application_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">info_for_paper_trail</span>
</span><span class='line'>  <span class="p">{</span> <span class="ss">ip</span><span class="p">:</span> <span class="n">request</span><span class="o">.</span><span class="n">remote_ip</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  paper_trail will use this method to fetch some additional info and store it as metadata. If you are using Rails 3 or protected_attributes with Rails 4, you will also need to create an initializer (initializers/paper_trail.rb):
</p>




<figure class='code'><figcaption><span>paper_trail.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">PaperTrail</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Version</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>    <span class="n">attr_accessible</span> <span class="ss">:ip</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Metadata can also be provided in the model (app/models/post.rb) like this (presuming we have a timestamp column):
</p>




<figure class='code'><figcaption><span>post.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_paper_trail</span> <span class="ss">meta</span><span class="p">:</span> <span class="p">{</span> <span class="ss">timestamp</span><span class="p">:</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  The last thing to do is add a line into view (app/views/posts/history.html.erb):
</p>




<figure class='code'><figcaption><span>history.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[.</span><span class="n">.</span><span class="o">.]</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">b</span><span class="o">&gt;</span><span class="no">Remote</span> <span class="ss">address</span><span class="p">:</span><span class="o">&lt;</span><span class="sr">/b&gt; &lt;%= version.ip %&gt;&lt;br/</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">[.</span><span class="n">.</span><span class="o">.]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Undo an Action</strong><br/>
  Let’s move on, allowing the user to undo their actions. Create undo method in posts controller (app/controllers/posts_controller.rb) that will undo the requested action:
</p>




<figure class='code'><figcaption><span>posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">undo</span>
</span><span class='line'>  <span class="vi">@post_version</span> <span class="o">=</span> <span class="ss">PaperTrail</span><span class="p">:</span><span class="ss">:Version</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">begin</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@post_version</span><span class="o">.</span><span class="n">reify</span>
</span><span class='line'>      <span class="vi">@post_version</span><span class="o">.</span><span class="n">reify</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="vi">@post_version</span><span class="o">.</span><span class="n">item</span><span class="o">.</span><span class="n">destroy</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;Undid that...&quot;</span>
</span><span class='line'>  <span class="k">rescue</span>
</span><span class='line'>    <span class="n">flash</span><span class="o">[</span><span class="ss">:alert</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;Failed undoing the action...&quot;</span>
</span><span class='line'>  <span class="k">ensure</span>
</span><span class='line'>    <span class="n">redirect_to</span> <span class="n">root_path</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  The above code, find a version by id and then check if there are previous versions available for the resource using the reify method, this method will return nil if the resource was just created in the current version (obviously, if the resource was just created it does not have any previous versions.) Either rollback to the previous version using @post_version.reify.save or destroy the newly created resource using @post_version.item.destroy (the @post_version.item returns the actual resource).
</p>




<p>
  And routes file will looks like:
</p>




<figure class='code'><figcaption><span>routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;posts#index&#39;</span>
</span><span class='line'><span class="n">resources</span> <span class="ss">:posts</span>
</span><span class='line'><span class="n">get</span> <span class="s1">&#39;/posts/history&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;posts#history&#39;</span><span class="p">,</span> <span class="ss">as</span><span class="p">:</span> <span class="ss">:posts_history</span>
</span><span class='line'><span class="n">post</span> <span class="s1">&#39;/posts/:id/undo&#39;</span><span class="p">,</span> <span class="ss">to</span><span class="p">:</span> <span class="s1">&#39;posts#undo&#39;</span><span class="p">,</span> <span class="ss">as</span><span class="p">:</span> <span class="ss">:undo</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then put this undo link into the flash message, so make sure to render it somewhere in your layout (app/views/layouts/application.html.erb):
</p>




<figure class='code'><figcaption><span>application.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">% flash.each </span><span class="k">do</span> <span class="o">|</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="o">|</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">    &lt;div class=&quot;alert alert-&lt;%= key %&gt;</span><span class="s2">&quot;&gt;</span>
</span><span class='line'><span class="s2">      &lt;button type=&quot;</span><span class="n">button</span><span class="s2">&quot; class=&quot;</span><span class="n">close</span><span class="s2">&quot; data-dismiss=&quot;</span><span class="n">alert</span><span class="s2">&quot;&gt;&amp;times;&lt;/button&gt;</span>
</span><span class='line'><span class="s2">      &lt;%= value.html_safe %&gt;</span>
</span><span class='line'><span class="s2">    &lt;/div&gt;</span>
</span><span class='line'><span class="s2">  &lt;% end %&gt;</span>
</span><span class='line'><span class="s2">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then create a private method in the PostsController that generates an undo link:
</p>




<figure class='code'><figcaption><span>posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[.</span><span class="n">.</span><span class="o">.]</span>
</span><span class='line'><span class="kp">private</span>
</span><span class='line'><span class="k">def</span> <span class="nf">make_undo_link</span>
</span><span class='line'><span class="err">  </span><span class="n">view_context</span><span class="o">.</span><span class="n">link_to</span> <span class="s1">&#39;Undo that plz!&#39;</span><span class="p">,</span> <span class="n">undo_path</span><span class="p">(</span><span class="vi">@post</span><span class="o">.</span><span class="n">versions</span><span class="o">.</span><span class="n">last</span><span class="p">),</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:post</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  We cannot use link_to inside the controller, so the reference to view_context points to the actual view. @post.versions fetches all the versions for the Post resource and @post.versions.last gets the latest one. This method can be used like this in PostsController (app/controllers/posts_controller.rb):
</p>




<figure class='code'><figcaption><span>posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[.</span><span class="n">.</span><span class="o">.]</span>
</span><span class='line'><span class="k">def</span> <span class="nf">update</span>
</span><span class='line'>  <span class="vi">@post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="vi">@post</span><span class="o">.</span><span class="n">update_attributes</span><span class="p">(</span><span class="n">post_params</span><span class="p">)</span>
</span><span class='line'>    <span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;Post was updated! </span><span class="si">#{</span><span class="n">make_undo_link</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="n">redirect_to</span> <span class="n">post_path</span><span class="p">(</span><span class="vi">@post</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">render</span> <span class="s1">&#39;edit&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">[.</span><span class="n">.</span><span class="o">.]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Make sure to add it to the create and destroy methods as well.
</p>




<p>
  Okay, I have undone an action… but now I want to redo it. Here, we should introduce a redo link that reverts the undo. There are only few modifications needed.
</p>




<p>
  Then create another private method in PostsController (app/controllers/posts_controller.rb):
</p>




<figure class='code'><figcaption><span>posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[.</span><span class="n">.</span><span class="o">.]</span>
</span><span class='line'><span class="kp">private</span>
</span><span class='line'><span class="k">def</span> <span class="nf">make_redo_link</span>
</span><span class='line'>  <span class="n">params</span><span class="o">[</span><span class="ss">:redo</span><span class="o">]</span> <span class="o">==</span> <span class="s2">&quot;true&quot;</span> <span class="p">?</span> <span class="n">link</span> <span class="o">=</span> <span class="s2">&quot;Undo that plz!&quot;</span> <span class="p">:</span> <span class="n">link</span> <span class="o">=</span> <span class="s2">&quot;Redo that plz!&quot;</span>
</span><span class='line'>  <span class="n">view_context</span><span class="o">.</span><span class="n">link_to</span> <span class="n">link</span><span class="p">,</span> <span class="n">undo_path</span><span class="p">(</span><span class="vi">@post_version</span><span class="o">.</span><span class="n">next</span><span class="p">,</span> <span class="k">redo</span><span class="p">:</span> <span class="o">!</span><span class="n">params</span><span class="o">[</span><span class="ss">:redo</span><span class="o">]</span><span class="p">),</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:post</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">[.</span><span class="n">.</span><span class="o">.]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  This method is very similar to make_undo_link. The main difference is the params[:redo] which is true of false. Based on this parameter, change the text of the link – the URL actually remains unchanged. This is because redoing basically means reverting to the previous version, which is absolutely the same as the undo action.
</p>




<p>
  Then alter the flash message inside the undo method in PostsController:
</p>




<figure class='code'><figcaption><span>posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[.</span><span class="n">.</span><span class="o">.]</span>
</span><span class='line'><span class="k">def</span> <span class="nf">undo</span>
</span><span class='line'><span class="o">[.</span><span class="n">.</span><span class="o">.]</span>
</span><span class='line'>  <span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;Undid that! </span><span class="si">#{</span><span class="n">make_redo_link</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="o">[.</span><span class="n">.</span><span class="o">.]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  That’s it, users can undo and redo their actions as many times and they want, every time being recorded by paper_trail.
</p>




<p>
  The only one problem is that the versions table can become fat very quickly. This should probably be handled with some background process to remove old entries. The job would use something like:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">PaperTrail</span><span class="p">:</span><span class="ss">:Version</span><span class="o">.</span><span class="n">delete_all</span> <span class="o">[</span><span class="s2">&quot;created_at &lt; ?&quot;</span><span class="p">,</span> <span class="mi">1</span><span class="o">.</span><span class="n">week</span><span class="o">.</span><span class="n">ago</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You also can limit the number of created versions per object by adding this line into an initializer:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">PaperTrail</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">version_limit</span> <span class="o">=</span> <span class="mi">3</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Passing Optional Locals to Partials]]></title>
    <link href="http://geekhmer.github.io/blog/2015/03/02/ruby-on-rails-passing-optional-locals-to-partials/"/>
    <updated>2015-03-02T23:32:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/03/02/ruby-on-rails-passing-optional-locals-to-partials</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails Passing Optional Locals to Partials" />
</p>




<p>
  When passing locals to Rails partials, you might run into cases where you need to pass optional locals in some places, but don’t want to pass it in every other place where you use the partial.
</p>




<p>
  As an example, you have a <code>_post</code> partial which you render like this:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">render</span> <span class="s1">&#39;post&#39;</span><span class="p">,</span> <span class="ss">post</span><span class="p">:</span> <span class="n">post</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  And now you want to render the same partial from another view, but this time you want to pass a boolean flag to tell the partial to render the author bio as well:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">render</span> <span class="s1">&#39;post&#39;</span><span class="p">,</span> <span class="ss">post</span><span class="p">:</span> <span class="n">post</span><span class="p">,</span> <span class="n">show_author_bio</span><span class="p">:</span> <span class="kp">true</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  If we used the <code>show_author_bio</code> local in the partial, it would break the other view which does not know this local. To use it safely, we can use the <code>local_assigns</code> hash:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&lt;</span><span class="sx">%= post.title %&gt;&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;% if local_assigns[:show_author_bio] %&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="n">render</span> <span class="s1">&#39;author_bio&#39;</span><span class="p">,</span> <span class="ss">author</span><span class="p">:</span> <span class="n">post</span><span class="o">.</span><span class="n">author</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;%=</span> <span class="n">post</span><span class="o">.</span><span class="n">body</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  We’re using it for passing a boolean value here, we could pass in any other object as well. For instance, we could pass in an optional author object:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">% if </span><span class="n">local_assigns</span><span class="o">.</span><span class="n">has_key?</span><span class="p">(</span><span class="ss">:author</span><span class="p">)</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;%= render &#39;author_bio&#39;, author: author %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  DHH (David Heinemeier Hansson) opened an issue (<a href="https://github.com/rails/rails/issues/18962" target="_blank">#18962</a>) about this as well, and had an interesting comment to make about this feature.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Debug a Ruby on Rails Application]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/27/how-to-debug-a-ruby-on-rails-application/"/>
    <updated>2015-02-27T00:35:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/27/how-to-debug-a-ruby-on-rails-application</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="How to Debug a Ruby on Rails Application" />
</p>




<p>
  This article I will show you how you can easily debug your Ruby on Rails application.
</p>




<p>
  <strong>Setup</strong><br/>
  If you’re using the default Rails Rack server, Webrick – the best debugging tool I’ve been able to find out there is <code>pry</code>. First you need to add the pry gem to your Gemfile. Since this is used for development purposes. Open up your Gemfile file so that it looks sometings like:
</p>




<figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;pry&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then run <code>bundle install</code> to install it:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Usage</strong><br/>
  Basically, Whenever one of your actions crashes and you can’t figure out straight away what caused it to crash. What you need to do is invoke <code>binding.pry</code> somewhere in your code, which will create a Pry session at the point it’s called. This will pretty much open a &#8216;developer console&#8217; where you can play around with all the objects that have been defined up until you called <code>binding.pry</code>. Then you can then easily debug your action, like you’d regularly do in an irb console. When you’re done with the Pry session the program will resume.
</p>




<p>
  Here’s how this would work in a regular create action from Users controller:
</p>




<figure class='code'><figcaption><span>users_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>  <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">user_params</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">binding</span><span class="o">.</span><span class="n">pry</span> <span class="c1"># Start a pry session to see if the new user looks the way we want</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">user</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>     <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span class="o">[</span><span class="ss">:success</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;User saved successfully&quot;</span>
</span><span class='line'>     <span class="n">sign_in</span> <span class="n">user</span>
</span><span class='line'>     <span class="n">redirect_to</span> <span class="n">user</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>     <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span class="o">[</span><span class="ss">:error</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;Something went wrong: </span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">errors</span><span class="o">.</span><span class="n">full_messages</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>     <span class="n">render</span> <span class="s1">&#39;new&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Well, after you run the create action – you should view the Pry session in the console, where your rails server is running.
</p>




<p>
  So far so good, That&#8217;s it!!! See yar!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActionPack Variants on Rails]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/23/actionpack-variants-on-rails/"/>
    <updated>2015-02-23T21:48:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/23/actionpack-variants-on-rails</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="ActionPack Variants on Rails" />
</p>




<p>
  Rails 4.1 released a little while ago and came out with a fantastic new feature I think a lot of responsive web developers are going to flex. It&#8217;s called Variants. ActionPack Variants.
</p>




<p>
  <strong>What does it do?</strong><br/>
  It allows you to create different views for different device formats - such as mobile 
  phones, tablets and desktops.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># /app/views/home/index.html.erb</span>
</span><span class='line'><span class="c1"># /app/views/home/index.html+phone.erb</span>
</span><span class='line'><span class="c1"># /app/views/home/index.html+tablet.erb</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Why is this useful?</strong><br/>
  This is tremendously useful because you can now serve a much slimmer version of your view to mobile devices, instead of just hiding the elements using CSS using media queries.
</p>




<p>
  Hidden elements still load and need to come down &#8216;the wire&#8217; - using Variants it&#8217;s much easier than before to serve up lean and mean views to mobile devices.
</p>




<p>
  <strong>Setup</strong><br/>
  Create a homes controller that will enable you to play around with ActionPack Variants, run the commands below to create the home controller:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="n">homes</span> <span class="n">show</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then apply a few simple routes to your application to finish setting things up. Open up your routes file (<code>config/routes.rb</code>).
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="s2">&quot;homes#show&quot;</span>
</span><span class='line'><span class="n">resource</span> <span class="ss">:home</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:show</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Well, Now we are ready to play around with ActionPack Variants. ActionPack Variants works by using a <code>before_action</code> in your application controller. Open up your Application Controller (<code>app/controllers/application_controller.rb</code>) and modify so that it looks sometings like:
</p>




<figure class='code'><figcaption><span>application_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="ss">ActionController</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="c1"># Prevent CSRF attacks by raising an exception.</span>
</span><span class='line'>  <span class="c1"># For APIs, you may want to use :null_session instead.</span>
</span><span class='line'>  <span class="n">protect_from_forgery</span> <span class="ss">with</span><span class="p">:</span> <span class="ss">:exception</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before_action</span> <span class="ss">:detect_browser</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">detect_browser</span>
</span><span class='line'>      <span class="k">case</span> <span class="n">request</span><span class="o">.</span><span class="n">user_agent</span>
</span><span class='line'>        <span class="k">when</span> <span class="sr">/iPad/i</span>
</span><span class='line'>          <span class="n">request</span><span class="o">.</span><span class="n">variant</span> <span class="o">=</span> <span class="ss">:tablet</span>
</span><span class='line'>        <span class="k">when</span> <span class="sr">/iPhone/i</span>
</span><span class='line'>          <span class="n">request</span><span class="o">.</span><span class="n">variant</span> <span class="o">=</span> <span class="ss">:phone</span>
</span><span class='line'>        <span class="k">when</span> <span class="sr">/Android/i</span> <span class="o">&amp;&amp;</span> <span class="sr">/mobile/i</span>
</span><span class='line'>          <span class="n">request</span><span class="o">.</span><span class="n">variant</span> <span class="o">=</span> <span class="ss">:phone</span>
</span><span class='line'>        <span class="k">when</span> <span class="sr">/Android/i</span>
</span><span class='line'>          <span class="n">request</span><span class="o">.</span><span class="n">variant</span> <span class="o">=</span> <span class="ss">:tablet</span>
</span><span class='line'>        <span class="k">when</span> <span class="sr">/Windows Phone/i</span>
</span><span class='line'>          <span class="n">request</span><span class="o">.</span><span class="n">variant</span> <span class="o">=</span> <span class="ss">:phone</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="n">request</span><span class="o">.</span><span class="n">variant</span> <span class="o">=</span> <span class="ss">:desktop</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  How does it work? Before an action is called, The <code>detect_browser</code> is called and the <code>request.variant</code> is set to whatever you want it to be. In the above example I use it determine whether we are running a mobile, tablet, or desktop device.
</p>




<p>
  Then create a view called show.html+phone.erb (<code>app/views/homes/show.html+phone.erb</code>) for your homes controller and add in the code listed below:
</p>




<figure class='code'><figcaption><span>show.html+phone.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Phone</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span><span class='line'><span class="sr">  You are running on a smart phone.</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then create a view for our tablet users. Create a new view called show.html+tablet.erb (<code>app/views/homes/show.html+tablet.erb</code>) and add in the code listed below:
</p>




<figure class='code'><figcaption><span>show.html+tablet.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Tablet</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span><span class='line'><span class="sr">  You are running on a tablet.  Whoohoo!</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then modify your default show.html.erb (<code>app/views/homes/show.html.erb</code>) view. Open it up now and modify it so that it looks something like:
</p>




<figure class='code'><figcaption><span>show.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Desktop</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span><span class='line'><span class="sr">  All other users get redirected here.</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
   There are still a few pieces of the puzzle left. What if you need to detect the device type prior to rendering the view? For example, setting paging size/options for our queries. Fortunately, this is pretty easy. Open up your homes controller (<code>app/views/controllers/homes_controller.rb</code>) and modify it so that it looks like the code listed below:
</p>




<figure class='code'><figcaption><span>homes_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">HomesController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="vi">@device</span> <span class="o">=</span> <span class="s2">&quot;others&quot;</span>
</span><span class='line'>    <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span><span class="o">.</span><span class="n">phone</span> <span class="k">do</span> <span class="c1"># phone variant</span>
</span><span class='line'>          <span class="c1"># add code here for phones</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span><span class="o">.</span><span class="n">tablet</span> <span class="k">do</span> <span class="c1"># tablet variant</span>
</span><span class='line'>          <span class="c1"># add code here for tablets</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span><span class="o">.</span><span class="n">desktop</span> <span class="k">do</span>
</span><span class='line'>          <span class="c1"># add code here for desktops and other devices</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  There is one more thing to do. What happens if you need to detect the variant in your view? Fortunately this is very easy and be shown,open up your application layout (<code>app/views/layouts/application.html.erb</code>) and modify it so that it looks like the code listed below:
</p>




<figure class='code'><figcaption><span>application.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;!</span><span class="no">DOCTYPE</span> <span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">head</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">title</span><span class="o">&gt;</span><span class="no">ActionPackVariantsExample</span><span class="o">&lt;</span><span class="sr">/title&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= stylesheet_link_tag    &#39;application&#39;, media: &#39;all&#39;, &#39;data-turbolinks-track&#39; =&gt; true %&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= javascript_include_tag &#39;application&#39;, &#39;data-turbolinks-track&#39; =&gt; true %&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= csrf_meta_tags %&gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">head</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">body</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;%=</span> <span class="k">yield</span> <span class="sx">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;% if request.variant.include? :tablet %&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">small</span><span class="o">&gt;</span><span class="no">Welcome</span> <span class="no">Tablet</span> <span class="no">User</span><span class="o">&lt;</span><span class="sr">/small&gt;</span>
</span><span class='line'><span class="sr">&lt;% elsif request.variant.include? :phone %&gt;</span>
</span><span class='line'><span class="sr">  &lt;small&gt;Welcome Phone User&lt;/sm</span><span class="n">all</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;/body&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Note the if statement starting with <code>if request.variant.include? :tablet</code>. Why do we use <code>.include?</code> The <code>request.variant</code> is actually an array. Therefore it is necessary to use .include?.
</p>




<p>
  So far so good, That&#8217;s it! See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Slim on Rails]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/23/slim-on-rails/"/>
    <updated>2015-02-23T00:12:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/23/slim-on-rails</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Slim on Rails" />
</p>




<p>
  The first thing you need to do is add a couple gems to the Gemfile. The slim gem tells Rails how to parse the Slim syntax. The slim-rails gem overrides the Rails generators for ERB and replaces them with Slim generators. Add these gems to your Gemfile as below:
</p>




<figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;slim&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 2.0.3&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;slim-rails&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 2.1.5&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then run <code>bundle install</code> to install the gems:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then generate a Homes controller with a show action by running the command below:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="no">Homes</span> <span class="n">show</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Notice that the generated view ends in .slim, Rails has generated a slim file for us, courtesy of the slim-rails gem. Now let&#8217;s modify our routes file to set up a resource and add a root path. Open up your routes file (<code>config/routes.rb</code>) and modify it so that it looks somethings like:
</p>




<figure class='code'><figcaption><span>routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="s2">&quot;homes#show&quot;</span>
</span><span class='line'><span class="n">resource</span> <span class="ss">:home</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:show</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now you are ready to play with Slim. Open up the show view for homes (<code>app/views/homes/show.html.slim</code>) and modify it so that it looks somethings like:
</p>




<figure class='code'><figcaption><span>show.html.slim </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">javascript</span><span class="p">:</span>
</span><span class='line'>  <span class="n">alert</span><span class="p">(</span><span class="s2">&quot;HELLO!!!!!&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">h1</span> <span class="no">Welcome</span> <span class="n">to</span> <span class="n">my</span> <span class="n">site</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">b</span><span class="o">&gt;</span><span class="n">inline</span> <span class="n">html</span> <span class="n">is</span> <span class="n">supported</span><span class="o">&lt;</span><span class="sr">/b&gt;</span>
</span><span class='line'><span class="sr">p</span>
</span><span class='line'><span class="sr">  | The time is </span><span class="si">#{</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span> <span class="si">}</span><span class="sr">, </span>
</span><span class='line'><span class="sr">    I Like to program in Ruby on Rails.</span>
</span><span class='line'><span class="sr">#hashtag I threw a hashtag in here!</span>
</span><span class='line'><span class="sr">#classy I&#39;m classy!</span>
</span><span class='line'>
</span><span class='line'><span class="sr">p = Random.rand(10)</span>
</span><span class='line'>
</span><span class='line'><span class="sr">- if Random.rand(6) == 1</span>
</span><span class='line'><span class="sr">  |Lucky number 1!  You win!</span>
</span><span class='line'><span class="sr">br</span>
</span><span class='line'><span class="sr">br</span>
</span><span class='line'><span class="sr">small Goodbye!</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Which translates to:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">script</span> <span class="n">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="n">alert</span><span class="p">(</span><span class="s2">&quot;HELLO!!!!!&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/script&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Welcome to my site&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">b</span><span class="o">&gt;</span><span class="n">inline</span> <span class="n">html</span> <span class="n">is</span> <span class="n">supported</span><span class="o">&lt;</span><span class="sr">/b&gt;</span>
</span><span class='line'><span class="sr">&lt;p&gt;The time is 2015-02-22 00:24:59 - 0400, I Like to program in Ruby on Rails.&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;hashtag&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="n">I</span> <span class="n">threw</span> <span class="n">a</span> <span class="n">hashtag</span> <span class="k">in</span> <span class="n">here!</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;div id=&quot;classy&quot;&gt;</span>
</span><span class='line'><span class="sr">  I&#39;m classy!</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="mi">2</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'><span class="sr">&lt;br&gt;</span>
</span><span class='line'><span class="sr">&lt;br&gt;</span>
</span><span class='line'><span class="sr">&lt;small&gt;Goodbye!&lt;/sm</span><span class="n">all</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, That&#8217;s it! See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Slim Template Language]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/22/slim-template-language/"/>
    <updated>2015-02-22T22:29:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/22/slim-template-language</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Slim Template Language" />
</p>




<p>
  Slim is a replacement for ERB, similar to HAML. Slim provides a nice lean syntax that&#8217;s easy to pick up and learn. In this article we will learn how to use Slim. Let’s run through this with me.
</p>




<p>
  <strong>Basic Syntax</strong><br/>
  Slim is actually really easy to learn. Indentation matters, but the indentation depth can be chosen as you like. If you want to first indent 2 spaces, then 5 spaces, it&#8217;s your choice.
</p>




<p>
  Example: 
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span>
</span><span class='line'>  <span class="o">|</span> <span class="no">This</span> <span class="n">is</span> <span class="n">a</span> <span class="n">very</span> <span class="n">long</span> <span class="n">paragraph</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Which translates to:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="no">This</span> <span class="n">is</span> <span class="n">a</span> <span class="n">very</span> <span class="n">long</span> <span class="n">paragraph</span><span class="o">.</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  In the above example you&#8217;ll notice two things. First, the pipe (|) character is used to delimit free-form text on a new line. Second, we simply used p to specify the paragraph tag. This works for any tag, for instance you could just as easily have done:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h1</span>
</span><span class='line'>  <span class="o">|</span> <span class="no">Large</span> <span class="no">Title</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Or more simply:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h1</span> <span class="no">Large</span> <span class="no">Title</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  In the above example that we didn&#8217;t specify the pipe (|) character. The pipe (|) character is only needed if we are entering free-form text on a new line.
</p>




<p>
  You can create a div with a default class by using:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Which translates to:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;class&quot;</span><span class="o">&gt;&lt;</span><span class="sr">/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can create a div with an id by using:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#id</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Which translates to:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;id&quot;</span><span class="o">&gt;&lt;</span><span class="sr">/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  What about html attributes? Well, we specify them similarly to how we would in html:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">meta</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;viewport&quot;</span> <span class="n">content</span><span class="o">=</span><span class="s2">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Which translates to:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">meta</span> <span class="nb">name</span><span class="o">=</span><span class="s2">&quot;viewport&quot;</span> <span class="n">content</span><span class="o">=</span><span class="s2">&quot;width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no&quot;</span><span class="o">&gt;&lt;</span><span class="sr">/meta&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  To specify a doctype:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">doctype</span> <span class="n">html</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Which translates to:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;!</span><span class="no">DOCTYPE</span> <span class="n">html</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Well, all is great, but what about Ruby code? Inserting Ruby code is pretty easy. Code that doesn&#8217;t return a result, such as if statements or loops, are prefixed with a dash (-).
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">-</span> <span class="k">if</span> <span class="vi">@products</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>  <span class="nb">p</span> <span class="no">No</span> <span class="n">results</span> <span class="n">found</span><span class="o">.</span> <span class="no">Please</span> <span class="n">try</span> <span class="n">again</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Which is equivalent to:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="vi">@products</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="no">No</span> <span class="n">results</span> <span class="n">found</span><span class="o">.</span>  <span class="no">Please</span> <span class="n">try</span> <span class="n">again</span><span class="o">.</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Slim will auto close your Ruby code as well, so end isn&#8217;t needed.
</p>




<p>
  If you have code that returns output, such as the printing of a variable or property, you can use the equal (=) sign.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">=</span> <span class="n">current_user</span><span class="o">.</span><span class="n">name</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Which is equivalent to:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">current_user</span><span class="o">.</span><span class="n">name</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Your strings are Rubyized:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">|</span> <span class="no">Hello</span> <span class="c1">#{user.name}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can embed javascript as well:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">javascript</span><span class="p">:</span>
</span><span class='line'>  <span class="n">alert</span><span class="p">(</span><span class="s2">&quot;hello world!&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, That&#8217;s it! See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Customize the Ruby on Rails Application Generator]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/22/customize-the-ruby-on-rails-application-generator/"/>
    <updated>2015-02-22T13:05:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/22/customize-the-ruby-on-rails-application-generator</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Customize the Ruby on Rails Application Generator" />
</p>




<p>
  So far if you create a Rails app, you know that it can quickly to do things like:<br/>
  - Add RSpec and Cucumber.<br/>
  - Disable/turn off Test Unit.<br/>
  - Switch the default database engine to PostgreSQL.<br/>
  - Add other Gems such as HAML, CoffeeScript, &#8230;
</p>




<p>
  Luckily we can customize what the Rails app generator generates. In this article, I will use Rails app templates to customize the default behavior of the Rails application generator. Let’s run through this with me.
</p>




<p>
  <strong>Rails App Templates</strong><br/>
  Rails app templates allow you to run actual commands during the generation process. For example, I want to install rspec and haml, create a readme.md file, and commit the whole thing to git. I can easily do this by creating an Rails application template. Let create a file called app_template.rb and add the codes below:
</p>




<figure class='code'><figcaption><span>app_template.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">remove_file</span> <span class="s1">&#39;README.doc&#39;</span>
</span><span class='line'><span class="n">create_file</span> <span class="s1">&#39;README.md&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rspec-rails&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;haml-rails&#39;</span>
</span><span class='line'><span class="n">run</span> <span class="s1">&#39;bundle install&#39;</span>
</span><span class='line'><span class="n">generate</span> <span class="s1">&#39;rspec:install&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="ss">:init</span>
</span><span class='line'><span class="n">git</span> <span class="ss">add</span><span class="p">:</span> <span class="s1">&#39;--all&#39;</span><span class="p">,</span> <span class="ss">commit</span><span class="p">:</span> <span class="s1">&#39;-m &quot;Initialize Commit&quot;&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  If you generate a new app with the parameters <code>-m app_template.rb</code> it will run the instructions you listed in the template. The code listed above will get executed when you run the following command:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">blog</span> <span class="o">-</span><span class="n">m</span> <span class="n">app_template</span><span class="o">.</span><span class="n">rb</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  If you browse your Rails project you&#8217;ll see that rspec, haml got installed and the default readme file was removed and a readme.md file was added, and finally everything was committed to git.
</p>




<p>
  In addition, you can have the application template prompt the user for more information. The code listed below allows you to do like this:
</p>




<figure class='code'><figcaption><span>app_template.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">remove_file</span> <span class="s1">&#39;README.doc&#39;</span>
</span><span class='line'><span class="n">create_file</span> <span class="s1">&#39;README.md&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rspec-rails&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;haml-rails&#39;</span>
</span><span class='line'><span class="n">run</span> <span class="s1">&#39;bundle install&#39;</span>
</span><span class='line'><span class="n">generate</span> <span class="s1">&#39;rspec:install&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">yes?</span> <span class="s1">&#39;Do you wish to generate a root controller? (y/n)&#39;</span>
</span><span class='line'>  <span class="nb">name</span> <span class="o">=</span> <span class="n">ask</span><span class="p">(</span><span class="s1">&#39;What do you want to call it?&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">underscore</span>
</span><span class='line'>  <span class="n">generate</span> <span class="ss">:controller</span><span class="p">,</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2"> show&quot;</span>
</span><span class='line'>  <span class="n">route</span> <span class="s2">&quot;root to: &#39;</span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="se">\#</span><span class="s2">show&#39;&quot;</span>
</span><span class='line'>  <span class="n">route</span> <span class="s2">&quot;resource :</span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">, only: [:show]&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="ss">:init</span>
</span><span class='line'><span class="n">git</span> <span class="ss">add</span><span class="p">:</span> <span class="s1">&#39;--all&#39;</span><span class="p">,</span> <span class="ss">commit</span><span class="p">:</span> <span class="s1">&#39;-m &quot;Initial Commit&quot;&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  In the code above, the yes? function will prompt the user with a yes/no question. The ask function will prompt the user for text input. In this case, we ask the user if they wish to generate a root controller, and if they say yes, we prompt them for a name.
</p>




<p>
  So far so good, That&#8217;s it! See ya!
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Liquid on Rails]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/21/liquid-on-rails/"/>
    <updated>2015-02-21T22:59:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/21/liquid-on-rails</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/move_to_rails.png" alt="Liquid on Rails" />
</p>




<p>
  Now you have a basic grasp on the Liquid template engine itself, let&#8217;s learn how to utilize it in our Ruby on Rails application. First you need to add the gem to the Gemfile. Add the following line to the Gemfile:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;liquid&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 2.6.1&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then run <code>bundle install</code> to install the Liquid gem:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then create a model called Page. The Page model will be used to represent a page owned by a specific user. Run the commands below to create this model:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">Page</span> <span class="ss">user</span><span class="p">:</span><span class="n">string</span> <span class="ss">template</span><span class="p">:</span><span class="n">text</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then open up your seeds (<code>db/seeds.rb</code>) file and modify it so that it looks somethings like below:
</p>




<figure class='code'><figcaption><span>seeds </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Page</span><span class="o">.</span><span class="n">delete_all</span>
</span><span class='line'>
</span><span class='line'><span class="no">Page</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;JingLong&quot;</span><span class="p">,</span> <span class="ss">template</span><span class="p">:</span> <span class="sx">%{</span>
</span><span class='line'><span class="sx">  Hello {{ user }}, here is your shopping list.</span>
</span><span class='line'><span class="sx">  &lt;ul&gt;</span>
</span><span class='line'><span class="sx">    {% for item in list %}</span>
</span><span class='line'><span class="sx">      &lt;li&gt;{{ item.name }}&lt;/li&gt;</span>
</span><span class='line'><span class="sx">    {% endfor %}</span>
</span><span class='line'><span class="sx">  &lt;/ul&gt;</span>
</span><span class='line'><span class="sx">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">Page</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;Bunlong&quot;</span><span class="p">,</span> <span class="ss">template</span><span class="p">:</span> <span class="sx">%{</span>
</span><span class='line'><span class="sx">  What is up my man? Here is your shopping list.</span>
</span><span class='line'><span class="sx">  &lt;ul&gt;</span>
</span><span class='line'><span class="sx">    {% for item in list %}</span>
</span><span class='line'><span class="sx">      &lt;li&gt;{{ item.name }}&lt;/li&gt;</span>
</span><span class='line'><span class="sx">    {% endfor %}</span>
</span><span class='line'><span class="sx">  &lt;/ul&gt;</span>
</span><span class='line'><span class="sx">}</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">Page</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="nb">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;Rubyist&quot;</span><span class="p">,</span> <span class="ss">template</span><span class="p">:</span> <span class="sx">%{</span>
</span><span class='line'><span class="sx">  HTTP 200:  Shopping List Found</span>
</span><span class='line'>
</span><span class='line'><span class="sx">  Items in your list:</span>
</span><span class='line'><span class="sx">  &lt;ul&gt;</span>
</span><span class='line'><span class="sx">    {% for item in list %}</span>
</span><span class='line'><span class="sx">      &lt;li&gt;{{ item.name }}&lt;/li&gt;</span>
</span><span class='line'><span class="sx">    {% endfor %}</span>
</span><span class='line'><span class="sx">  &lt;/ul&gt;</span>
</span><span class='line'><span class="sx">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then run <code>rake db:seed</code> command to seed the database with your sample data:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">seed</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then create a homes controller that will allow you to play with liquid. Run the command below to create the homes controller:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="no">Homes</span> <span class="n">show</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then create a pages controller. This controller will be used to display a user&#8217;s page. Run the commands below to create the pages controller:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="no">Pages</span> <span class="n">show</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then modify your routes (<code>config/routes.rb</code>) file so that it looks somethings like below:
</p>




<figure class='code'><figcaption><span>routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="s2">&quot;homes#show&quot;</span>
</span><span class='line'><span class="n">resource</span> <span class="ss">:home</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:show</span><span class="o">]</span>
</span><span class='line'><span class="n">resources</span> <span class="ss">:pages</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:show</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then modify your homes controller (<code>app/controllers/homes_controller.rb</code>) to pull down a list of all the user&#8217;s pages. Open up your homes controller and modify it so that it looks somethings like below:
</p>




<figure class='code'><figcaption><span>homes_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">HomesController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="vi">@pages</span> <span class="o">=</span> <span class="no">Page</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then modify your pages controller (<code>app/controllers/pages_controller.rb</code>) to pull down the correct page for the specified user. Open up your pages controller and modify it so that it looks somethings like below:
</p>




<figure class='code'><figcaption><span>pages_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PagesController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="vi">@page</span> <span class="o">=</span> <span class="no">Page</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then create a few helper (<code>app/helpers/pages_helper.rb</code>) methods for use with this example. Open up your pages helper and modify it so that it looks somethings like below:
</p>




<figure class='code'><figcaption><span>pages_helper.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">PagesHelper</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">shopping_list</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span><span class="s2">&quot;user&quot;</span> <span class="o">=&gt;</span> <span class="n">user</span><span class="p">,</span> <span class="s2">&quot;list&quot;</span> <span class="o">=&gt;</span> <span class="n">shopping_list_items</span><span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">shopping_list_items</span>
</span><span class='line'>    <span class="o">[</span>
</span><span class='line'>      <span class="p">{</span> <span class="s2">&quot;name&quot;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Apple&#39;</span><span class="p">,</span> <span class="s2">&quot;quantity_needed&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;2&quot;</span><span class="p">},</span>
</span><span class='line'>      <span class="p">{</span> <span class="s2">&quot;name&quot;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Stoberry&#39;</span><span class="p">,</span> <span class="s2">&quot;quantity_needed&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;1&quot;</span><span class="p">},</span>
</span><span class='line'>      <span class="p">{</span> <span class="s2">&quot;name&quot;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Cherry&#39;</span><span class="p">,</span> <span class="s2">&quot;quantity_needed&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;3&quot;</span><span class="p">},</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  The codes above gives you some sample data to play around with.
</p>




<p>
  Then modify your pages show view (<code>pp/views/pages/show.html.erb</code>) to look somethings like below:
</p>




<figure class='code'><figcaption><span>show.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&lt;</span><span class="sx">%= @page.user %&gt;&#39;s Personal Page&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;% template =</span> <span class="ss">Liquid</span><span class="p">:</span><span class="ss">:Template</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="vi">@page</span><span class="o">.</span><span class="n">template</span><span class="p">)</span> <span class="sx">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;%= template.render(shopping_list(@page.user)).html_safe %&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  The codes above tells Rails to render your template using the Liquid Template Engine. 
</p>




<p>
  Finally, open up the show view for your home controller (<code>app/views/homes/show.html.erb</code>) and add in the code listed below:
</p>




<figure class='code'><figcaption><span>show.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">User</span> <span class="no">Pages</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'><span class="sr">&lt;ul&gt;</span>
</span><span class='line'><span class="sr">  &lt;% @pages.each do |page| %&gt;</span>
</span><span class='line'><span class="sr">    &lt;li&gt;&lt;%= link_to &quot;</span><span class="si">#{</span><span class="n">page</span><span class="o">.</span><span class="n">user</span><span class="si">}</span><span class="sr">&#39;s page&quot;, page_path(page) %&gt;&lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx">&lt;/ul&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  If you fire up a rails server and visit your development site, you&#8217;ll notice that you can browse each user&#8217;s pages and get a customized version of each one. 
</p>




<p>
  However, what if you want to use the Liquid templating engine as a replacement for erb itself? take it easy, first, create a new file in the lib folder called liquid_view.rb (<code>lib/liquid_view.rb</code>) and add in the codes listed below:
</p>




<figure class='code'><figcaption><span>liquid_view.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">LiquidView</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">call</span><span class="p">(</span><span class="n">template</span><span class="p">)</span>
</span><span class='line'>    <span class="s2">&quot;LiquidView.new(self).render(</span><span class="si">#{</span><span class="n">template</span><span class="o">.</span><span class="n">source</span><span class="o">.</span><span class="n">inspect</span><span class="si">}</span><span class="s2">, local_assigns)&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">view</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@view</span> <span class="o">=</span> <span class="n">view</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">render</span><span class="p">(</span><span class="n">template</span><span class="p">,</span> <span class="n">local_assigns</span> <span class="o">=</span> <span class="p">{})</span>
</span><span class='line'>    <span class="vi">@view</span><span class="o">.</span><span class="n">controller</span><span class="o">.</span><span class="n">headers</span><span class="o">[</span><span class="s2">&quot;Content-Type&quot;</span><span class="o">]</span> <span class="o">||=</span> <span class="s1">&#39;text/html; charset=utf-8&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">assigns</span> <span class="o">=</span> <span class="vi">@view</span><span class="o">.</span><span class="n">assigns</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@view</span><span class="o">.</span><span class="n">content_for?</span><span class="p">(</span><span class="ss">:layout</span><span class="p">)</span>
</span><span class='line'>      <span class="n">assigns</span><span class="o">[</span><span class="s2">&quot;content_for_layout&quot;</span><span class="o">]</span> <span class="o">=</span> <span class="vi">@view</span><span class="o">.</span><span class="n">content_for</span><span class="p">(</span><span class="ss">:layout</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="n">assigns</span><span class="o">.</span><span class="n">merge!</span><span class="p">(</span><span class="n">local_assigns</span><span class="o">.</span><span class="n">stringify_keys</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">controller</span> <span class="o">=</span> <span class="vi">@view</span><span class="o">.</span><span class="n">controller</span>
</span><span class='line'>    <span class="n">filters</span> <span class="o">=</span> <span class="k">if</span> <span class="n">controller</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:liquid_filters</span><span class="p">,</span> <span class="kp">true</span><span class="p">)</span>
</span><span class='line'>                <span class="n">controller</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:liquid_filters</span><span class="p">)</span>
</span><span class='line'>              <span class="k">elsif</span> <span class="n">controller</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:master_helper_module</span><span class="p">)</span>
</span><span class='line'>                <span class="o">[</span><span class="n">controller</span><span class="o">.</span><span class="n">master_helper_module</span><span class="o">]</span>
</span><span class='line'>              <span class="k">else</span>
</span><span class='line'>                <span class="o">[</span><span class="n">controller</span><span class="o">.</span><span class="n">_helpers</span><span class="o">]</span>
</span><span class='line'>              <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">liquid</span> <span class="o">=</span> <span class="ss">Liquid</span><span class="p">:</span><span class="ss">:Template</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">template</span><span class="p">)</span>
</span><span class='line'>    <span class="n">liquid</span><span class="o">.</span><span class="n">render</span><span class="p">(</span><span class="n">assigns</span><span class="p">,</span> <span class="ss">:filters</span> <span class="o">=&gt;</span> <span class="n">filters</span><span class="p">,</span> <span class="ss">:registers</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="ss">:action_view</span> <span class="o">=&gt;</span> <span class="vi">@view</span><span class="p">,</span> <span class="ss">:controller</span> <span class="o">=&gt;</span> <span class="vi">@view</span><span class="o">.</span><span class="n">controller</span><span class="p">})</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">compilable?</span>
</span><span class='line'>    <span class="kp">false</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Create an initializer called liquid_template_handler (<code>config/initializers/liquid_template_handler.rb</code>) and add the code listed below:
</p>




<figure class='code'><figcaption><span>liquid_template_handler.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;liquid_view&#39;</span>
</span><span class='line'><span class="ss">ActionView</span><span class="p">:</span><span class="ss">:Template</span><span class="o">.</span><span class="n">register_template_handler</span> <span class="ss">:liquid</span><span class="p">,</span> <span class="no">LiquidView</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Let restarting your Rails server you will be able to create actual views with the .liquid extension that uses the liquid templating engine.
</p>




<p>
  So far so good, That&#8217;s it! See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Liquid Template Engine]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/21/liquid-template-engine/"/>
    <updated>2015-02-21T15:00:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/21/liquid-template-engine</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/move_to_rails.png" alt="Liquid Template Engine" />
</p>




<p>
  Liquid is a templating engine that allows you to enable your users to quickly and easily customize your views at run-time while maintaining the safety, security, and integrity of your servers.
</p>




<p>
  <strong>Liquid Syntax</strong><br/>
  In liquid, there are two different types of markup.
</p>




<p>
  The first type of markup is output markup, is denoted by double sets of curly braces.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Hi</span> <span class="p">{{</span> <span class="n">user</span><span class="o">.</span><span class="n">name</span> <span class="p">}}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  The second type of markup is tag markup, is typically used for logic and control structures such as loops.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="p">{</span><span class="o">%</span> <span class="k">for</span> <span class="n">user</span> <span class="k">in</span> <span class="n">users</span> <span class="sx">%}</span>
</span><span class='line'><span class="sx">    &lt;li&gt;{{ user.name }</span><span class="p">}</span><span class="o">&lt;</span><span class="sr">/li&gt;</span>
</span><span class='line'><span class="sr">  {% endfor %}</span>
</span><span class='line'><span class="sr">&lt;/u</span><span class="n">l</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can do basic if statements as well:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span><span class="o">%</span> <span class="k">if</span> <span class="n">user</span><span class="o">.</span><span class="n">name</span> <span class="o">!=</span> <span class="s1">&#39;JingLong&#39;</span> <span class="sx">%}</span>
</span><span class='line'><span class="sx">  Hi JingLong!</span>
</span><span class='line'><span class="sx">{% elsif user.name == &#39;Bunlong&#39; %}</span>
</span><span class='line'>  <span class="no">Hey</span> <span class="no">Bunlong</span><span class="o">!</span>
</span><span class='line'><span class="p">{</span><span class="o">%</span> <span class="k">else</span> <span class="sx">%}</span>
</span><span class='line'><span class="sx">  Hello {{ user.name }</span><span class="p">}</span>
</span><span class='line'><span class="p">{</span><span class="o">%</span> <span class="n">endif</span> <span class="o">%</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>List of All of the Tags Available in Liquid</strong><br/>
</p>


<table>
<thead>
<tr>
<th>Tag </th>
<th> Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>assign </td>
<td> Assigns some value to a variable.</td>
</tr>
<tr>
<td>capture </td>
<td> Block tag that captures text into a variable.</td>
</tr>
<tr>
<td>case </td>
<td> Block tag, its the standard case&hellip;when block.</td>
</tr>
<tr>
<td>comment </td>
<td> Block tag, comments out the text in the block.</td>
</tr>
<tr>
<td>cycle </td>
<td> Cycle is usually used within a loop to alternate between values, like colors or DOM classes.</td>
</tr>
<tr>
<td>for </td>
<td> For loop.</td>
</tr>
<tr>
<td>if </td>
<td> Standard if/else block.</td>
</tr>
<tr>
<td>include </td>
<td> Includes another template; useful for partials.</td>
</tr>
<tr>
<td>raw </td>
<td> Temporarily disable tag processing to avoid syntax conflicts.</td>
</tr>
<tr>
<td>unless </td>
<td> Mirror of if statement.</td>
</tr>
</tbody>
</table>


<p>
  <br/>
  So far so good, That’s it! See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is Difference Between Path and URL in Ruby on Rails?]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/21/what-is-difference-between-path-and-url-in-ruby-on-rails/"/>
    <updated>2015-02-21T11:23:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/21/what-is-difference-between-path-and-url-in-ruby-on-rails</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/move_to_rails.png" alt="What is Difference Between Path and URL in Ruby on Rails?" />
</p>




<p>
  Have you ever wondered what is difference between <code>_path</code> and <code>_url</code> in Ruby on Rails?
</p>




<p>
  For example <code>root_path</code> and <code>root_url</code>. As it turns out, <code>_path</code> only returns the url relative to your domain. 
</p>




<p>
  For instance, <code>root_path</code> returns <code>/</code> while <code>root_url</code> returns <code>http://mydomain.com/</code>.
</p>




<p>
  You should always use <code>_url</code> for redirects and <code>_path</code> for hyperlinks unless you have a good reason not to do so.
</p>




<p>
  So far so good, That&#8217;s it! See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Stashing Codes Changes in Git]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/20/stashing-codes-changes-in-git/"/>
    <updated>2015-02-20T19:53:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/20/stashing-codes-changes-in-git</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/logo_git.png" alt="Stashing Codes Changes in Git" />
</p>




<p>
  Using version control, is best to commit your code in small, discrete chunks rather than making large commits. However, What happens when you are working on a large change, and your boss comes to you and tells you they need an urgent bug fixed? With the git stash command you can quickly and easily store your code away and recall it for later use. Let’s run through this with me.
</p>




<p>
  <strong>Stash the Code</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">stash</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Reapply the Changes You Sent to the Stash Type</strong><br/>
  What if you want to reapply your changes? Use <code>git stash apply</code> to reapply all the changes you stashed away with git stash.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">stash</span> <span class="n">apply</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>List All of the Stashes You&#8217;ve Made Type</strong><br/>
  Git stash supports stashing multiple times. To see a list of all the code you&#8217;ve stashed, use <code>git stash list</code>. The git stash list will show you a list of all the stashes you&#8217;ve made.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">stash</span> <span class="n">list</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Stash Apply From the Earlier List</strong><br/>
  If the first stash is named stash@{1}, you can type <code>git stash apply stash@{1}</code> to apply the changes from that stash.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">stash</span> <span class="n">apply</span> <span class="n">stash</span><span class="err">@</span><span class="p">{</span><span class="mi">1</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, That&#8217;s it! See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secrets.yml File in Ruby on Rails]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/20/secrets-dot-yml-file-in-ruby-on-rails/"/>
    <updated>2015-02-20T00:40:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/20/secrets-dot-yml-file-in-ruby-on-rails</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/move_to_rails.png" alt="Secrets.yml File in Ruby on Rails" />
</p>




<p>
  You maybe have noticed a file called <code>secrets.yml</code> in the config directory of a Ruby on Rails 4.1 project. This feature was added as part of Rails 4.1 in order to have a common storage location for the keys and credentials for various services. You can use the secrets.yml for everything from AWS credentials to your secret_key_base (the default in Rails 4.1).
</p>




<figure class='code'><figcaption><span>secrets.yml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">development</span><span class="p">:</span>
</span><span class='line'>  <span class="n">secret_key_base</span><span class="p">:</span> <span class="n">super_long_secret_key_for_development</span>
</span><span class='line'>  <span class="n">active_merchant_login</span><span class="p">:</span> <span class="mi">112233</span>
</span><span class='line'>  <span class="n">active_merchant_password</span><span class="p">:</span> <span class="n">super_secret_password</span>
</span><span class='line'>
</span><span class='line'><span class="nb">test</span><span class="p">:</span>
</span><span class='line'>  <span class="n">secret_key_base</span><span class="p">:</span> <span class="n">super_long_secret_key_for_test</span>
</span><span class='line'>  <span class="n">active_merchant_login</span><span class="p">:</span> <span class="mi">112233</span>
</span><span class='line'>  <span class="n">active_merchant_password</span><span class="p">:</span> <span class="n">super_secret_password</span>
</span><span class='line'>
</span><span class='line'><span class="ss">production</span><span class="p">:</span>
</span><span class='line'>  <span class="n">secret_key_base</span><span class="p">:</span> <span class="o">&lt;</span><span class="sx">%= ENV[&quot;SECRET_KEY_BASE&quot;] %&gt;</span>
</span><span class='line'><span class="sx">  active_merchant_login: &lt;%=</span> <span class="no">ENV</span><span class="o">[</span><span class="s2">&quot;AM_LOGIN&quot;</span><span class="o">]</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  active_merchant_password: &lt;%= ENV[&quot;AM_PASSWORD&quot;] %&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You have add this file to your <code>.gitignore</code> file to avoid accidently pushing your keys to git. You can also store your production keys in this file if you wish.
</p>




<p>
  To access the various keys in the secrets.yml file:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">secrets</span><span class="o">.</span><span class="n">key_name</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Example: The following code will returns the merchant login.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">secrets</span><span class="o">.</span><span class="n">active_merchant_login</span> <span class="c1"># returns 112233 on development/test</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, That&#8217;s it! See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Model Change Tracking with ActiveModel::Dirty]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/19/ruby-on-rails-model-change-tracking-with-activemodel-dirty/"/>
    <updated>2015-02-19T09:09:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/19/ruby-on-rails-model-change-tracking-with-activemodel-dirty</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/move_to_rails.png" alt="Ruby on Rails Model Change Tracking with ActiveModel::Dirty" />
</p>




<p>
  ActiveModel::Dirty is a library that is built into Ruby on Rails that allows you to quickly and easily track what attributes on a model have changed. This article will show you how to use it.
</p>




<p>
  <strong>Checking Whenever the Model Has Changed</strong><br/>
  Checking whether the model has changed using the <code>changed?</code> method:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">product</span><span class="o">.</span><span class="n">changed?</span>  <span class="c1"># =&gt; false</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  If you change an attribute on the model, the <code>changed?</code> method will returns true:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">product</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;Mac Pro&quot;</span>
</span><span class='line'><span class="n">product</span><span class="o">.</span><span class="n">changed?</span> <span class="c1"># =&gt; true</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Tracking the Change</strong><br/>
  You can track what the change by using the <code>attr_change</code> method:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">product</span><span class="o">.</span><span class="n">name_change</span> <span class="c1"># =&gt; [&quot;Mac Pro&quot;, &quot;IBM ThinkPad&quot;]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can get a list of all of the changed attributes on the model as well:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">product</span><span class="o">.</span><span class="n">changed</span> <span class="c1"># =&gt; [&quot;name&quot;]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can get the original value using the <code>attr_was</code> method as well:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">product</span><span class="o">.</span><span class="n">name_was</span> <span class="c1">#=&gt; &quot;IBM ThinkPad&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can view a list of all of the original values using the <code>changed_attributes</code> method as well:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">product</span><span class="o">.</span><span class="n">changed_attributes</span> <span class="c1"># =&gt; {&quot;name&quot; =&gt; &quot;IBM ThinkPad&quot;}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can list all of the changes on the model using the <code>changes</code> method as well:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">product</span><span class="o">.</span><span class="n">changes</span> <span class="c1"># =&gt; {&quot;name&quot; =&gt; [&quot;IBM ThinkPad&quot;, &quot;Mac Pro&quot;]}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can view changes that were made even after the model was saved using the <code>previous_changes</code> method as well:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">pre</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;prettyprint&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="n">product</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>  <span class="n">product</span><span class="o">.</span><span class="n">changes</span> <span class="c1"># =&gt; {}</span>
</span><span class='line'>  <span class="n">product</span><span class="o">.</span><span class="n">previous_changes</span> <span class="c1"># =&gt; {&quot;name&quot; =&gt; [&quot;IBM ThinkPad&quot;, &quot;Mac Pro&quot;]}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/pre&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can view changes that were made even after the model was saved using the <code>previous_changes</code> method as well:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">pre</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;prettyprint&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="n">product</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>  <span class="n">product</span><span class="o">.</span><span class="n">changes</span> <span class="c1"># =&gt; {}</span>
</span><span class='line'>  <span class="n">product</span><span class="o">.</span><span class="n">previous_changes</span> <span class="c1"># =&gt; {&quot;name&quot; =&gt; [&quot;IBM ThinkPad&quot;, &quot;Mac Pro&quot;]}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/pre&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can reset the model using the reload! method as well:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">product</span><span class="o">.</span><span class="n">reload!</span>
</span><span class='line'><span class="n">product</span><span class="o">.</span><span class="n">previous_changes</span> <span class="c1"># =&gt; {}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, for more detail <a href="http://api.rubyonrails.org/classes/ActiveModel/Dirty.html" target="_blank">Ruby on Rails API</a>. That&#8217;s it! See ya!
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Download File via FTP]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/18/ruby-download-file-via-ftp/"/>
    <updated>2015-02-18T23:24:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/18/ruby-download-file-via-ftp</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/rights_and_wrongsof_ruby.jpg" width="400" alt="Ruby Download File via FTP" />
</p>




<p>
  Download files from FTP server is quite easy using Ruby.
</p>




<p>
  Example:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;net/ftp&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">ftp</span> <span class="o">=</span> <span class="ss">Net</span><span class="p">:</span><span class="ss">:FTP</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">ftp</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="s2">&quot;your_host_name.com&quot;</span><span class="p">,</span> <span class="mi">21</span><span class="p">)</span>
</span><span class='line'><span class="n">ftp</span><span class="o">.</span><span class="n">login</span><span class="p">(</span><span class="s2">&quot;your_username&quot;</span><span class="p">,</span><span class="s2">&quot;your_password&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">ftp</span><span class="o">.</span><span class="n">chdir</span><span class="p">(</span><span class="s2">&quot;/your_directory&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">ftp</span><span class="o">.</span><span class="n">passive</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="n">ftp</span><span class="o">.</span><span class="n">getbinaryfile</span><span class="p">(</span><span class="s2">&quot;your_source_file&quot;</span><span class="p">,</span> <span class="s2">&quot;your_dest_file&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, That&#8217;s it! See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Parsing JSON]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/18/ruby-on-rails-parsing-json/"/>
    <updated>2015-02-18T22:27:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/18/ruby-on-rails-parsing-json</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails Parsing JSON" />
</p>




<p>
  Sometime you have to deal with parsing out JSON. Luckily, this is very easy in any recent version of Ruby. Given the string below:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;products&quot;</span><span class="p">:</span> <span class="o">[</span><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Mac Pro&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;price&quot;</span><span class="p">:</span> <span class="s2">&quot;2500&quot;</span>
</span><span class='line'>  <span class="p">}</span><span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can easily parse this string by using:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;json&#39;</span>
</span><span class='line'><span class="n">h</span> <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  In the above code, it will return a ruby hash that mimics the JSON structure. This means that you can do stuff like this:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h</span><span class="o">[</span><span class="s2">&quot;products&quot;</span><span class="o">][</span><span class="mi">0</span><span class="o">][</span><span class="s2">&quot;name&quot;</span><span class="o">]</span> <span class="c1"># =&gt; &quot;Mac Pro&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, that&#8217;s it! See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What does Gemfile.lock File use for in Ruby on Rails?]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/18/what-does-gemfile-dot-lock-file-use-for-in-ruby-on-rails/"/>
    <updated>2015-02-18T20:35:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/18/what-does-gemfile-dot-lock-file-use-for-in-ruby-on-rails</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="What does Gemfile.lock File use for in Ruby on Rails?" />
</p>




<p>
  You have noticed a file called Gemfile.lock in your Ruby on Rails application and have wondered what is it, how it works. The file may have even given you trouble when you attempted to push changes to source control. In this article I will discuss what exactly this Gemfile.lock file is and how it helps your Ruby on Rails application.
</p>




<p>
  <strong>Gemfile.lock</strong><br/>
  If you actually opened the Gemfile.lock file you probably saw a bunch of text as below:
</p>




<figure class='code'><figcaption><span>Gemfile.lock </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">GEM</span>
</span><span class='line'>  <span class="ss">remote</span><span class="p">:</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">rubygems</span><span class="o">.</span><span class="n">org</span><span class="o">/</span>
</span><span class='line'>  <span class="ss">specs</span><span class="p">:</span>
</span><span class='line'>    <span class="n">actionmailer</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">actionpack</span> <span class="p">(</span><span class="o">=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">mail</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'>    <span class="n">actionpack</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activesupport</span> <span class="p">(</span><span class="o">=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">builder</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">erubis</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">7</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">rack</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">rack</span><span class="o">-</span><span class="nb">test</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mi">6</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">activemodel</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activesupport</span> <span class="p">(</span><span class="o">=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">builder</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">activenavbar</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">activerecord</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activemodel</span> <span class="p">(</span><span class="o">=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activerecord</span><span class="o">-</span><span class="n">deprecated_finders</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activesupport</span> <span class="p">(</span><span class="o">=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">arel</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">activerecord</span><span class="o">-</span><span class="n">deprecated_finders</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'>    <span class="n">activesupport</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">i18n</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mi">6</span><span class="p">,</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="o">.</span><span class="mi">6</span><span class="o">.</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'>      <span class="n">minitest</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">multi_json</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'>      <span class="n">thread_safe</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">tzinfo</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">37</span><span class="p">)</span>
</span><span class='line'>    <span class="n">arel</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">atomic</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">16</span><span class="p">)</span>
</span><span class='line'>    <span class="n">bootstrap</span><span class="o">-</span><span class="n">sass</span> <span class="p">(</span><span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">sass</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">builder</span> <span class="p">(</span><span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'>    <span class="n">capybara</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">mime</span><span class="o">-</span><span class="n">types</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">16</span><span class="p">)</span>
</span><span class='line'>      <span class="n">nokogiri</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'>      <span class="n">rack</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">rack</span><span class="o">-</span><span class="nb">test</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">0</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'>      <span class="n">xpath</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">coderay</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">coffee</span><span class="o">-</span><span class="n">rails</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">coffee</span><span class="o">-</span><span class="n">script</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">railties</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">coffee</span><span class="o">-</span><span class="n">script</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">coffee</span><span class="o">-</span><span class="n">script</span><span class="o">-</span><span class="n">source</span>
</span><span class='line'>      <span class="n">execjs</span>
</span><span class='line'>    <span class="n">coffee</span><span class="o">-</span><span class="n">script</span><span class="o">-</span><span class="n">source</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">7</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">columnize</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">6</span><span class="p">)</span>
</span><span class='line'>    <span class="n">database_cleaner</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">debugger</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">6</span><span class="o">.</span><span class="mi">6</span><span class="p">)</span>
</span><span class='line'>      <span class="n">columnize</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">debugger</span><span class="o">-</span><span class="n">linecache</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">debugger</span><span class="o">-</span><span class="n">ruby_core_source</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">debugger</span><span class="o">-</span><span class="n">linecache</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">debugger</span><span class="o">-</span><span class="n">ruby_core_source</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">diff</span><span class="o">-</span><span class="n">lcs</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'>    <span class="n">erubis</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">7</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">execjs</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">factory_girl</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activesupport</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">factory_girl_rails</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">factory_girl</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">railties</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">haml</span> <span class="p">(</span><span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">8</span><span class="p">)</span>
</span><span class='line'>    <span class="n">haml</span><span class="o">-</span><span class="n">rails</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'>      <span class="n">actionpack</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="p">,</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activesupport</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="p">,</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">haml</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">railties</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="p">,</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">hike</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'>    <span class="n">i18n</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">6</span><span class="o">.</span><span class="mi">9</span><span class="p">)</span>
</span><span class='line'>    <span class="n">jbuilder</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activesupport</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">multi_json</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">jquery</span><span class="o">-</span><span class="n">rails</span> <span class="p">(</span><span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">railties</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">thor</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">0</span><span class="o">.</span><span class="mi">14</span><span class="p">,</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">json</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">8</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">mail</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'>      <span class="n">mime</span><span class="o">-</span><span class="n">types</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">16</span><span class="p">)</span>
</span><span class='line'>      <span class="n">treetop</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">4</span><span class="o">.</span><span class="mi">8</span><span class="p">)</span>
</span><span class='line'>    <span class="n">method_source</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">8</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">mime</span><span class="o">-</span><span class="n">types</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">25</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">mini_portile</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">minitest</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">7</span><span class="o">.</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'>    <span class="n">multi_json</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">mysql2</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">15</span><span class="p">)</span>
</span><span class='line'>    <span class="n">nokogiri</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">6</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">mini_portile</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">olive</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">polyglot</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'>    <span class="n">pry</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">12</span><span class="o">.</span><span class="mi">6</span><span class="p">)</span>
</span><span class='line'>      <span class="n">coderay</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">method_source</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mi">8</span><span class="p">)</span>
</span><span class='line'>      <span class="n">slop</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">3</span><span class="o">.</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'>    <span class="n">pry</span><span class="o">-</span><span class="n">debugger</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">debugger</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'>      <span class="n">pry</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'>    <span class="n">quiet_assets</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">railties</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="p">,</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rack</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rack</span><span class="o">-</span><span class="nb">test</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">6</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">rack</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rails</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">actionmailer</span> <span class="p">(</span><span class="o">=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">actionpack</span> <span class="p">(</span><span class="o">=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activerecord</span> <span class="p">(</span><span class="o">=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activesupport</span> <span class="p">(</span><span class="o">=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">bundler</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">railties</span> <span class="p">(</span><span class="o">=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">sprockets</span><span class="o">-</span><span class="n">rails</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">railties</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">actionpack</span> <span class="p">(</span><span class="o">=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activesupport</span> <span class="p">(</span><span class="o">=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">rake</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">0</span><span class="o">.</span><span class="mi">8</span><span class="o">.</span><span class="mi">7</span><span class="p">)</span>
</span><span class='line'>      <span class="n">thor</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">0</span><span class="o">.</span><span class="mi">18</span><span class="o">.</span><span class="mi">1</span><span class="p">,</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rake</span> <span class="p">(</span><span class="mi">10</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rdoc</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">json</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rspec</span><span class="o">-</span><span class="n">core</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">14</span><span class="o">.</span><span class="mi">8</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rspec</span><span class="o">-</span><span class="n">expectations</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">14</span><span class="o">.</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'>      <span class="n">diff</span><span class="o">-</span><span class="n">lcs</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">3</span><span class="p">,</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rspec</span><span class="o">-</span><span class="n">mocks</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">14</span><span class="o">.</span><span class="mi">6</span><span class="p">)</span>
</span><span class='line'>    <span class="n">rspec</span><span class="o">-</span><span class="n">rails</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">14</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">actionpack</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activemodel</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activesupport</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">railties</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">rspec</span><span class="o">-</span><span class="n">core</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">14</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">rspec</span><span class="o">-</span><span class="n">expectations</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">14</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">rspec</span><span class="o">-</span><span class="n">mocks</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">14</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">sass</span> <span class="p">(</span><span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">15</span><span class="p">)</span>
</span><span class='line'>    <span class="n">sass</span><span class="o">-</span><span class="n">rails</span> <span class="p">(</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">railties</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">sass</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">3</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">sprockets</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">8</span><span class="p">,</span> <span class="o">&lt;=</span> <span class="mi">2</span><span class="o">.</span><span class="mi">11</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">sprockets</span><span class="o">-</span><span class="n">rails</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">sdoc</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">json</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">8</span><span class="p">)</span>
</span><span class='line'>      <span class="n">rdoc</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">shoulda</span><span class="o">-</span><span class="n">matchers</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activesupport</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">slop</span> <span class="p">(</span><span class="mi">3</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">sprockets</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">11</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">hike</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>      <span class="n">multi_json</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">rack</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">tilt</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="p">,</span> <span class="o">!=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">sprockets</span><span class="o">-</span><span class="n">rails</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">actionpack</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">activesupport</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">sprockets</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">8</span><span class="p">)</span>
</span><span class='line'>    <span class="n">thor</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">18</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">thread_safe</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">atomic</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">7</span><span class="p">,</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'>    <span class="n">tilt</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">4</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">treetop</span> <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="mi">4</span><span class="o">.</span><span class="mi">15</span><span class="p">)</span>
</span><span class='line'>      <span class="n">polyglot</span>
</span><span class='line'>      <span class="n">polyglot</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>    <span class="n">turbolinks</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>      <span class="n">coffee</span><span class="o">-</span><span class="n">rails</span>
</span><span class='line'>    <span class="n">tzinfo</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">39</span><span class="p">)</span>
</span><span class='line'>    <span class="n">uglifier</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">execjs</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">json</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">8</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="n">xpath</span> <span class="p">(</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="n">nokogiri</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">PLATFORMS</span>
</span><span class='line'>  <span class="n">ruby</span>
</span><span class='line'>
</span><span class='line'><span class="no">DEPENDENCIES</span>
</span><span class='line'>  <span class="n">activenavbar</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="n">bootstrap</span><span class="o">-</span><span class="n">sass</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="n">capybara</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="n">coffee</span><span class="o">-</span><span class="n">rails</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="n">database_cleaner</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mi">9</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="n">factory_girl_rails</span> <span class="p">(</span><span class="o">=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="n">haml</span><span class="o">-</span><span class="n">rails</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">4</span><span class="p">)</span>
</span><span class='line'>  <span class="n">jbuilder</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>  <span class="n">jquery</span><span class="o">-</span><span class="n">rails</span>
</span><span class='line'>  <span class="n">json</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">1</span><span class="o">.</span><span class="mi">8</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="n">mysql2</span>
</span><span class='line'>  <span class="n">olive</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="n">pry</span>
</span><span class='line'>  <span class="n">pry</span><span class="o">-</span><span class="n">debugger</span>
</span><span class='line'>  <span class="n">quiet_assets</span>
</span><span class='line'>  <span class="n">rails</span> <span class="p">(</span><span class="o">=</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'>  <span class="n">rspec</span><span class="o">-</span><span class="n">rails</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">14</span><span class="o">.</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>  <span class="n">sass</span><span class="o">-</span><span class="n">rails</span> <span class="p">(</span><span class="o">~&gt;</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="n">sdoc</span>
</span><span class='line'>  <span class="n">shoulda</span><span class="o">-</span><span class="n">matchers</span>
</span><span class='line'>  <span class="n">turbolinks</span>
</span><span class='line'>  <span class="n">uglifier</span> <span class="p">(</span><span class="o">&gt;=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  The Gemfile.lock file stores a complete snapshot of every version of every gem your Ruby on Rails application uses. The reason for this is simple. Let&#8217;s say you are using Rails 4.1.6 and Rails 5.0 comes out. You don&#8217;t want this new version to be pushed to your application during the next update. Why? You developed your application using the old version, and the new version may not be compatible with your code. That is why it is also important to check your Gemfile.lock into source control with the rest of your application.
</p>




<p>
  The Gemfile.lock file not only stores exact version information, but bundler USES that version information to rebuild the snapshot on production. If you take a look at your Gemfile (not Gemfile.lock) for example you will see the following line:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;coffee-rails&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 4.0.0&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Bundler knows that you used version 4.0.1 during development. When this file is pushed to production and you run a bundle install &#8211;deployment, bundler will recreate a snapshot of all of the gems that you were using on your development machine.
</p>




<p>
  When does this file get updated? Any time you add a new gem to your gemfile (and run a bundle install) or type bundle update [gem name] your Gemfile.lock will get updated. If you attempt to update the version of a Gem in your Gemfile, bundler will warn you to do a bundle update the next time you try to run a bundle install.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">You</span> <span class="n">have</span> <span class="ss">requested</span><span class="p">:</span>
</span><span class='line'>  <span class="n">coffee</span><span class="o">-</span><span class="n">rails</span> <span class="o">~&gt;</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">2</span>
</span><span class='line'>
</span><span class='line'><span class="no">The</span> <span class="n">bundle</span> <span class="n">currently</span> <span class="n">has</span> <span class="n">coffee</span><span class="o">-</span><span class="n">rails</span> <span class="n">locked</span> <span class="n">at</span> <span class="mi">4</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span>
</span><span class='line'><span class="no">Try</span> <span class="n">running</span> <span class="s1">&#39;bundle update coffee-rails&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  In this case, you would be unable to proceed until you run bundle update coffee-rails, which would then update your Gemfile.lock to include the new version of coffee-rails. This is also why it&#8217;s disastrous to run a bundle update without specifying a gem. Bundle update rebuilds the entire Gemfile.lock file from scratch, blowing away all of the old versions and replacing them with the latest ones allowed by the Gemfile.
</p>




<p>
  So far so good, the Gemfile.lock file is designed to save headache and frustration when deploying your application both across development machines as well as to production. It&#8217;s always a good idea to make sure that you check this file into source control and be aware of how it works. That&#8217;s it! See ya!
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails with Endless Scrolling]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/12/ruby-on-rails-with-endless-scrolling/"/>
    <updated>2015-02-12T23:20:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/12/ruby-on-rails-with-endless-scrolling</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails with Endless Scrolling" />
</p>




<p>
  Endless scrolling allows a website to let users avoid having to click page links or pagination in order to load additional pages of content. It is used by a number of sites such as Pinterest in order to enhanced the user experience. This article will show you how to implement endless scrolling in your Rails application. Let’s run through this with me.
</p>




<p>
  <strong>Create Rails Project</strong><br/>
  To create a Rails project; open up your terminal and type commands below:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">endless_scrolling</span> <span class="o">-</span><span class="n">d</span> <span class="n">mysql</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Setting up</strong><br/>
  Ruby on Rails endless scrolling uses the will_paginate gem to manage paging. This has a couple of advantages.
</p>




<p>
  First, if your endless scrolling code doesn&#8217;t work properly or is disabled, the pagination links themselves will still be present and allow the user to page.
</p>




<p>
  Second, the will_paginate gem provides us with the pagination functionality itself so that we do not need to reinvent the wheel.
</p>




<p>
  To get started, add the will_paginate gem to your <code>Gemfile</code> file.
</p>




<figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;will_paginate&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 3.0.7&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then run a <code>bundle install</code> to install the gem:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  we will create a simple Post model with the fields title, and body. In addition, we will create a simple Posts controller with an index method. Run the commands below to create these items:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">Post</span> <span class="n">title</span> <span class="ss">body</span><span class="p">:</span><span class="n">text</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="no">Posts</span> <span class="n">index</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then open up your routes (<code>config/routes.rb</code>) file and modify it so that it looks like the code listed below:
</p>




<figure class='code'><figcaption><span>routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="s2">&quot;posts#index&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then we need some seed data to play with. Open up your seeds.rb file and add in the code listed below. This code will create 100 posts for us to play with:
</p>




<figure class='code'><figcaption><span>seeds.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">100</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="no">Post</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">title</span><span class="p">:</span> <span class="s2">&quot;Lipsum Post </span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="sx">%{</span>
</span><span class='line'><span class="sx">    Lorem ipsum dolor sit amet, consectetur adipiscing elit. In feugiat purus dapibus fermentum sagittis. Fusce in tempus felis. Phasellus a erat ut lorem lacinia bibendum. Vivamus viverra facilisis neque, in scelerisque urna pharetra vel. Donec a est mauris. Integer eget metus quis eros egestas elementum. Integer bibendum risus hendrerit dapibus tempor. Fusce placerat in orci vitae tincidunt.</span>
</span><span class='line'><span class="sx">  }</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then run rake db:seed to create the seed data:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">seed</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then open up your Posts controller (<code>app/controllers/posts_controller.rb</code>) and modify it so that it looks like the code listed below:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PostsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@posts</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">paginate</span><span class="p">(</span><span class="ss">:page</span> <span class="o">=&gt;</span> <span class="n">params</span><span class="o">[</span><span class="ss">:page</span><span class="o">]</span><span class="p">,</span> <span class="ss">:per_page</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now modify the index view for your Posts controller so that it looks like the code listed below.
</p>




<figure class='code'><figcaption><span>posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PostsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@posts</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">paginate</span><span class="p">(</span><span class="ss">:page</span> <span class="o">=&gt;</span> <span class="n">params</span><span class="o">[</span><span class="ss">:page</span><span class="o">]</span><span class="p">,</span> <span class="ss">:per_page</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then modify the index (<code>app/views/posts/index.html.erb</code>) view for your Posts controller so that it looks like the code listed below:
</p>




<figure class='code'><figcaption><span>index.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="nb">id</span><span class="o">=</span><span class="s2">&quot;posts&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Posts</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= render @posts %&gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;%=</span> <span class="n">will_paginate</span> <span class="vi">@posts</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then let&#8217;s create the post partial. Create a file called _post.html.erb (<code>app/views/posts/_post.html.erb</code>) for your Posts controller and add in the code listed below:
</p>




<figure class='code'><figcaption><span>_post.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;post&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">h2</span><span class="o">&gt;&lt;</span><span class="sx">%= post.title %&gt;&lt;/h2&gt;</span>
</span><span class='line'><span class="sx">  &lt;p&gt;&lt;%=</span> <span class="n">post</span><span class="o">.</span><span class="n">body</span> <span class="sx">%&gt;&lt;/p&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  If you were to start a rails server at this point, you&#8217;d see a typical paginated list of posts. Now it&#8217;s time to add in the javascript that will make endless scrolling work. Open up your application.js (<code>app/assets/javascripts/application.js</code>) file and add in the code listed below:
</p>




<figure class='code'><figcaption><span>application.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span><span class="p">(</span><span class="n">document</span><span class="p">)</span><span class="o">.</span><span class="n">ready</span><span class="p">(</span><span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="err">$</span><span class="p">(</span><span class="s1">&#39;.pagination&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">length</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="err">$</span><span class="p">(</span><span class="n">window</span><span class="p">)</span><span class="o">.</span><span class="n">scroll</span><span class="p">(</span><span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">var</span> <span class="n">url</span> <span class="o">=</span> <span class="err">$</span><span class="p">(</span><span class="s1">&#39;.pagination .next_page&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">attr</span><span class="p">(</span><span class="s1">&#39;href&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="n">url</span> <span class="o">&amp;&amp;</span> <span class="err">$</span><span class="p">(</span><span class="n">window</span><span class="p">)</span><span class="o">.</span><span class="n">scrollTop</span><span class="p">()</span> <span class="o">&gt;</span> <span class="err">$</span><span class="p">(</span><span class="n">document</span><span class="p">)</span><span class="o">.</span><span class="n">height</span><span class="p">()</span> <span class="o">-</span> <span class="err">$</span><span class="p">(</span><span class="n">window</span><span class="p">)</span><span class="o">.</span><span class="n">height</span><span class="p">()</span> <span class="o">-</span> <span class="mi">50</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="err">$</span><span class="p">(</span><span class="s1">&#39;.pagination&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">text</span><span class="p">(</span><span class="s2">&quot;Please Wait...&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="vg">$.</span><span class="n">getScript</span><span class="p">(</span><span class="n">url</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="k">return</span> <span class="err">$</span><span class="p">(</span><span class="n">window</span><span class="p">)</span><span class="o">.</span><span class="n">scroll</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then create a file called index.js.erb (<code>app/views/posts/index.js.erb</code>) for your Posts controller and add in the code listed below:
</p>




<figure class='code'><figcaption><span>index.js.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span><span class="p">(</span><span class="s1">&#39;#posts&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s1">&#39;&lt;%= escape_javascript render(@posts) %&gt;&#39;</span><span class="p">);</span>
</span><span class='line'><span class="err">$</span><span class="p">(</span><span class="s1">&#39;.pagination&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">replaceWith</span><span class="p">(</span><span class="s1">&#39;&lt;%= escape_javascript will_paginate(@posts) %&gt;&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  The code works by watching the window&#8217;s scroll event. When the user scrolls past the specified threshold, more posts are loaded using AJAX. That&#8217;s it, thank you!. See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Generate Random Data]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/11/ruby-on-rails-generate-random-data/"/>
    <updated>2015-02-11T19:21:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/11/ruby-on-rails-generate-random-data</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails Generate Random Data" />
</p>




<p>
  Sometimes we need to programmatically generate text in Ruby on Rails. We may not have any data available to play with or we may need text in order to mock up the user interface. In this article I will cover 2 different methods of generating random text. Let’s run through this with me.
</p>




<p>
  <strong>Random Letters</strong><br/>
  If you just need fill text, you can add this helper to your application helper (<code>app/helpers/application_helper.rb</code>):
</p>




<figure class='code'><figcaption><span>application_helper.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">ApplicationHelper</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">random_string</span><span class="p">(</span><span class="n">length</span><span class="p">,</span> <span class="n">include_uppercase</span> <span class="o">=</span> <span class="kp">true</span><span class="p">,</span> <span class="n">include_lowercase</span> <span class="o">=</span> <span class="kp">true</span><span class="p">,</span> <span class="n">include_numbers</span> <span class="o">=</span> <span class="kp">false</span><span class="p">)</span>
</span><span class='line'>    <span class="n">l</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="n">l</span><span class="o">.</span><span class="n">push</span> <span class="p">(</span><span class="s1">&#39;a&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;z&#39;</span><span class="p">)</span> <span class="k">if</span> <span class="n">include_uppercase</span>
</span><span class='line'>    <span class="n">l</span><span class="o">.</span><span class="n">push</span> <span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="o">.</span><span class="n">.</span><span class="s1">&#39;Z&#39;</span><span class="p">)</span> <span class="k">if</span> <span class="n">include_lowercase</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">l</span><span class="o">.</span><span class="n">push</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">9</span><span class="p">)</span> <span class="k">if</span> <span class="n">include_numbers</span>
</span><span class='line'>    <span class="n">l</span> <span class="o">=</span> <span class="n">l</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="n">i</span><span class="o">.</span><span class="n">to_a</span> <span class="p">}</span><span class="o">.</span><span class="n">flatten</span>
</span><span class='line'>    <span class="n">string</span> <span class="o">=</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">length</span><span class="p">)</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="n">l</span><span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="n">l</span><span class="o">.</span><span class="n">length</span><span class="p">)</span><span class="o">]</span> <span class="p">}</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  The helper has 1 required argument is length, which determines the length of the string. To generate a random string of 200 characters, call the helper like below:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">random_string</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Forgery Gem</strong><br/>
  The <a href="https://github.com/sevenwire/forgery" target="_blank">forgery</a> gem provides a great way to generate random data. Not only can forgery generate random words (based off lorem ipsum), but it can also generate random email addresses, and much more. To use forgery, just include the forgery gem in your gemfile:
</p>




<figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;forgery&#39;</span><span class="p">,</span> <span class="s1">&#39;0.6.0&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then run <code>bundle install</code> to install the Gem.
</p>




<p>
  After installing the Gem, you are ready to go to generate words:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="no">Forgery</span><span class="p">(</span><span class="ss">:lorem_ipsum</span><span class="p">)</span><span class="o">.</span><span class="n">words</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  To generate a random email address:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="no">Forgery</span><span class="p">(</span><span class="s1">&#39;internet&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">email_address</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, I hope all you guys enjoy it. See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Uploads Multiple Files with DropzoneJS and Paperclip Gem]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/10/ruby-on-rails-uploads-multiple-files-with-dropzonejs-and-paperclip-gem/"/>
    <updated>2015-02-10T21:37:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/10/ruby-on-rails-uploads-multiple-files-with-dropzonejs-and-paperclip-gem</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails Uploads Multiple Files with DropzoneJS and Paperclip Gem" />
</p>




<p>
  <a href="http://www.dropzonejs.com/" target="_blank">DropzoneJS</a> is a javascript library for allowing multiple file uploads via AJAX. It features drag and drop support, folder support, and much more on browsers that support these features.
</p>




<p>
  In this article I will show you how to implement multiple images files uploads directly to paperclip using DropzoneJS. Let’s run through this with me.
</p>




<p>
  <strong>Create Rails Project</strong><br/>
  To create a Rails project; open up your terminal and type commands below: 
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">dropzone</span> <span class="o">-</span><span class="n">d</span> <span class="n">mysql</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Add Gems</strong><br/>
  We will add two gems to our Gemfile. <code>dropzonejs-rails</code> gem is a helper gem that integrates DropzoneJS into our Rails app. <code>paperclip</code> for processing image uploads.
</p>




<p>
  Open up your <code>Gemfile</code> and add in the lines listed below:
</p>




<figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s2">&quot;paperclip&quot;</span><span class="p">,</span> <span class="s2">&quot;~&gt; 4.2&quot;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;dropzonejs-rails&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now let&#8217;s run a bundle install to install the gems:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Create a Image Model</strong><br/>
  Now we will create a model to store our image information for Paperclip. Run the command below to create the image model and migrate the database:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="n">image</span> <span class="ss">avatar</span><span class="p">:</span><span class="n">attachment</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then add some code to Image model to tell paperclip we want to have an attachment attached. Open up your image model (<code>app/models/image.rb:</code>) and add the code listed below:
</p>




<figure class='code'><figcaption><span>image.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Image</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_attached_file</span> <span class="ss">:avatar</span><span class="p">,</span> <span class="ss">:styles</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:medium</span> <span class="o">=&gt;</span> <span class="s2">&quot;300x300&gt;&quot;</span><span class="p">,</span> <span class="ss">:thumb</span> <span class="o">=&gt;</span> <span class="s2">&quot;100x100&gt;&quot;</span> <span class="p">},</span> <span class="ss">:default_url</span> <span class="o">=&gt;</span> <span class="s2">&quot;/images/:style/missing.png&quot;</span>
</span><span class='line'>  <span class="n">validates_attachment_content_type</span> <span class="ss">:avatar</span><span class="p">,</span> <span class="ss">:content_type</span> <span class="o">=&gt;</span> <span class="sr">/\Aimage\/.*\Z/</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Create a Images Controller</strong><br/>
  Then create an Images controller which will be used to display and allow the upload of our images. Run the command below to create this controller:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="n">images</span> <span class="n">index</span> <span class="n">create</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then update our routes file to set up the routes for our images controller. Open up the routes file (<code>config/routes.rb</code>) and modify it:
</p>




<figure class='code'><figcaption><span>routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:images</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:index</span><span class="p">,</span> <span class="ss">:create</span><span class="o">]</span>
</span><span class='line'>  <span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="s2">&quot;images#index&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then modify our Images controller to add logic to handle the file upload as well as listing each of the images. Open up the Images controller (<code>app/controllers/images_controller.rb</code>) and modify it:
</p>




<figure class='code'><figcaption><span>images_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ImagesController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@images</span> <span class="o">=</span> <span class="no">Image</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>    <span class="vi">@image</span> <span class="o">=</span> <span class="no">Image</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>    <span class="vi">@image</span> <span class="o">=</span> <span class="no">Image</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">image_params</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@image</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>      <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="p">{</span> <span class="ss">message</span><span class="p">:</span> <span class="s2">&quot;success&quot;</span><span class="p">,</span> <span class="ss">fileID</span><span class="p">:</span> <span class="vi">@image</span><span class="o">.</span><span class="n">id</span> <span class="p">},</span> <span class="ss">status</span><span class="p">:</span> <span class="mi">200</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="p">{</span> <span class="ss">error</span><span class="p">:</span> <span class="vi">@image</span><span class="o">.</span><span class="n">errors</span><span class="o">.</span><span class="n">full_messages</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">)},</span> <span class="ss">status</span><span class="p">:</span> <span class="mi">400</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">image_params</span>
</span><span class='line'>    <span class="n">params</span><span class="o">.</span><span class="n">require</span><span class="p">(</span><span class="ss">:image</span><span class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:avatar</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  DropzoneJS expects a json return, so the create method returns a JSON success or failure based on whether the image was uploaded successfully or not.
</p>




<p>
  Then add Bootstrap to our application. Open up your application layout (<code>app/views/layouts/application.html.erb</code>)and modify it:
</p>




<figure class='code'><figcaption><span>application.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;!</span><span class="no">DOCTYPE</span> <span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">head</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">title</span><span class="o">&gt;</span><span class="no">DropzoneJS</span><span class="o">&lt;</span><span class="sr">/title&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= stylesheet_link_tag    &#39;application&#39;, media: &#39;all&#39;, &#39;data-turbolinks-track&#39; =&gt; true %&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= javascript_include_tag &#39;application&#39;, &#39;data-turbolinks-track&#39; =&gt; true %&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= stylesheet_link_tag    &#39;http:/</span><span class="o">/</span><span class="n">yandex</span><span class="o">.</span><span class="n">st</span><span class="o">/</span><span class="n">bootstrap</span><span class="o">/</span><span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">/</span><span class="n">css</span><span class="o">/</span><span class="n">bootstrap</span><span class="o">.</span><span class="n">min</span><span class="o">.</span><span class="n">css</span><span class="s1">&#39;, media: &#39;</span><span class="n">all</span><span class="s1">&#39;, &#39;</span><span class="n">data</span><span class="o">-</span><span class="n">turbolinks</span><span class="o">-</span><span class="n">track</span><span class="s1">&#39; =&gt; true %&gt;</span>
</span><span class='line'><span class="s1">  &lt;%= javascript_include_tag &#39;</span><span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="n">yandex</span><span class="o">.</span><span class="n">st</span><span class="o">/</span><span class="n">bootstrap</span><span class="o">/</span><span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">/</span><span class="n">js</span><span class="o">/</span><span class="n">bootstrap</span><span class="o">.</span><span class="n">min</span><span class="o">.</span><span class="n">js</span><span class="s1">&#39;, &#39;</span><span class="n">data</span><span class="o">-</span><span class="n">turbolinks</span><span class="o">-</span><span class="n">track</span><span class="err">&#39;</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;%= csrf_meta_tags %&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/head&gt;</span>
</span><span class='line'><span class="sr">&lt;body&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= yield %&gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">body</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Well, then create our views. First let&#8217;s create the index view (<code>app/views/images/index.html.erb</code>). Open up your index view for the images controller and modify it:
</p>




<figure class='code'><figcaption><span>index.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">My</span> <span class="no">Images</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;%= form_for(Image.new, html: { multipart: true, class: &quot;dropzone&quot;}) do |f|  %&gt;</span>
</span><span class='line'><span class="sr">  &lt;div class=&quot;fallback&quot;&gt;</span>
</span><span class='line'><span class="sr">    &lt;%= f.file_field :avatar %&gt;&lt;br&gt;</span>
</span><span class='line'><span class="sr">    &lt;%= f.submit &quot;Upload my Avatar&quot; %&gt;</span>
</span><span class='line'><span class="sr">  &lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;div class=&quot;index&quot;&gt;</span>
</span><span class='line'>  <span class="o">&lt;%=</span> <span class="n">render</span> <span class="s2">&quot;index&quot;</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then we need to add some JavaScript to tell Rails how to handle the remote ajax file processing that we will do using dropzone. Create a view called <code>app/views/images/index.js.erb</code> for your images controller and add the code listed below:
</p>




<figure class='code'><figcaption><span>index.js.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span><span class="p">(</span><span class="s2">&quot;.index&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">html</span><span class="p">(</span><span class="s2">&quot;&lt;%= escape_javascript(render(&#39;index&#39;)) %&gt;&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then create the partial that we reference in the previous code. Create a new partial called <code>app/views/images/_index.html.erb</code> for your images controller and add the code listed below:
</p>




<figure class='code'><figcaption><span>_index.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">% @images.each </span><span class="k">do</span> <span class="o">|</span><span class="n">image</span><span class="o">|</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;div class=&quot;img-thumbnail&quot;&gt;</span>
</span><span class='line'>    <span class="o">&lt;%=</span> <span class="n">image_tag</span> <span class="n">image</span><span class="o">.</span><span class="n">avatar</span><span class="o">.</span><span class="n">url</span><span class="p">(</span><span class="ss">:thumb</span><span class="p">),</span> <span class="ss">alt</span><span class="p">:</span> <span class="n">image</span><span class="o">.</span><span class="n">avatar</span><span class="o">.</span><span class="n">url</span><span class="p">(</span><span class="ss">:thumb</span><span class="p">)</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;/div&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then modify our application.css and add the dropzone css require. Open up your <code>app/assets/stylesheets/application.css</code> file and modify it:
</p>




<figure class='code'><figcaption><span>application.css </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/*</span>
</span><span class='line'><span class="sr"> *= require_tree .</span>
</span><span class='line'><span class="sr"> *= require dropzone/</span><span class="n">dropzone</span>
</span><span class='line'> <span class="o">*=</span> <span class="n">require_self</span>
</span><span class='line'> <span class="o">*/</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then modify our application.js and add the dropzone js require. Open up your <code>app/assets/javascripts/application.js</code> file and modify it:
</p>




<figure class='code'><figcaption><span>application.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/= require dropzone</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then add a bit more JavaScript to finish things up. Open up your <code>app/assets/javascripts/images.js</code> file and add in the code listed below:
</p>




<figure class='code'><figcaption><span>images.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span><span class="p">(</span><span class="n">document</span><span class="p">)</span><span class="o">.</span><span class="n">ready</span><span class="p">(</span><span class="n">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="sr">//</span> <span class="n">disable</span> <span class="n">auto</span> <span class="n">discover</span>
</span><span class='line'>  <span class="no">Dropzone</span><span class="o">.</span><span class="n">autoDiscover</span> <span class="o">=</span> <span class="kp">false</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">var</span> <span class="n">dropzone</span> <span class="o">=</span> <span class="kp">new</span> <span class="no">Dropzone</span> <span class="p">(</span><span class="s2">&quot;.dropzone&quot;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>    <span class="ss">maxFilesize</span><span class="p">:</span> <span class="mi">256</span><span class="p">,</span> <span class="sr">//</span> <span class="n">set</span> <span class="n">the</span> <span class="n">maximum</span> <span class="n">file</span> <span class="n">size</span> <span class="n">to</span> <span class="mi">256</span> <span class="no">MB</span>
</span><span class='line'>    <span class="ss">paramName</span><span class="p">:</span> <span class="s2">&quot;image[avatar]&quot;</span><span class="p">,</span> <span class="sr">//</span> <span class="no">Rails</span> <span class="n">expects</span> <span class="n">the</span> <span class="n">file</span> <span class="n">upload</span> <span class="n">to</span> <span class="n">be</span> <span class="n">something</span> <span class="n">like</span> <span class="n">model</span><span class="o">[</span><span class="n">field_name</span><span class="o">]</span>
</span><span class='line'>    <span class="ss">addRemoveLinks</span><span class="p">:</span> <span class="kp">false</span> <span class="sr">//</span> <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">show</span> <span class="n">remove</span> <span class="n">links</span> <span class="n">on</span> <span class="n">dropzone</span> <span class="n">itself</span><span class="o">.</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">dropzone</span><span class="o">.</span><span class="n">on</span><span class="p">(</span><span class="s2">&quot;success&quot;</span><span class="p">,</span> <span class="n">function</span><span class="p">(</span><span class="n">file</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">this</span><span class="o">.</span><span class="n">removeFile</span><span class="p">(</span><span class="n">file</span><span class="p">);</span>
</span><span class='line'>    <span class="vg">$.</span><span class="n">getScript</span><span class="p">(</span><span class="s2">&quot;/images&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, if you start your Rails server and navigate to http://localhost:3000 you will notice that you can drag and drop images onto the app. On certain browsers, such as Google Chrome, you can even drag and drop one or more folders of images onto the dropzone placeholder and have them upload. In addition you can also click the dropzone and select a file via the file selection screen. That&#8217;s it! See ya! :)
</p>

]]></content>
  </entry>
  
</feed>
