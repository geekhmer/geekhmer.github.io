<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2015-05-02T10:49:10+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Automatically-updating Timeago Text with rails-livestamp Gem]]></title>
    <link href="http://geekhmer.github.io/blog/2015/05/02/automatically-updating-timeago-text-with-rails-livestamp-gem/"/>
    <updated>2015-05-02T08:29:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/05/02/automatically-updating-timeago-text-with-rails-livestamp-gem</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/rubygems_logo.png" width="200" alt="Automatically-updating Timeago Text with rails-livestamp Gem" />
</p>




<p>
  <a href="https://github.com/Bunlong/rails-livestamp" target="_blank">rails-livestamp</a> is a simple jQuery plugin that makes it easy to provides automatically updating text to your timestamped HTML elements.
</p>




<p>
  <strong>Installation</strong><br/>
  Add this line to your application&#8217;s Gemfile:
</p>




<figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;rails-livestamp&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.1.3&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  And then execute:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Or install it yourself as:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">rails</span><span class="o">-</span><span class="n">livestamp</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  To use rails-livestamp add this require statement to your application.js file:
</p>




<figure class='code'><figcaption><span>application.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">//</span><span class="o">=</span> <span class="nb">require</span> <span class="n">rails</span><span class="o">-</span><span class="n">livestamp</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Usage</strong><br/>
  No extra JavaScript required! Just use a <span> with the data-livestamp attribute set to the desired Unix timestamp (in seconds), like this:
</p>




<p>
  If you use ERB:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">You</span> <span class="n">discovered</span> <span class="n">rails</span><span class="o">-</span><span class="n">livestamp</span> <span class="o">&lt;</span><span class="n">span</span> <span class="n">data</span><span class="o">-</span><span class="n">livestamp</span><span class="o">=</span><span class="s2">&quot;</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">to_i</span><span class="si">}</span><span class="s2">&quot;</span><span class="o">&gt;&lt;</span><span class="sr">/span&gt;.</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  If you use HAML:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">You</span> <span class="n">discovered</span> <span class="n">rails</span><span class="o">-</span><span class="n">livestamp</span>
</span><span class='line'><span class="o">%</span><span class="n">span</span><span class="p">{</span><span class="s2">&quot;data-livestamp&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="o">.</span><span class="n">to_i</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  And you will see something like this:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">You</span> <span class="n">discovered</span> <span class="n">rails</span><span class="o">-</span><span class="n">livestamp</span> <span class="n">a</span> <span class="n">minutes</span> <span class="n">ago</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Wait half a minute - the livestamp will update automatically.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Getting Started with JBuilder]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/29/ruby-on-rails-getting-started-with-jbuilder/"/>
    <updated>2015-04-29T20:20:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/29/ruby-on-rails-getting-started-with-jbuilder</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails Getting Started with JBuilder" />
</p>




<p>
  In the past, it could be really cumbersome to build proper JSON data feeds. Fortunately Ruby on Rails makes dealing with JSON much easier. Today we will learn how to use the JBuilder gem, which will allow us to easily build complex data feeds.
</p>




<p>
  First, we need to include the gem in our gemfile. Recent versions of Ruby on Rails include this gem commented out towards the bottom of the file. In addition, Rails 4 already includes this gem so you don&#8217;t need to do anything. If it is in your gemfile and it is commented out, uncomment it, otherwise, add the gem using the line shown below.
</p>




<figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;jbuilder&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.2&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then run a bundle install:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Next, we will need a model and some sample data. In this sample project we will have 2 models. A product model, and a review model, which will be associated with products. Lets generate these 2 models now. Run the commands below to create the models and migrate the database:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">Product</span> <span class="nb">name</span> <span class="ss">price</span><span class="p">:</span><span class="n">decimal</span><span class="p">{</span><span class="mi">12</span><span class="p">,</span><span class="mi">2</span><span class="p">}</span> <span class="ss">active</span><span class="p">:</span><span class="n">boolean</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">Review</span> <span class="ss">product</span><span class="p">:</span><span class="n">references</span> <span class="n">user</span> <span class="ss">rating</span><span class="p">:</span><span class="n">integer</span> <span class="ss">body</span><span class="p">:</span><span class="n">text</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Excellent, Now lets add some seed data. Copy and paste the following seed data into your seeds.rb file:
</p>




<figure class='code'><figcaption><span>db/seeds.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Product</span><span class="o">.</span><span class="n">delete_all</span>
</span><span class='line'><span class="no">Review</span><span class="o">.</span><span class="n">delete_all</span>
</span><span class='line'>
</span><span class='line'><span class="no">Product</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="o">[</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Nintendo Wii U Premium&quot;</span><span class="p">,</span> <span class="ss">price</span><span class="p">:</span> <span class="mi">250</span><span class="p">,</span> <span class="ss">active</span><span class="p">:</span> <span class="kp">true</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;XBox 360 250GB&quot;</span><span class="p">,</span> <span class="ss">price</span><span class="p">:</span> <span class="mi">250</span><span class="p">,</span> <span class="ss">active</span><span class="p">:</span> <span class="kp">true</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Playstation 3 500 GB&quot;</span><span class="p">,</span> <span class="ss">price</span><span class="p">:</span> <span class="mi">239</span><span class="o">.</span><span class="mi">95</span><span class="p">,</span> <span class="ss">active</span><span class="p">:</span> <span class="kp">true</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Nintendo Wii&quot;</span><span class="p">,</span> <span class="ss">price</span><span class="p">:</span> <span class="mi">99</span><span class="o">.</span><span class="mi">95</span><span class="p">,</span> <span class="ss">active</span><span class="p">:</span> <span class="kp">true</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Nintendo 3DS&quot;</span><span class="p">,</span> <span class="ss">price</span><span class="p">:</span> <span class="mi">174</span><span class="o">.</span><span class="mi">95</span><span class="p">,</span> <span class="ss">active</span><span class="p">:</span> <span class="kp">true</span><span class="p">}</span>
</span><span class='line'><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">Review</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="o">[</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="n">product_id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;Bob&quot;</span><span class="p">,</span> <span class="ss">rating</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;dated graphics.  Overpriced.  However, the games are awesome.&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="n">product_id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;Rich&quot;</span><span class="p">,</span> <span class="ss">rating</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;MARIO!  &#39;nuff Said&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="n">product_id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;James&quot;</span><span class="p">,</span> <span class="ss">rating</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;Excellent value for the money.&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="n">product_id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;Alison&quot;</span><span class="p">,</span> <span class="ss">rating</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;Love it!&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="n">product_id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;James&quot;</span><span class="p">,</span> <span class="ss">rating</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;Bigger hard drive then my XBox 360.  Weak user interface though.&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span> <span class="n">product_id</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;Kay&quot;</span><span class="p">,</span> <span class="ss">rating</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;Extremely dated.  Don&#39;t buy.  Will be discontinued soon.&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">7</span><span class="p">,</span> <span class="n">product_id</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;Jed&quot;</span><span class="p">,</span> <span class="ss">rating</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;Awesome handheld system, but a bit overpriced.&quot;</span><span class="p">}</span>
</span><span class='line'><span class="o">]</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Next, run the seed command to populate your database:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">seed</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Well, we now have a database populated with products and reviews. Next we will need to set up the association between our products and our reviews. First, open up the Product model and modify it so that it looks like the code listed below:
</p>




<figure class='code'><figcaption><span>app/models/product.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Product</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:reviews</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Great, now lets add the reverse association. Open up your Review model and verify that it looks like the code listed below. Rails should auto populate this, but double check just to be sure.
</p>




<figure class='code'><figcaption><span>app/models/reviews.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Review</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:product</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  With the database model created, our data populated, and our associations set up, now it&#8217;s time to create a controller. Run the command below to create products controller.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="n">products</span> <span class="n">index</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now, lets make a change to our routes.rb file so that our controller becomes a resourceful controller. Replace the line that says get &#8220;products/index&#8221; with the code listed below.
</p>




<figure class='code'><figcaption><span>config/routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># get &quot;products/index&quot;</span>
</span><span class='line'><span class="n">resources</span> <span class="ss">:products</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:index</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  This sets up the products controller as a resourceful controller. Now, in order to create a json feed using jbuilder, we must create a jbuilder view. Create a new file in app/views/products called index.json.jbuilder and add the code listed below.
</p>




<figure class='code'><figcaption><span>app/views/products/index.json.jbuilder </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">json</span><span class="o">.</span><span class="n">products</span> <span class="k">do</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Excellent. Now if you navigate to http://localhost:3000/products.json You will see an empty json data feed. Now, lets add some content to that data feed. Now, open up the products controller and modify it so that it looks like the code listed below.
</p>




<figure class='code'><figcaption><span>app/controllers/products_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ProductsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@products</span> <span class="o">=</span> <span class="no">Product</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Next, Open the jbuilder file again and modify it so that it looks like the code listed below.
</p>




<figure class='code'><figcaption><span>app/views/products/index.json.jbuilder </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">json</span><span class="o">.</span><span class="n">products</span> <span class="vi">@products</span> <span class="k">do</span> <span class="o">|</span><span class="n">product</span><span class="o">|</span>
</span><span class='line'>  <span class="n">json</span><span class="o">.</span><span class="n">name</span> <span class="n">product</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'>  <span class="n">json</span><span class="o">.</span><span class="n">price</span> <span class="n">number_to_currency</span> <span class="n">product</span><span class="o">.</span><span class="n">price</span>
</span><span class='line'>  <span class="n">json</span><span class="o">.</span><span class="n">active</span> <span class="n">product</span><span class="o">.</span><span class="n">active</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Excellent, now if we refresh the page we will see a listing of products in json format. Now lets add the reviews. Modify your code so that it looks like the code listed below.
</p>




<figure class='code'><figcaption><span>app/views/products/index.json.jbuilder </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">json</span><span class="o">.</span><span class="n">products</span> <span class="vi">@products</span> <span class="k">do</span> <span class="o">|</span><span class="n">product</span><span class="o">|</span>
</span><span class='line'>  <span class="n">json</span><span class="o">.</span><span class="n">name</span> <span class="n">product</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'>  <span class="n">json</span><span class="o">.</span><span class="n">price</span> <span class="n">number_to_currency</span> <span class="n">product</span><span class="o">.</span><span class="n">price</span>
</span><span class='line'>  <span class="n">json</span><span class="o">.</span><span class="n">active</span> <span class="n">product</span><span class="o">.</span><span class="n">active</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">json</span><span class="o">.</span><span class="n">reviews</span> <span class="n">product</span><span class="o">.</span><span class="n">reviews</span> <span class="k">do</span> <span class="o">|</span><span class="n">review</span><span class="o">|</span>
</span><span class='line'>    <span class="n">json</span><span class="o">.</span><span class="n">user</span> <span class="n">review</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>    <span class="n">json</span><span class="o">.</span><span class="n">rating</span> <span class="n">review</span><span class="o">.</span><span class="n">rating</span>
</span><span class='line'>    <span class="n">json</span><span class="o">.</span><span class="n">body</span> <span class="n">review</span><span class="o">.</span><span class="n">body</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Excellent! Now if we refresh the page we&#8217;ll see the review listing for each product. That&#8217;s it folks! That&#8217;s all there is to using the jbuilder gem.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10 Useful Ruby on Rails 4 Gems]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/25/10-useful-ruby-on-rails-4-gems/"/>
    <updated>2015-04-25T16:09:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/25/10-useful-ruby-on-rails-4-gems</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="10 Useful Ruby on Rails 4 Gems" />
</p>




<p>
  The Ruby on Rails framework is an extremely powerful tool for developing web applications. It comes with plenty of built-in features which help accelerate the development of your web application such as intelligent routing and an object-relation mapper, all using an MVC pattern.
</p>




<p>
  Rails is designed in a way to be very easily extended using Ruby gems. This has created a large ecosystem of Ruby gems which can extend your application and accelerate your development process even more by reducing the time involved working in developing common functionality. We’re going to go over a few gems which we consider to be very useful.
</p>




<p>
  <strong>Devise</strong><br/>
  <a href="https://rubygems.org/gems/devise" target="_blank">Devise</a> is most probably the most commonly used Gem when using Ruby on Rails. It provides an easy-to-use authentication solution for your Rails application which will allow you to get login, registration, forget password, account locks and much more account-related features by simply using this Gem.
</p>




<p>
  <strong>Pundit</strong><br/>
  It’s important to know the distinction between authentication and authorization. Devise helps authenticate users and verify who they are while authorization ensures that the user is allowed to perform an action or access a resource. <a href="https://rubygems.org/gems/pundit" target="_blank">Pundit</a> takes care of this entire process by providing a simple way of defining authorization systems using nothing but Ruby classes.
</p>




<p>
  <strong>Slim</strong><br/>
  There are many template systems out there. Ruby on Rails uses the eRuby template system by default, however, it’s typically something that users will choose to replace. <a href="https://rubygems.org/gems/slim" target="_blank">Slim</a> is a common replacement because it allows you to maintain very easy to read templates due to it’s simple syntax while maintaining very fast compilation times.
</p>




<p>
  <strong>Draper</strong><br/>
  <a href="https://rubygems.org/gems/draper" target="_blank">Draper</a> allows you to build decorators around your models. It helps make your views much cleaner and lets you avoid writing helpers. Instead of procedurally calling helpers with models, you instead define a decorator which wraps the original model and provides a list of extended method and attributes to your object.
</p>




<p>
  <strong>Cells</strong><br/>
  You’ll often re-use many components of your application. Typically, partials are used for this type of behavior however you must make sure that your controllers that call the partial all have consistent behavior. <a href="https://rubygems.org/gems/cells" target="_blank">Cells</a> allow you to take parts of your controller and encapsulate them into their own little controller. This helps make your code much cleaner and avoid the long helper/partial/filter mes.
</p>




<p>
  <strong>FriendlyId</strong><br/>
  Typically, resources URLs are identified by their primary key which is usually their database ID. However, this can result in unoptimized web page URLs which are not user-friendly to read either. <a href="https://rubygems.org/gems/friendly_id" target="_blank">FriendlyId</a> can easily transform your URLs to much friendlier and easy to remember URLs for little to no code changes in your web application.
</p>




<p>
  <strong>Simple Form</strong><br/>
  Forms are at the heart of every single web application. If there is any level of interaction with the user, it typically is done using a web form. <a href="https://rubygems.org/gems/simple_form" target="_blank">Simple Form</a> helps simplify this very simple yet repetitive task. By implementing a simple and easy to use DSL for building forms, you can spend less time writing HTML for your forms and more time on the core business logic of your application.

</p>




<p>
  <strong>Paperclip</strong><br/>
  File attachments are never easy to work with. They typically involve a significant amount of work to implement and even more time to make sure that they are implemented in a very secure manner. <a href="https://rubygems.org/gems/paperclip" target="_blank">Paperclip</a> takes care of this entire process for you inside your Rails application and extends it even more to things like transforming images to thumbnails and much more.
</p>




<p>
  <strong>Kaminari</strong><br/>
  <a href="https://rubygems.org/gems/kaminari" target="_blank">Kaminari </a> is not a very descriptive name for a Gem, however, it is one of the most popular Gems with almost 5 million downloads. It enables you to paginate anything from ActiveRecord relations to simple arrays using a clean, easy to use and simple scope-based API which is fully agnostic to whatever ORM or template engine you use.
</p>




<p>
  <strong>Sidekiq</strong><br/>
  There are many choices for background processing tools when using Ruby on Rails, however, <a href="https://rubygems.org/gems/sidekiq" target="_blank">Sidekiq</a> is the one of the most popular ones. The reason behind it’s popularity is the simplicity of it’s API and how it scales much better than other background processors.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How To Install Rails and Nginx with Passenger on Ubuntu?]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/24/how-to-install-rails-and-nginx-with-passenger-on-ubuntu/"/>
    <updated>2015-04-24T20:32:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/24/how-to-install-rails-and-nginx-with-passenger-on-ubuntu</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="How To Install Rails and Nginx with Passenger on Ubuntu?" />
</p>




<p>
  Ruby on Rails is an open source web application framework which runs on the Ruby programming language. It allows the developers creating pages and applications that gather information from the web server, talk to or query the database, and render templates out of the box directly to the internet browsers.
</p>




<p>
  As a result, Rails features a routing system that is independent of the web server. The web server is used to render the content only. The choice for that would be Nginx. Nginx is fast webserver with a strong focus on high concurrency, high performance and low memory usage.
</p>




<h3>
  Install Ruby and Rails
</h3>




<p>
  Before we proceed with installation, we should make sure that our system repositories are up to date:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Once we are up to date with the latest available packages, the next step is to install Ruby Version Manager. It is application that allows to manage several different ruby versions easily, we can install RVM and then load it with:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">curl</span> <span class="o">-</span><span class="n">L</span> <span class="n">get</span><span class="o">.</span><span class="n">rvm</span><span class="o">.</span><span class="n">io</span> <span class="o">|</span> <span class="n">bash</span> <span class="o">-</span><span class="n">s</span> <span class="n">stable</span>
</span><span class='line'><span class="n">source</span> <span class="sr">/usr/</span><span class="n">local</span><span class="o">/</span><span class="n">rvm</span><span class="o">/</span><span class="n">scripts</span><span class="o">/</span><span class="n">rvm</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  We must make sure that we have all dependencies from RVM. To make sure that we have all required dependencies, we execute the following command:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rvm</span> <span class="n">requirements</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  It will make sure that we are up to date and install the missing requirements (if any). Once we have RVM installed and configured, we can proceed to install and configure Ruby.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rvm</span> <span class="n">install</span> <span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span>
</span><span class='line'><span class="n">rvm</span> <span class="n">use</span> <span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span> <span class="o">--</span><span class="n">default</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  These two commands will install Ruby and set the system to use version 2.2.1 by default. The next step is to make sure we have all components for Ruby on Rails. Ruby Gems is a package manager for the Ruby programming language that provides a standard format for distributing Ruby programs and libraries, a tool designed to easily manage the installation of gems, and a server for distributing them, we can install it with this command and then use it to install Rails:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rvm</span> <span class="n">rubygems</span> <span class="n">current</span>
</span><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">rails</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  This process could take some time, but after it finish, Ruby on Rails is installed.
</p>




<h3>
  Install Passenger and Nginx
</h3>




<p>
  We need to make sure that we can easily deploy Ruby on rails to any web server. We will install and use Passenger for that. It will serve as interface or bridge for communication between Ruby and the web server, you can install it with the following command:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">passenger</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Once passenger is installed, the rest of the required setup is fully automated. We execute the command:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rvmsudo</span> <span class="n">passenger</span><span class="o">-</span><span class="n">install</span><span class="o">-</span><span class="n">nginx</span><span class="o">-</span><span class="n">module</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Once we do this, it checks for all dependencies automatically and install those that are missing. If some manual user action is required, Passenger will tell us, as well as give us detailed instructions how to do it.
</p>




<p>
  Now we need to configure nginx to “talk” to Passenger. In order to do that, we need to open the nginx configuration file (/opt/nginx/conf/nginx.conf), using our favorite editor and add the following:
</p>


<p></p>

<figure class='code'><figcaption><span>nginx.conf </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">server</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">listen</span> <span class="mi">80</span><span class="p">;</span>
</span><span class='line'>  <span class="n">server_name</span> <span class="n">example</span><span class="o">.</span><span class="n">com</span><span class="p">;</span>
</span><span class='line'>  <span class="n">passenger_enabled</span> <span class="n">on</span><span class="p">;</span>
</span><span class='line'>  <span class="n">root</span> <span class="sr">/var/</span><span class="n">www</span><span class="o">/</span><span class="n">rails_app</span><span class="o">/</span><span class="kp">public</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  In order to create our rails app, we need to install Node.js first:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">nodejs</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Once that is that, we should go to our directory (in this case it is /var/www/rails_app/public) and create the application. After all this is installed and configured, we simply need to start Nginx.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">my_first_rails_app</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">service</span> <span class="n">nginx</span> <span class="n">start</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  We can try and access our new Ruby on Rails application using our browser. It seems that it was much easier to setup the environment and create our first Ruby on Rails project than we thought.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Build a Simple Rake Task]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/20/ruby-on-rails-build-a-simple-rake-task/"/>
    <updated>2015-04-20T10:46:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/20/ruby-on-rails-build-a-simple-rake-task</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails Build a Simple Rake Task" />
</p>




<p>
  There are many tasks that need to be performed outside of your website that are related to your web application. An example would be cleaning up temporary files. You wouldn&#8217;t want to have this code running in a web page. Fortunately rails includes a mechanism for doing this. Rake tasks make it easy to automate various aspects of your application.
</p>




<p>
  First, we need to create a couple models for our sample. In this sample we will have 2 models. Our first model, Product, will store product information. Our second model, Review, will be a review of the product. Run the commands below to generate these 2 models:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">Product</span> <span class="nb">name</span> <span class="n">average_rating</span><span class="ss">:float</span> <span class="ss">price</span><span class="p">:</span><span class="n">decimal</span><span class="p">{</span><span class="mi">12</span><span class="p">,</span><span class="mi">2</span><span class="p">}</span> <span class="ss">active</span><span class="p">:</span><span class="n">boolean</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">Review</span> <span class="ss">product</span><span class="p">:</span><span class="n">references</span> <span class="n">user</span> <span class="ss">rating</span><span class="p">:</span><span class="n">integer</span> <span class="ss">body</span><span class="p">:</span><span class="n">text</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Next, we need some seed data. Open up your seeds.rb file and add the following code:
</p>




<figure class='code'><figcaption><span>db/seeds.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Product</span><span class="o">.</span><span class="n">delete_all</span>
</span><span class='line'><span class="no">Review</span><span class="o">.</span><span class="n">delete_all</span>
</span><span class='line'>
</span><span class='line'><span class="no">Product</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="o">[</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Die Hard - Blu-Ray&quot;</span><span class="p">,</span> <span class="ss">price</span><span class="p">:</span> <span class="mi">9</span><span class="o">.</span><span class="mi">95</span><span class="p">,</span> <span class="ss">active</span><span class="p">:</span> <span class="kp">true</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Iron Man 3 - Blu-Ray&quot;</span><span class="p">,</span> <span class="ss">price</span><span class="p">:</span> <span class="mi">24</span><span class="o">.</span><span class="mi">95</span><span class="p">,</span> <span class="ss">active</span><span class="p">:</span> <span class="kp">true</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;Star Trek - Into Darkness - Blu-Ray&quot;</span><span class="p">,</span> <span class="ss">price</span><span class="p">:</span> <span class="mi">19</span><span class="o">.</span><span class="mi">95</span><span class="p">,</span> <span class="ss">active</span><span class="p">:</span> <span class="kp">true</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;The Little Mermaid - Blu-Ray&quot;</span><span class="p">,</span> <span class="ss">price</span><span class="p">:</span> <span class="mi">29</span><span class="o">.</span><span class="mi">95</span><span class="p">,</span> <span class="ss">active</span><span class="p">:</span> <span class="kp">true</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="s2">&quot;This is the End - Blu-Ray&quot;</span><span class="p">,</span> <span class="ss">price</span><span class="p">:</span> <span class="mi">17</span><span class="o">.</span><span class="mi">95</span><span class="p">,</span> <span class="ss">active</span><span class="p">:</span> <span class="kp">true</span><span class="p">}</span>
</span><span class='line'><span class="o">]</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">Review</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="o">[</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="n">product_id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;Dan&quot;</span><span class="p">,</span> <span class="ss">rating</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;Epic Action Flick&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="n">product_id</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;Will&quot;</span><span class="p">,</span> <span class="ss">rating</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;The Stunts were AMAZING!&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="n">product_id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;James&quot;</span><span class="p">,</span> <span class="ss">rating</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;I didn&#39;t like it as much as the first one.&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="n">product_id</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;Lisa&quot;</span><span class="p">,</span> <span class="ss">rating</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;Epic!&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="n">product_id</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;Linda&quot;</span><span class="p">,</span> <span class="ss">rating</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;A classic revived!  Well worth watching again.&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span> <span class="n">product_id</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;Kathy&quot;</span><span class="p">,</span> <span class="ss">rating</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;This movie is hilarious!&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="nb">id</span><span class="p">:</span> <span class="mi">7</span><span class="p">,</span> <span class="n">product_id</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="ss">user</span><span class="p">:</span> <span class="s2">&quot;Jim&quot;</span><span class="p">,</span> <span class="ss">rating</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="ss">body</span><span class="p">:</span> <span class="s2">&quot;Really cheesy.&quot;</span><span class="p">}</span>
</span><span class='line'><span class="o">]</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then run rake db:seed
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">seed</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now, lets open up the Product model so that we can add an association to reviews. Modify the Product model so that it looks like the code listed below:
</p>




<figure class='code'><figcaption><span>app/models/product.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Product</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:reviews</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then create a file called calculate_averages.rake in the lib/tasks folder and add the following code:
</p>




<figure class='code'><figcaption><span>lib/tasks/calculate_averages.rake </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rake&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">task</span> <span class="ss">:calculate_averages</span> <span class="o">=&gt;</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">products</span> <span class="o">=</span> <span class="no">Product</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">products</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">product</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;Calculating average rating for </span><span class="si">#{</span><span class="n">product</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">...&quot;</span>
</span><span class='line'>    <span class="n">product</span><span class="o">.</span><span class="n">update_attribute</span><span class="p">(</span><span class="ss">:average_rating</span><span class="p">,</span> <span class="n">product</span><span class="o">.</span><span class="n">reviews</span><span class="o">.</span><span class="n">average</span><span class="p">(</span><span class="s2">&quot;rating&quot;</span><span class="p">))</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now, if we run our rake command we will see that the averages are updated in the database.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="n">calculate_averages</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add Google Analytics to Ruby on Rails Application]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/19/add-google-analytics-to-ruby-on-rails-application/"/>
    <updated>2015-04-19T12:30:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/19/add-google-analytics-to-ruby-on-rails-application</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Add Google Analytics to Ruby on Rails Application" />
</p>




<p>
  Google Analytics is used by the vast majority of the internet to monitor traffic. You can quickly and easily add Google Analytics to your Rails application, however there are a few things you should pay attention to. First, make sure that the Analytics code only loads up in a production environment. It&#8217;s best to do this by first creating a partial called google_analytics and placing the following code inside of it:
</p>




<figure class='code'><figcaption><span>app/views/layouts/_google_analytics.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">% if </span><span class="no">Rails</span><span class="o">.</span><span class="n">env</span> <span class="o">==</span> <span class="s2">&quot;production&quot;</span>  <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;script type=&quot;text/javascript&quot;&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">var</span> <span class="n">_gaq</span> <span class="o">=</span> <span class="n">_gaq</span> <span class="o">||</span> <span class="o">[]</span><span class="p">;</span>
</span><span class='line'>    <span class="n">_gaq</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;_setAccount&#39;</span><span class="p">,</span> <span class="s1">&#39;UA-00000000-1&#39;</span><span class="o">]</span><span class="p">);</span>
</span><span class='line'>    <span class="n">_gaq</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;_trackPageview&#39;</span><span class="o">]</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">(</span><span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">var</span> <span class="n">ga</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">createElement</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">);</span> <span class="n">ga</span><span class="o">.</span><span class="n">type</span> <span class="o">=</span> <span class="s1">&#39;text/javascript&#39;</span><span class="p">;</span> <span class="n">ga</span><span class="o">.</span><span class="n">async</span> <span class="o">=</span> <span class="kp">true</span><span class="p">;</span>
</span><span class='line'>      <span class="n">ga</span><span class="o">.</span><span class="n">src</span> <span class="o">=</span> <span class="p">(</span><span class="s1">&#39;https:&#39;</span> <span class="o">==</span> <span class="n">document</span><span class="o">.</span><span class="n">location</span><span class="o">.</span><span class="n">protocol</span> <span class="p">?</span> <span class="s1">&#39;https://ssl&#39;</span> <span class="p">:</span> <span class="s1">&#39;http://www&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;.google-analytics.com/ga.js&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="n">var</span> <span class="n">s</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="n">getElementsByTagName</span><span class="p">(</span><span class="s1">&#39;script&#39;</span><span class="p">)</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">;</span> <span class="n">s</span><span class="o">.</span><span class="n">parentNode</span><span class="o">.</span><span class="n">insertBefore</span><span class="p">(</span><span class="n">ga</span><span class="p">,</span> <span class="n">s</span><span class="p">);</span>
</span><span class='line'>    <span class="p">})();</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="sr">/script&gt;</span>
</span><span class='line'><span class="sr">&lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  This code will tell Rails to only include the Analytics code in a production environment.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Generate Options]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/19/ruby-on-rails-generate-options/"/>
    <updated>2015-04-19T09:48:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/19/ruby-on-rails-generate-options</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails Generate Options" />
</p>




<p>
  There are many useful rails generate commands. I&#8217;ve listed some of them below for your reference:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Creates a model and controller, then adds a resource route to your routes.rb file.</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">resource</span> <span class="o">&lt;</span><span class="n">attribute</span><span class="o">&gt;</span><span class="p">:</span><span class="o">&lt;</span><span class="n">type</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="n">attribute</span><span class="o">&gt;</span><span class="p">:</span><span class="o">&lt;</span><span class="n">type</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Just like rails g scaffold, but doesn&#39;t create the model.</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">scaffold_controller</span> <span class="o">&lt;</span><span class="nb">name</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Creates a coffeescript/javascript and corresponding (s)css file.</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">assets</span> <span class="o">&lt;</span><span class="nb">name</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Creates a jbuilder file</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">jbuilder</span> <span class="o">&lt;</span><span class="nb">name</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">field</span><span class="o">&gt;</span><span class="p">:</span><span class="o">&lt;</span><span class="n">type</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">field</span><span class="o">&gt;</span><span class="p">:</span><span class="o">&lt;</span><span class="n">type</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Creates a custom helper.</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">helper</span> <span class="o">&lt;</span><span class="nb">name</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Allows you to create your own custom generates to be used with rails generate.</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">generator</span> <span class="o">&lt;</span><span class="nb">name</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Creates a rake task.</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="o">&lt;</span><span class="n">namespace</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">task_name</span><span class="o">&gt;</span> <span class="o">&lt;</span><span class="n">task_name</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  For a complete list of all generate commands, simply run rails g or rails generate from within a project.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Web Console]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/19/ruby-on-rails-web-console/"/>
    <updated>2015-04-19T08:29:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/19/ruby-on-rails-web-console</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails Web Console" />
</p>




<p>
  As you know, Ruby on Rails has long included the ability to load up an interactive console environment for your application. Simply running <code>rails c</code> would start this console, which allows you to do things like ActiveRecord queries, troubleshooting, and much more. Since the full Rails stack gets loaded you have access to pretty much anything your application has access to. This is useful to troubleshoot things on the spot.
</p>




<p>
  Starting with Ruby on Rails 4.2, developers will have access to a web based version of this console. The good news is that you don&#8217;t have to wait for Ruby on Rails 4.2 to hit in order to take advantage of this awesome capability. You can quickly and easily use the web console in your current Rails application by performing the steps below.
</p>




<p>
  <strong>Setup</strong><br/>
  To use the Rails web console, we need to include the web-console gem. Simply add the line below to your Gemfile, then run a bundle install to install it.
</p>




<figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="s1">&#39;web-console&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 2.0&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Terminal Commands:
</p>




<figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Next, we need to turn on the web console in our application configuration. To do this, simply add the following line to your development.rb environment file:
</p>




<figure class='code'><figcaption><span>config/environments/development.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">web_console</span><span class="o">.</span><span class="n">automount</span> <span class="o">=</span> <span class="kp">true</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now, let&#8217;s create a controller to play with the console. Run the command below to create a controller that we can use to play around with the console. For this example, we will create a controller called Homes with a method called show.
</p>




<p>
  Terminal Commands:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="no">Homes</span> <span class="n">show</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now, open up your routes file and modify it so that it looks like the code listed below:
</p>




<figure class='code'><figcaption><span>config/routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="s2">&quot;homes#show&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now open up the show view for the Homes controller and add in the code listed below:
</p>




<figure class='code'><figcaption><span>app/views/homes/show.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">console</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  If you start a rails server and navigate to your development environment, you&#8217;ll notice that there is a console at the bottom of the screen. You can execute Ruby and Rails code here. The console is running within your Rails application so pretty much anything goes.
</p>




<p>
  By default, console application is mounted to http://yoursite/console. However, what if we wish to change the path? We can easily do it by adding the line listed below to our development.rb file:
</p>




<figure class='code'><figcaption><span>config/environments/development.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">web_console</span><span class="o">.</span><span class="n">default_mount_path</span> <span class="o">=</span> <span class="s1">&#39;/your/favorite/path&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Whitelisting IPs</strong><br/>
  The console by default only works with if you are accessing it locally via 127.0.0.1. If you are on a network or using a VM, you may need to add your ip to a whitelist. You can easily do that by adding the line listed below to your development.rb file. Don&#8217;t forget to restart your Rails server for changes to take effect.
</p>




<figure class='code'><figcaption><span>config/environments/development.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">web_console</span><span class="o">.</span><span class="n">whitelisted_ips</span> <span class="o">=</span>  <span class="sx">%w( 127.0.0.1 192.168.0.100 )</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can also add an entire subnet. Remember to make sure you add 127.0.0.1 or the local machine won&#8217;t have access.
</p>




<figure class='code'><figcaption><span>config/environments/development.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">web_console</span><span class="o">.</span><span class="n">whitelisted_ips</span> <span class="o">=</span>  <span class="sx">%w( 127.0.0.1 192.168.0.016 )</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Run Other Commands</strong><br/>
  By default the console runs the rails console. However, you can have it run another command instead. For instance, we can turn the web console into an terminal running bash by adding the following line to our development.rb file:
</p>




<figure class='code'><figcaption><span>config/environments/development.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">web_console</span><span class="o">.</span><span class="n">command</span> <span class="o">=</span> <span class="s1">&#39;sudo /bin/login&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Be aware that passwords sent using this method are sent in plaintext. if that concerns you, you should consider using SSL.
</p>




<p>
  <strong>Security Considerations</strong><br/>
  At this point, it&#8217;s not advisable to run this on production. Exposing the console endpoint in a production environment means anyone can get access to the Rails console and therefore access to the system itself. Stick to the development/test environments. Hopefully in the future the Rails team will provide additional features that will allow console use in a production environment.
</p>




<p>
  As mentioned earlier, console information is sent plain text. If this concerns you, consider using SSL or not using the web console.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hash Data in Ruby]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/18/hash-data-in-ruby/"/>
    <updated>2015-04-18T17:25:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/18/hash-data-in-ruby</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Hash Data in Ruby" />
</p>




<p>
  Somethings we need to utilize hashing algorithms in Ruby and/or Rails. Examples of this include verifying file integrity, hashing passwords, and much more. In this brief article we will show you how to hash data in various formats.
</p>




<p>
  <strong>Calculate an MD5 Hash</strong><br/>
  The venerable MD5 algorithm is an older and simpler hashing algorithm. Please note that MD5 is considered insecure due to the fact it can be brute forced relatively quickly, so you should use this algorithm with extreme care. To use MD5, simply use the following code:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">hash</span> <span class="o">=</span> <span class="ss">Digest</span><span class="p">:</span><span class="ss">:MD5</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="s2">&quot;this is a test&quot;</span><span class="p">)</span> <span class="c1"># =&gt; &quot;54b0c58c7ce9f2a8b551351102ee0938&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Calculate a SHA-1 Hash</strong><br/>
  SHA-1 hashes are much more secure. SHA-1 can be used for passwords and file hashing, but it&#8217;s recommended that you move to SHA-2 (SHA256, SHA384, and SHA512) as soon as you can as they are even more secure. SHA-1 is also an excellent choice for maintaining file integrity.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">hash</span> <span class="o">=</span> <span class="ss">Digest</span><span class="p">:</span><span class="ss">:SHA1</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="s2">&quot;this is a test&quot;</span><span class="p">)</span> <span class="c1"># =&gt; &quot;fa26be19de6bff93f70bc2308434e4a440bbad02&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Calculate a SHA-2 hash: SHA256, SHA384, and SHA512</strong><br/>
  HA-2 includes a number of different digest lengths, with SHA-512 in theory being the most secure. Calculating these hashes is just as easy.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">Digest</span><span class="p">:</span><span class="ss">:SHA256</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="s2">&quot;this is a test&quot;</span><span class="p">)</span> <span class="c1"># =&gt; &quot;2e99758548972a8e8822ad47fa1017ff72f06f3ff6a016851f45c398732bc50c&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">hash</span> <span class="o">=</span> <span class="ss">Digest</span><span class="p">:</span><span class="ss">:SHA384</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="s2">&quot;this is a test&quot;</span><span class="p">)</span> <span class="c1"># =&gt; &quot;43382a8cc650904675c9d62d785786e368f3a99db99aeaaa7b76b02530677154d09c0b6bd2e21b4329fd41543b9a785b&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">hash</span> <span class="o">=</span> <span class="ss">Digest</span><span class="p">:</span><span class="ss">:SHA512</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">(</span><span class="s2">&quot;this is a test&quot;</span><span class="p">)</span> <span class="c1"># =&gt; &quot;7d0a8468ed220400c0b8e6f335baa7e070ce880a37e2ac5995b9a97b809026de626da636ac7365249bb974c719edf543b52ed286646f437dc7f810cc2068375c&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Export CSV]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/17/ruby-on-rails-export-csv/"/>
    <updated>2015-04-17T22:25:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/17/ruby-on-rails-export-csv</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails Export CSV" />
</p>




<p>
  Sometime you will want to provide a CSV export option for your users. This article will show you how.
</p>




<p>
  The first thing we need to do is open up the config/application.rb file and add:
</p>




<figure class='code'><figcaption><span>config/application.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;csv&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Next, we need to add some code to the model that will export the data in the CSV format. Add the following code to the model you wish to export to CSV:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">as_csv</span>
</span><span class='line'>  <span class="no">CSV</span><span class="o">.</span><span class="n">generate</span> <span class="k">do</span> <span class="o">|</span><span class="n">csv</span><span class="o">|</span>
</span><span class='line'>    <span class="n">csv</span> <span class="o">&lt;&lt;</span> <span class="n">column_names</span>
</span><span class='line'>    <span class="n">all</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">item</span><span class="o">|</span>
</span><span class='line'>      <span class="n">csv</span> <span class="o">&lt;&lt;</span> <span class="n">item</span><span class="o">.</span><span class="n">attributes</span><span class="o">.</span><span class="n">values_at</span><span class="p">(</span><span class="o">*</span><span class="n">column_names</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  This code will export both the column headers as well as the data in the csv format and return the result.
</p>




<p>
  Finally, we need to add a bit of extra code to our controller in order to return the CSV data to our user. Assuming your model and controller are named posts, add the following code to your posts controller:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>  <span class="vi">@posts</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:created_at</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">format</span><span class="o">.</span><span class="n">html</span>
</span><span class='line'>    <span class="nb">format</span><span class="o">.</span><span class="n">csv</span> <span class="p">{</span> <span class="n">send_data</span> <span class="vi">@posts</span><span class="o">.</span><span class="n">as_csv</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now, if you visit http://localhost:3000/posts.csv, you will be prompted to download the CSV.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Build a Sitemap for Your Ruby on Rails Application]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/16/how-to-build-a-sitemap-for-your-ruby-on-rails-application/"/>
    <updated>2015-04-16T21:40:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/16/how-to-build-a-sitemap-for-your-ruby-on-rails-application</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="How to Build a Sitemap for Your Ruby on Rails Application" />
</p>




<p>
  Sitemaps are a valuable tool for telling search engines about the structure of your website. Creating a sitemap and submitting it to the search engines can let Google or Bing know about the pages they have missed when they crawled your site. In addition, submitting a sitemap can speed up crawl times significantly.
</p>




<p>
  In this article we will show you how to build your own sitemap which you can then submit to the various search engines.
</p>




<p>
  <strong>Rails Application Setup</strong><br/>
  We are going to build a very simple blog. First we will build the blog itself, then we will add the functionality needed for the sitemap. Don&#8217;t worry, this won&#8217;t take long.
</p>




<p>
  First let&#8217;s create our models. We only need one model for this example, Post. The Post model is simply an instance of a blog entry. Run the commands below to create the Post model now:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">Post</span> <span class="n">title</span> <span class="ss">body</span><span class="p">:</span><span class="n">text</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Great, now let&#8217;s create our controllers. In this example we will have two controllers. The Posts controller lists our posts and lets us view individual posts, and the Sitemap controller actually generates the sitemap. Run the commands below to create these controllers now:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="no">Posts</span> <span class="n">index</span> <span class="n">show</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="no">Sitemap</span> <span class="n">index</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now let&#8217;s add our routes. Open up your routes file and modify it to look like the code listed below. Be sure not to overwrite line 1 of your routes file with line 1 of the example code listed:
</p>




<figure class='code'><figcaption><span>config/routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">SitemapExample</span><span class="p">:</span><span class="ss">:Application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:posts</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:index</span><span class="p">,</span> <span class="ss">:show</span><span class="o">]</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:sitemap</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:index</span><span class="o">]</span>
</span><span class='line'>  <span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="s2">&quot;posts#index&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now let&#8217;s add code to our controllers. First let&#8217;s add the code necessary to list and display posts to the Posts controller. Open up your Posts controller and modify it so that it looks like the code listed below:
</p>




<figure class='code'><figcaption><span>app/controllers/posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PostsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@posts</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="s2">&quot;created_at DESC&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>    <span class="vi">@post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now lets add code to our Sitemap controller. The only code we need here is code to list the posts. Open up your Sitemap controller and modify it so that it looks like the code listed below.
</p>




<figure class='code'><figcaption><span>app/controllers/sitemap_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">SitemapController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="n">respond_to</span> <span class="ss">:xml</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>    <span class="vi">@posts</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="s2">&quot;created_at DESC&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now let&#8217;s create the views. First lets create the index view for the Posts controller. Open up the index view and modify it so that i looks like the code listed below.
</p>




<figure class='code'><figcaption><span>app/views/posts/index.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">My</span> <span class="no">Blog</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'><span class="sr">&lt;%  @posts.each do |post| %&gt;</span>
</span><span class='line'><span class="sr">  &lt;h3&gt;&lt;%= link_to post.title, post %&gt;&lt;/</span><span class="n">h3</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">%= post.body.html_safe %&gt;</span>
</span><span class='line'><span class="sx">  &lt;/p&gt;</span>
</span><span class='line'><span class="sx">  &lt;% if post !=</span> <span class="vi">@posts</span><span class="o">.</span><span class="n">last</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">    &lt;hr /&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now let&#8217;s create the show view. Open up the show view for the Posts controller and modify it so that it looks like the code listed below.
</p>




<figure class='code'><figcaption><span>app/views/posts/show.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&lt;</span><span class="sx">%= @post.title %&gt;&lt;/h1&gt;</span>
</span><span class='line'><span class="sx">&lt;p&gt;</span>
</span><span class='line'><span class="sx">  &lt;%=</span> <span class="vi">@post</span><span class="o">.</span><span class="n">body</span><span class="o">.</span><span class="n">html_safe</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now it&#8217;s time for the sitemap. A sitemap is an XML file that typically consists of a number of url xml elements encapsulated by a urlset xml element. Each url typically has the 4 elements listed below.
</p>


<table>
<thead>
<tr>
<th>XML </th>
<th> Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>loc </td>
<td> The actual url to the page you wish to list in the sitemap.</td>
</tr>
<tr>
<td>changefreq </td>
<td> How often the page changes, can be always, hourly, daily, weekly, monthly, yearly, or never.</td>
</tr>
<tr>
<td>priority </td>
<td> How important the page is within the context of your site.</td>
</tr>
<tr>
<td>lastmod </td>
<td> The date of the last modification of this page.</td>
</tr>
</tbody>
</table>


<br/>




<p>
  An example sitemap is listed below:
</p>




<figure class='code'><figcaption><span>sitemap.xml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="p">?</span><span class="n">xml</span> <span class="n">version</span><span class="o">=</span><span class="s2">&quot;1.0&quot;</span> <span class="n">encoding</span><span class="o">=</span><span class="s2">&quot;UTF-8&quot;</span><span class="sc">?&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">urlset</span> <span class="n">xmlns</span><span class="o">=</span><span class="s2">&quot;http://www.sitemaps.org/schemas/sitemap/0.9&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">url</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">loc</span><span class="o">&gt;</span><span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="ss">localhost</span><span class="p">:</span><span class="mi">3000</span><span class="o">/&lt;</span><span class="sr">/loc&gt;</span>
</span><span class='line'><span class="sr">    &lt;changefreq&gt;hourly&lt;/</span><span class="n">changefreq</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">priority</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">&lt;</span><span class="sr">/priority&gt;</span>
</span><span class='line'><span class="sr">  &lt;/u</span><span class="n">rl</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">url</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">loc</span><span class="o">&gt;</span><span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="ss">localhost</span><span class="p">:</span><span class="mi">3000</span><span class="o">/</span><span class="n">posts</span><span class="o">/</span><span class="mi">2</span><span class="o">&lt;</span><span class="sr">/loc&gt;</span>
</span><span class='line'><span class="sr">    &lt;changefreq&gt;daily&lt;/</span><span class="n">changefreq</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">priority</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">.</span><span class="mi">8</span><span class="o">&lt;</span><span class="sr">/priority&gt;</span>
</span><span class='line'><span class="sr">    &lt;lastmod&gt;2014-03-04T17:01:15.37+00:00&lt;/</span><span class="n">lastmod</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sr">/url&gt;</span>
</span><span class='line'><span class="sr">  &lt;url&gt;</span>
</span><span class='line'><span class="sr">    &lt;loc&gt;http:/</span><span class="o">/</span><span class="ss">localhost</span><span class="p">:</span><span class="mi">3000</span><span class="o">/</span><span class="n">posts</span><span class="o">/</span><span class="mi">1</span><span class="o">&lt;</span><span class="sr">/loc&gt;</span>
</span><span class='line'><span class="sr">    &lt;changefreq&gt;daily&lt;/</span><span class="n">changefreq</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">priority</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">.</span><span class="mi">8</span><span class="o">&lt;</span><span class="sr">/priority&gt;</span>
</span><span class='line'><span class="sr">    &lt;lastmod&gt;2014-03-04T17:01:15.36+00:00&lt;/</span><span class="n">lastmod</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sr">/url&gt;</span>
</span><span class='line'><span class="sr">&lt;/u</span><span class="n">rlset</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  This example was generated from our application. To do this yourself, create a new view for our Sitemaps controller called index.xml.builder and add in the code listed below.
</p>




<figure class='code'><figcaption><span>app/views/sitemap/index.xml.builder </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">xml</span><span class="o">.</span><span class="n">instruct!</span>
</span><span class='line'>
</span><span class='line'><span class="n">xml</span><span class="o">.</span><span class="n">urlset</span><span class="p">(</span><span class="ss">xmlns</span><span class="p">:</span> <span class="s2">&quot;http://www.sitemaps.org/schemas/sitemap/0.9&quot;</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">xml</span><span class="o">.</span><span class="n">url</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">xml</span><span class="o">.</span><span class="n">loc</span> <span class="n">root_url</span>
</span><span class='line'>    <span class="n">xml</span><span class="o">.</span><span class="n">changefreq</span><span class="p">(</span><span class="s2">&quot;hourly&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">xml</span><span class="o">.</span><span class="n">priority</span> <span class="s2">&quot;1.0&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="vi">@posts</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span>
</span><span class='line'>    <span class="n">xml</span><span class="o">.</span><span class="n">url</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">xml</span><span class="o">.</span><span class="n">loc</span> <span class="n">post_url</span><span class="p">(</span><span class="n">post</span><span class="p">)</span>
</span><span class='line'>      <span class="n">xml</span><span class="o">.</span><span class="n">changefreq</span><span class="p">(</span><span class="s2">&quot;daily&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="n">xml</span><span class="o">.</span><span class="n">priority</span> <span class="s2">&quot;0.8&quot;</span>
</span><span class='line'>      <span class="n">xml</span><span class="o">.</span><span class="n">lastmod</span> <span class="n">post</span><span class="o">.</span><span class="n">updated_at</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span><span class="s2">&quot;%Y-%m-%dT%H:%M:%S.%2N%:z&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  The first xml.url block adds an entry for our root url. In a more complex application we would probably want to add static entries for other pages. The next thing the code does is loop through each post and create a xml url element for each.
</p>




<p>
  You can preview your sitemap by starting your rails server and visiting http://localhost:3000/sitemap.xml.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What New with Foreign Keys in Rails 4.2?]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/16/what-new-with-foreign-keys-in-rails-4-dot-2/"/>
    <updated>2015-04-16T15:43:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/16/what-new-with-foreign-keys-in-rails-4-dot-2</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="What New with Foreign Keys in Rails 4.2?" />
</p>




<p>
  Previous versions of Rails did not have the ability to create foreign keys without resorting to executing SQL statements directly. This lead to messy, database dependent solutions that weren&#8217;t very nice. 
</p>




<p>
  Luckily, Rails 4.2 rectifies this with new features to add and remove foreign keys. In this article we will discuss what foreign keys are, and how to add them to your database.
</p>




<p>
  If you don&#8217;t know what a foreign key is, well, quite simply, a foreign key links one table to another&#8217;s primary key. For example, if I have an authors table and a books table, I could create a foreign key that points from books back to authors, linking the two tables together. Then, these two tables become linked. It means that I cannot add or update the record with invalid data for the author_id field in the books table.  I can also tell the database server what to do when I update or delete the record. For example, I can tell rails to automatically delete child records when the parent is deleted (delete an author from the authors table and all the author&#8217;s books are deleted). I could also tell Rails to set the author_id column to null or to simply not let me delete the author while child records exist.
</p>




<p>
  <strong>Add Foreign Keys</strong><br/>
  To add a foreign key to the books table:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">add_foreign_key</span> <span class="ss">:books</span><span class="p">,</span> <span class="ss">:authors</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  We can also give the foreign key a custom name:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">add_foreign_key</span> <span class="ss">:books</span><span class="p">,</span> <span class="ss">:authors</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="ss">:my_foreign_key</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  If we are using a non Rails friendly database, we can specify the column names we wish to use for the foreign key. For example, let&#8217;s say the primary key of the authors table is author_id and the key in the books table is auid. We could simply use the following code to create the foreign key:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">add_foreign_key</span> <span class="ss">:books</span><span class="p">,</span> <span class="ss">:authors</span><span class="p">,</span> <span class="ss">column</span><span class="p">:</span> <span class="ss">:auid</span><span class="p">,</span> <span class="n">primary_key</span><span class="p">:</span> <span class="ss">:author_id</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  We can control the behavior of the foreign key as well. A list of the available behaviors are below. Independent behaviors can be set for both update as well as delete.<br/>
  - :restrict (default) - Prevents changes from being made.<br/>
  - :nullify - Sets the child columns to null.<br/>
  - :cascade - Cascades down to the child records. For instance, deleting an author deletes the author&#8217;s books.
</p>




<p>
  To specify behaviors, you simply use the <code>on_delete</code> or <code>on_update</code> parameters. For example, the following code would cascade deletes so that the books get deleted when the parent gets deleted.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">add_foreign_key</span> <span class="ss">:books</span><span class="p">,</span> <span class="ss">:authors</span><span class="p">,</span> <span class="n">on_delete</span><span class="p">:</span> <span class="n">cascade</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Delete Foreign Keys</strong><br/>
  It is just as easy to delete foreign keys:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">remove_foreign_key</span> <span class="ss">:books</span><span class="p">,</span> <span class="ss">:authors</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can optionally specify the name of the foreign key to delete:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">remove_foreign_key</span> <span class="ss">:books</span><span class="p">,</span> <span class="nb">name</span><span class="p">:</span> <span class="ss">:my_foreign_key</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  If you have non Rails friendly column names, you can specify the column name that contains the foreign key you wish to remove:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">remove_foreign_key</span> <span class="ss">:books</span><span class="p">,</span> <span class="ss">column</span><span class="p">:</span> <span class="ss">:auid</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails _filter vs _action]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/16/ruby-on-rails-filter-vs-action/"/>
    <updated>2015-04-16T09:13:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/16/ruby-on-rails-filter-vs-action</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails _filter vs _action" />
</p>




<p>
  If you are coming to Rails 4 from earlier versions of Rails, you may have noticed the new <code>_action</code> methods floating around.
</p>




<p>
  Seeing these for the first time may have left you scratching your head a bit and asking &#8220;Aren&#8217;t these the same as the <code>_filter</code> functions in previous versions of Rails?&#8221; The answer is a resounding YES. For Rails 4.x, the rails team decided to rename the functions to better describe what they are doing. Don&#8217;t worry, the old functions still work. However it is recommended that you use the new syntax going forward, as the <code>_filter</code> functions may be deprecated in the future.
</p>




<p>
  Below shows a list of the old and new functions:
</p>


<table>
<thead>
<tr>
<th>Old Function </th>
<th> New Function</th>
</tr>
</thead>
<tbody>
<tr>
<td>before_filter </td>
<td> Abefore_action</td>
</tr>
<tr>
<td>after_filter </td>
<td> after_action</td>
</tr>
<tr>
<td>around_filter </td>
<td> around_action</td>
</tr>
<tr>
<td>append_after_filter </td>
<td> append_after_action</td>
</tr>
<tr>
<td>append_around_filter </td>
<td> append_around_actionor DOM classes.</td>
</tr>
<tr>
<td>prepend_around_filter </td>
<td> prepend_around_action</td>
</tr>
<tr>
<td>append_before_filter </td>
<td> append_before_action</td>
</tr>
<tr>
<td>skip_before_filter </td>
<td> skip_before_action</td>
</tr>
<tr>
<td>skip_around_filter </td>
<td> skip_around_action</td>
</tr>
<tr>
<td>skip_after_filter </td>
<td> skip_after_action</td>
</tr>
<tr>
<td>skip_filter </td>
<td> skip_action_callback</td>
</tr>
</tbody>
</table>


<br/>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quickly Add Bootstrap to Your Project]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/16/quickly-add-bootstrap-to-your-project/"/>
    <updated>2015-04-16T08:52:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/16/quickly-add-bootstrap-to-your-project</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/bootstrap.png" alt="Quickly Add Bootstrap to Your Project" />
</p>




<p>
  Bootstrap is an amazing layout library that is awesome for building both prototypes as well as full blown websites. This very website makes extensive use of Bootstrap 3 to make things look awesome on both mobiles sites as well as the desktop.
</p>




<p>
  What if we want to quickly prototype out a site using bootstrap? Fortunately you can easily add bootstrap to your site without downloading anything, simply reference the associated files on the Yandex CDN. 
</p>




<p>
  Yandex is a worldwide search engine that is extremely popular in russia. Their CDN is extremely fast and has many different libraries available. To add bootstrap via yandex, simply include them like so (this also include jQuery, since Bootstrap JS requires it).
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;http://yandex.st/jquery/1.11.1/jquery.min.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">link</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;http://yandex.st/bootstrap/3.1.1/css/bootstrap.min.css&quot;</span> <span class="nx">media</span><span class="o">=</span><span class="s2">&quot;screen&quot;</span> <span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;http://yandex.st/bootstrap/3.1.1/js/bootstrap.min.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  A full list of the libraries available can be found on the <a href="https://tech.yandex.ru/jslibs/" target="_blank">yandex</a> website. Note that it&#8217;s in russian, so you might need to translate it.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Respond with JSON in Ruby on Rails Application]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/15/respond-with-json-in-ruby-on-rails-application/"/>
    <updated>2015-04-15T15:06:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/15/respond-with-json-in-ruby-on-rails-application</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Translate Your Ruby on Rails Application" />
</p>




<p>
  When building a RESTful API in Rails application, there are many different options and gems you can use to format your JSON responses. This isn&#8217;t a post about how to build an API, but rather about some of the different popular options on how to define and structure JSON.
</p>




<p>
  <strong>RABL</strong><br/>
  <a href="http://www.leighhalliday.com/responding-with-json-in-rails" target="_blank">RABL</a> is a DSL for generating both JSON and XML. In my mind it has a similar feel to Jbuilder, which I&#8217;ll discuss below. It&#8217;s works by creating a view with the extension .rabl, and defining which attributes, nodes, and relations you wish to include in the JSON response.
</p>




<p>
  Here&#8217;s an example:
</p>




<figure class='code'><figcaption><span>app/views/posts/index.rabl </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">collection</span> <span class="vi">@posts</span>
</span><span class='line'><span class="n">attributes</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:subject</span>
</span><span class='line'><span class="n">child</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span> <span class="p">{</span> <span class="n">attributes</span> <span class="ss">:full_name</span> <span class="p">}</span>
</span><span class='line'><span class="n">node</span><span class="p">(</span><span class="ss">:read</span><span class="p">)</span> <span class="p">{</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span> <span class="n">post</span><span class="o">.</span><span class="n">read_by?</span><span class="p">(</span><span class="vi">@user</span><span class="p">)</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Active Model Serializer</strong><br/>
  <a href="https://github.com/rails-api/active_model_serializers" target="_blank">Active Model Serializer</a> is a great way to build JSON responses using an object oriented approach. The objects have a very similar feel to how your ActiveModel object is set up in terms of attributes and relationships. It also allows you to choose your adapter-to decide what type of JSON structure is produced-or to build your own. Popular supported formats are JSON-API and JSON-HAL.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PostSerializer</span> <span class="o">&lt;</span> <span class="ss">ActiveModel</span><span class="p">:</span><span class="ss">:Serializer</span>
</span><span class='line'>  <span class="n">attributes</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:body</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:comments</span>
</span><span class='line'>  <span class="n">url</span> <span class="ss">:post</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Jbuilder</strong><br/>
  <a href="https://github.com/rails/jbuilder" target="_blank">jbuilder</a> provides a very similar DSL to RABL. Jbuilder is included with Rails, so it is used quite a bit. Rails Casts has a free episode which goes into greater detail about Jbuilder. It&#8217;s very easy to use and provides a lot of flexibility in defining exactly what attributes are included in and how the response is formatted and nested.
</p>




<figure class='code'><figcaption><span>app/views/message/show.json.jbuilder </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">json</span><span class="o">.</span><span class="n">content</span> <span class="n">format_content</span><span class="p">(</span><span class="vi">@message</span><span class="o">.</span><span class="n">content</span><span class="p">)</span>
</span><span class='line'><span class="n">json</span><span class="o">.</span><span class="p">(</span><span class="vi">@message</span><span class="p">,</span> <span class="ss">:created_at</span><span class="p">,</span> <span class="ss">:updated_at</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">json</span><span class="o">.</span><span class="n">author</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">json</span><span class="o">.</span><span class="n">name</span> <span class="vi">@message</span><span class="o">.</span><span class="n">creator</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">familiar</span>
</span><span class='line'>  <span class="n">json</span><span class="o">.</span><span class="n">email_address</span> <span class="vi">@message</span><span class="o">.</span><span class="n">creator</span><span class="o">.</span><span class="n">email_address_with_name</span>
</span><span class='line'>  <span class="n">json</span><span class="o">.</span><span class="n">url</span> <span class="n">url_for</span><span class="p">(</span><span class="vi">@message</span><span class="o">.</span><span class="n">creator</span><span class="p">,</span> <span class="nb">format</span><span class="p">:</span> <span class="ss">:json</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Grape Entity</strong><br/>
  <a href="https://github.com/intridea/grape-entity" target="_blank">Grape Entity</a> was extracted from Grape, which is a popular gem used for building RESTful APIs. Similarly to RABL and Jbuilder, it provides a DSL for defining entities which are the structure of your JSON response.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">API</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Entities</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">Status</span> <span class="o">&lt;</span> <span class="ss">Grape</span><span class="p">:</span><span class="ss">:Entity</span>
</span><span class='line'>      <span class="n">expose</span> <span class="ss">:user_name</span>
</span><span class='line'>      <span class="n">expose</span> <span class="ss">:text</span><span class="p">,</span> <span class="ss">documentation</span><span class="p">:</span> <span class="p">{</span> <span class="ss">type</span><span class="p">:</span> <span class="s2">&quot;String&quot;</span><span class="p">,</span> <span class="ss">desc</span><span class="p">:</span> <span class="s2">&quot;Status update text.&quot;</span> <span class="p">}</span>
</span><span class='line'>      <span class="n">expose</span> <span class="ss">:ip</span><span class="p">,</span> <span class="k">if</span><span class="p">:</span> <span class="p">{</span> <span class="ss">type</span><span class="p">:</span> <span class="ss">:full</span> <span class="p">}</span>
</span><span class='line'>      <span class="n">expose</span> <span class="ss">:user_type</span><span class="p">,</span> <span class="ss">:user_id</span><span class="p">,</span> <span class="k">if</span><span class="p">:</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">status</span><span class="p">,</span> <span class="n">options</span><span class="o">|</span> <span class="n">status</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">public?</span> <span class="p">}</span>
</span><span class='line'>      <span class="n">expose</span> <span class="ss">:contact_info</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">expose</span> <span class="ss">:phone</span>
</span><span class='line'>        <span class="n">expose</span> <span class="ss">:address</span><span class="p">,</span> <span class="ss">using</span><span class="p">:</span> <span class="ss">API</span><span class="p">:</span><span class="ss">:Address</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>ROAR</strong><br/>
  <a href="https://github.com/apotonick/roar" target="_blank">ROAR</a> allows you to build presenter classes to represent your data. It comes with support for JSON, JSON-HAL, JSON-API, and XML.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;roar/json&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">SongRepresenter</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">Roar</span><span class="p">:</span><span class="ss">:JSON</span>
</span><span class='line'>  <span class="n">property</span> <span class="ss">:title</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>ActiveModel or Hash</strong><br/>
  This may seem like a strange thing to point out, but for very simple cases, you can simply call the to_json method on either an ActiveModel object or a native Ruby Hash.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Using an @organization model</span>
</span><span class='line'><span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@organization</span><span class="o">.</span><span class="n">to_json</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># Using a plain Ruby Hash</span>
</span><span class='line'><span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nb">name</span><span class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">name</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">email</span><span class="p">:</span> <span class="vi">@user</span><span class="o">.</span><span class="n">email</span>
</span><span class='line'>    <span class="p">}</span><span class="o">.</span><span class="n">to_json</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create QR Codes in Ruby on Rails Application]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/15/create-qr-codes-in-ruby-on-rails-application/"/>
    <updated>2015-04-15T11:34:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/15/create-qr-codes-in-ruby-on-rails-application</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Create QR Codes in Ruby on Rails Application" />
</p>




<p>
  <a href="https://rubygems.org/gems/barby" target="_blank">Barby</a> is a great gem for generating a barcode or QR code. You can choose to output it as any number of barcode types or as a QR code. This example will use a QR code but I have successfully used the Code128 barcode which is fairly common in the retail space.
</p>




<p>
  Add Barby to your gem file:
</p>




<figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;barby&#39;</span><span class="p">,</span>  <span class="s1">&#39;~&gt; 0.6.2&#39;</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rqrcode&#39;</span><span class="p">,</span><span class="s1">&#39;~&gt; 0.4.2&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Here is an example helper for generating the QR code as base64 encoded png data:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">generate_qr</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;barby&#39;</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;barby/barcode&#39;</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;barby/barcode/qr_code&#39;</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;barby/outputter/png_outputter&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">barcode</span> <span class="o">=</span> <span class="ss">Barby</span><span class="p">:</span><span class="ss">:QrCode</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="ss">level</span><span class="p">:</span> <span class="ss">:q</span><span class="p">,</span> <span class="ss">size</span><span class="p">:</span> <span class="mi">5</span><span class="p">)</span>
</span><span class='line'>  <span class="n">base64_output</span> <span class="o">=</span> <span class="no">Base64</span><span class="o">.</span><span class="n">encode64</span><span class="p">(</span><span class="n">barcode</span><span class="o">.</span><span class="n">to_png</span><span class="p">({</span> <span class="ss">xdim</span><span class="p">:</span> <span class="mi">5</span> <span class="p">}))</span>
</span><span class='line'>  <span class="s2">&quot;data:image/png;base64,</span><span class="si">#{</span><span class="n">base64_output</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  And an example call from your view:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">%</span><span class="n">img</span><span class="p">{</span><span class="ss">src</span><span class="p">:</span> <span class="n">generate_qr</span><span class="p">(</span><span class="s2">&quot;http://geekhmer.github.io/&quot;</span><span class="p">),</span> <span class="ss">class</span><span class="p">:</span> <span class="s2">&quot;qr-code&quot;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Translate Your Ruby on Rails Application]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/15/translate-your-ruby-on-rails-application/"/>
    <updated>2015-04-15T08:58:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/15/translate-your-ruby-on-rails-application</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Translate Your Ruby on Rails Application" />
</p>




<p>
  If you&#8217;re planning to take over the world, you&#8217;ll need to convince everyone to speak your language, or better yet, why don&#8217;t you offer them a website that speaks their language. The goal is to have a website available in multiple languages, and for the visitors to be able to toggle over to the language they are most comfortable with.
</p>




<p>
  <strong>Routing</strong><br/>
  I like to nest all of my routes inside of a :locale scope. I also limit the locale options to a set that I have predefined in an initializer. You could also choose to deal with locale validity later on in the flow (before_action method), but it is up to you.
</p>




<figure class='code'><figcaption><span>config/routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scope</span> <span class="s2">&quot;(:locale)&quot;</span><span class="p">,</span> <span class="ss">locale</span><span class="p">:</span> <span class="sr">/</span><span class="si">#{</span><span class="ss">MySite</span><span class="p">:</span><span class="ss">:ROUTE_LOCALES</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">)</span><span class="si">}</span><span class="sr">/</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">root</span> <span class="ss">:to</span> <span class="o">=&gt;</span> <span class="s1">&#39;home#index&#39;</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:pages</span>
</span><span class='line'>  <span class="c1"># etc...</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>onfig/initializers/my_site.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">MySite</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="ss">MySite</span><span class="p">:</span><span class="ss">:LOCALES</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">en</span><span class="p">:</span>    <span class="s2">&quot;English&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">kh</span><span class="p">:</span>    <span class="s2">&quot;Khmer&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">fr</span><span class="p">:</span>    <span class="s2">&quot;French&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">en_us</span><span class="p">:</span> <span class="s2">&quot;US English&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="n">en_uk</span><span class="p">:</span> <span class="s2">&quot;UK English&quot;</span><span class="p">,</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="ss">MySite</span><span class="p">:</span><span class="ss">:ROUTE_LOCALES</span> <span class="o">=</span> <span class="ss">MySite</span><span class="p">:</span><span class="ss">:LOCALES</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="n">each_with_object</span><span class="p">({})</span> <span class="k">do</span> <span class="o">|</span><span class="n">locale</span><span class="p">,</span> <span class="n">hsh</span><span class="o">|</span>
</span><span class='line'>  <span class="n">hsh</span><span class="o">[</span><span class="n">locale</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">tr</span><span class="p">(</span><span class="s2">&quot;_&quot;</span><span class="p">,</span><span class="s2">&quot;-&quot;</span><span class="p">)</span><span class="o">]</span> <span class="o">=</span> <span class="n">locale</span> <span class="k">if</span> <span class="n">locale</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">2</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  This line of code will make sure all of your routes have the current locale in them.
</p>




<figure class='code'><figcaption><span>app/controllers/application_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">default_url_options</span><span class="p">(</span><span class="n">options</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="p">{</span> <span class="ss">locale</span><span class="p">:</span> <span class="no">I18n</span><span class="o">.</span><span class="n">locale</span> <span class="p">}</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Determining Locale</strong><br/>
  I usually have a before_action filter which does its best to determine the URL of the application. You might have other things in here too if you keep track of the preferred locale in a cookie, or if it is attached to the user&#8217;s session data or account. You may also want to use the HTTP_ACCEPT_LANGUAGE to determine if there is a match.
</p>




<figure class='code'><figcaption><span>app/controllers/application_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="ss">ActionController</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">before_action</span> <span class="ss">:determine_locale</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">protected</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">determine_locale</span>
</span><span class='line'>    <span class="n">locale</span> <span class="o">=</span> <span class="k">if</span> <span class="n">params</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="ss">:new_locale</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="ss">MySite</span><span class="p">:</span><span class="ss">:ROUTE_LOCALES</span><span class="o">.</span><span class="n">keys</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:new_locale</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>      <span class="n">params</span><span class="o">[</span><span class="ss">:new_locale</span><span class="o">]</span>
</span><span class='line'>    <span class="k">elsif</span> <span class="n">params</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="ss">:locale</span><span class="p">)</span>
</span><span class='line'>      <span class="n">params</span><span class="o">[</span><span class="ss">:locale</span><span class="o">]</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">locale_from_url</span><span class="p">(</span><span class="n">request</span><span class="o">.</span><span class="n">host</span><span class="p">)</span> <span class="o">||</span> <span class="no">I18n</span><span class="o">.</span><span class="n">default_locale</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">set_locale</span><span class="p">(</span><span class="n">locale</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">locale_from_url</span><span class="p">(</span><span class="n">host</span><span class="p">)</span>
</span><span class='line'>    <span class="c1"># ... determine locale from host if you have different domains</span>
</span><span class='line'>    <span class="c1"># for different locales</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">set_locale</span><span class="p">(</span><span class="n">locale</span><span class="p">)</span>
</span><span class='line'>    <span class="no">I18n</span><span class="o">.</span><span class="n">locale</span> <span class="o">=</span> <span class="n">locale</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">,</span><span class="s2">&quot;_&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">to_sym</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Static Text</strong><br/>
  The developers should be entering their keys into the yml files located in the locales folder if your rails application. I normally only have one for English, and then use other I18n backends (Redis for example) serve up the other translations. If the translations are in Redis, you will obviously need code that puts them there. I am working on an engine for this called <a href="https://github.com/leighhalliday/idioma" target="_blank">Idioma</a> which persists the translations using ActiveRecord and also to Redis at the same time.
</p>




<p>
  <strong>Dynamic Content</strong><br/>
  Because I18n comes built in to Rails, you won&#8217;t need to install many gems. But for dynamic content I recommend <a href="https://github.com/globalize/globalize" target="_blank">Globalize</a>. Along with this one is a handy gem called <a href="https://rubygems.org/gems/globalize-accessors" target="_blank">Globalize Accessors</a> which will help you when creating forms to enter this data in.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Page</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">translates</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:body</span><span class="p">,</span> <span class="n">fallbacks_for_empty_translations</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">globalize_accessors</span> <span class="ss">locales</span><span class="p">:</span> <span class="ss">MySite</span><span class="p">:</span><span class="ss">:LOCALES</span><span class="o">.</span><span class="n">keys</span><span class="p">,</span> <span class="ss">attributes</span><span class="p">:</span> <span class="o">[</span><span class="ss">:title</span><span class="p">,</span> <span class="ss">:body</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Dynamic Content</strong><br/>
  One thing I set up are fallbacks&#8230; this is so you can translate English once, and only when there is a locale that differs from the default do you need to specifically translate it for that locale. Example, in the US colour is spelled like color.
</p>




<figure class='code'><figcaption><span>config/application.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">i18n</span><span class="o">.</span><span class="n">default_locale</span> <span class="o">=</span> <span class="ss">:en_ca</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">i18n</span><span class="o">.</span><span class="n">fallbacks</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">en_us</span><span class="p">:</span> <span class="ss">:en</span><span class="p">,</span>
</span><span class='line'>  <span class="n">kh</span>   <span class="p">:</span> <span class="ss">:kh</span><span class="p">,</span>
</span><span class='line'>  <span class="n">en_uk</span><span class="p">:</span> <span class="ss">:en</span><span class="p">,</span>
</span><span class='line'>  <span class="n">fr_lu</span><span class="p">:</span> <span class="ss">:fr</span><span class="p">,</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Having Your Website Translated</strong><br/>
  Because the translation team probably isn&#8217;t the same as the dev team, and they probably don&#8217;t have access to your code repository nor know how to edit yml files, you will want to have another way of giving them access to the translations. There is an established tool called <a href="https://github.com/tolk/tolk" target="_blank">Tolk</a>.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Model Generator Useful Shortcuts]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/13/ruby-on-rails-model-generator-useful-shortcuts/"/>
    <updated>2015-04-13T13:11:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/13/ruby-on-rails-model-generator-useful-shortcuts</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails Renaming a Database Column" />
</p>




<p>
  <code>rails generate</code> command provides a lot of useful functionality, however some of it may not be immediately known to you as a developer. In this article we will explore a number of useful shortcuts available in the rails model generator.
</p>




<h3>Basics</h3>




<p>
  Let&#8217;s start with the basic command line usage.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">User</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <code>rails g</code> is the same thing as rails generate. Both commands do the same thing. We will use this shortcut throughout this article.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">Product</span> <span class="nb">name</span> <span class="ss">quantity</span><span class="p">:</span><span class="n">integer</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  This command generates a model named product with 2 fields, name, which is a string, and quantity, which is an integer. By not specifying the type for name, rails defaults to using string. Below is a complete list of types that you can use with the modal generator.
</p>




<p>
  <strong>Field Type Lists</strong><br/>
  - integer<br/>
  - primary_key<br/>
  - decimal<br/>
  - float<br/>
  - boolean<br/>
  - binary<br/>
  - string<br/>
  - text<br/>
  - date<br/>
  - time<br/>
  - datetime<br/>
  - timestamp
</p>




<p>
  You can also specify the size of a field as seen below.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">Client</span> <span class="nb">name</span><span class="ss">:string</span><span class="p">{</span> <span class="mi">100</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  This will create a name field with a limit of 100 characters. For the decimal type, you can specify a precision and scale value as well.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">Product</span> <span class="nb">name</span> <span class="ss">price</span><span class="p">:</span><span class="n">decimal</span><span class="p">{</span> <span class="mi">12</span><span class="p">,</span> <span class="mi">2</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Namespaced Models</strong><br/>
  You can create namespaced models as well. This is useful for example, in creating a special set of administrative users that are separate from your regular users. Running the command below will place the user model in the Admin namespace, which will have a prefixed table name of admin_ in the database.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="n">admin</span><span class="o">/</span><span class="n">user</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  As you can see from the code listed below, the user belongs to the admin namespace like mentioned earlier.
</p>




<figure class='code'><figcaption><span>app/models/admin/user.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Admin</span><span class="o">::</span><span class="no">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Adding an Index</strong><br/>
  You can also add a database index right from the command line.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">Site</span> <span class="nb">name</span><span class="ss">:string:index</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  In addition, you can make the index unique.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">Client</span> <span class="nb">name</span><span class="ss">:string:uniq</span>
</span></code></pre></td></tr></table></div></figure>




<h3>Model Relationships</h3>




<p>
  You can specify a basic relationship between models.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">User</span> <span class="ss">client</span><span class="p">:</span><span class="n">references</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  This will create a user with a column named client_id, add an index, and automatically add a belongs_to relationship to the User model.
</p>




<p>
  You can also make the relationship polymorphic.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="n">picture</span> <span class="ss">imageable</span><span class="p">:</span><span class="n">references</span><span class="p">{</span> <span class="n">polymorphic</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  This will set up a polymorphic relationship for pictures. Polymorphic relationships allow you to &#8216;share&#8217; a table between many different models. For instance, Products and People can both have pictures.
</p>




<p>
  The rails model generator exposes a lot of useful functionality that can save time if used properly. Thanks for reading!
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Renaming a Database Column]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/13/ruby-on-rails-renaming-a-database-column/"/>
    <updated>2015-04-13T13:01:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/13/ruby-on-rails-renaming-a-database-column</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails Renaming a Database Column" />
</p>




<p>
  To rename a database column, first you need to create a migration:
</p>




<p>
  Terminal commands line:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">migration</span> <span class="no">RenameColumnXinTableYtoZ</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Next you need to edit the migration and add the following line:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rename_column</span> <span class="ss">:table</span><span class="p">,</span> <span class="ss">:old_column</span><span class="p">,</span> <span class="ss">:new_column</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Finally, please run a <code>rake db:migrate</code> and you are all set.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to uninstall RVM?]]></title>
    <link href="http://geekhmer.github.io/blog/2015/04/12/how-to-uninstall-rvm/"/>
    <updated>2015-04-12T15:05:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/04/12/how-to-uninstall-rvm</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/rights_and_wrongsof_ruby.jpg" width="400" alt="How to uninstall RVM?" />
</p>




<p>
  There are times when you may need to completely remove RVM. For example, lets say that your installation is corrupt, or you don&#8217;t wish to use RVM anymore. Luckily this is easy to do. The first thing we need to do is to tell RVM to remove itself. This can be accomplished with the rvm impode command. Simply type:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rvm</span> <span class="n">implode</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Once you do that, RVM should remove itself. The next thing you need to do is uninstall the &#8216;rvm&#8217; gem. Simply type:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">uninstall</span> <span class="n">rvm</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  This will uninstall the RVM gem.
</p>




<p>
  The next thing you need to do is check to make sure that RVM is removed from your path. You need to check files like .bashrc, .bash_profile, and .profile to make sure all traces of the path are removed.
</p>




<p>
  The final thing you need to do is make sure both the .rvm and .rvmrc files have been removed. simply type:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">ls</span> <span class="o">-</span><span class="n">a</span> <span class="o">~</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  This will list all of the files in your home directory. Type the following lines to remove the .rvm and .rvmrc files if they exist:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="o">.</span><span class="n">rvm</span>
</span><span class='line'><span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="o">.</span><span class="n">rvmrc</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, if you no longer have a Ruby installation on your system you may also want to remove the .gem folder if it exists. Once you are finished, make sure to log out/back into your system for all changes to take effect. That&#8217;s it!!! See ya!!!
</p>

]]></content>
  </entry>
  
</feed>
