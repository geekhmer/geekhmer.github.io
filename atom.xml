<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2014-07-24T15:04:01+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vim - The Best Programming Editor for UNIX]]></title>
    <link href="http://geekhmer.github.io/blog/2014/07/24/vim-the-best-programming-editor-for-unix/"/>
    <updated>2014-07-24T12:20:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/07/24/vim-the-best-programming-editor-for-unix</id>
    <content type="html"><![CDATA[<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/vim.png"><img src="http://geekhmer.github.io/images/vim.png" width="680" /></a><br/>
</p>




<p>
  Vim is an advanced text editor that provide the power of Unix editor &#8216;Vi&#8217;, with a more complete feature set.<br/>
</p>




<p>
  Vim is a highly configurable text editor built to enable efficient text editing. It is an improved version of the vi editor distributed with most UNIX systems.<br/>
</p>




<p>
  Vim is often called a &#8220;programmer&#8217;s editor,&#8221; and so useful for programming that many consider it an entire IDE. It&#8217;s not just for programmers, Vim is perfect for all kinds of text editing, from composing email to editing configuration files.<br/>
</p>




<p>
  <strong>Features</strong><br/>
  - highly configurable.<br/>
  - syntax highlightning.<br/>
  - windows split (both vertically as well as horrizontally).<br/>
  - tabbing.<br/>
  - folding.<br/>
  - unicode support.<br/>
  - flexible indenting.<br/>
  - &#8230;
</p>




<p>
  <strong>The Good</strong><br/>
  Vim is a professional text editor targeting mainly programmers, but it can be also used by any other type of user.<br/>
  It received the best text editor award from readers of the Linux Journal magazine in 2001, 2002, 2003 , 2004 and 2005, which I think tells a lot about its efficiency. 
</p>




<p>
  <strong>The Bad</strong><br/>
  The bad and ugly part about Vim would be for most users the fact that they must do the learning first in order to be able to use it.<br/>
</p>




<p>
  <strong>The Truth</strong><br/>
  Vim is a multi-platform text editor, Vim provides all the functionality of a regular text editor, such as spell checking, Unicode support, possibility of undo/redo the most recent actions, integrated help but it has also some features of its own which make it a powerful and reliable tool.
</p>




<p>
  So far so good, To get a better idea on what Vim is, you can also check <a href="http://www.vim.org/" target="_blank">www.vim.org</a> :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Decorator Design Pattern]]></title>
    <link href="http://geekhmer.github.io/blog/2014/07/22/decorator-design-pattern/"/>
    <updated>2014-07-22T20:10:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/07/22/decorator-design-pattern</id>
    <content type="html"><![CDATA[<p>
  In the object-oriented world, simple applications usually require small classes with static behaviors. Adding, modifying, and sharing those behaviors can be achieved by mixing in modules or inheriting from other classes at compile time.<br/>

</p>




<p>
  However, more complex applications might require a particular instance of a class to gain additional functionality at runtime. To modify the behavior of an object dynamically, we can utilize the decorator design pattern.<br/>
</p>




<p>
  <strong>When to Decorate</strong><br/>
  Decoration can be used to add behavior to any individual object without affecting the behavior of other objects of the same class. Essentially the existing object is being wrapped with additional functionality. 
</p>




<p>
  <strong>Some practical problems that can be solved by decoration are</strong><br/>
  - applying one or more UI elements to a specific UI widget at runtime.<br/>
  - saving an ActiveRecord model in various ways based on conditionals in a Rails controller.<br/>
  - adding additional information to data streams by pre/appending with additional stream data.<br/>
</p>




<p>
  <strong>Implementations of Decorators in Ruby</strong><br/>
  There are several ways to implement the decorator pattern in Ruby, but I cover my 3 favorite ways:<br/>
  - Class + Method Missing decorator<br/>
  - Module + Extend + Super decorator<br/>
  - Plain Old Ruby Object decorator<br/>
</p>




<p>
  <strong>Class + Method Missing Decorator</strong><br/>
  The benefits of this implementation are:<br/>
  - can be wrapped infinitely using Ruby instantiation.<br/>
  - delegates through all decorators.<br/>
  - can use the same decorator more than once on the same component.<br/>
  - transparently uses component&#8217;s original interface.<br/>
</p>




<p>
  The drawbacks of this implementation are:<br/>
  - uses method_missing.<br/>
  - the class of the decorated object is the decorator.<br/>
</p>




<p>
  Sample example
</p>




<figure class='code'><figcaption><span>sample.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Decorator</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">decorated</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@decorated</span> <span class="o">=</span> <span class="n">decorated</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="n">meth</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@decorated</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="n">meth</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@decorated</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">meth</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">super</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">respond_to?</span><span class="p">(</span><span class="n">meth</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@decorated</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="n">meth</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Coffee</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">cost</span>
</span><span class='line'>    <span class="mi">2</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Milk</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Decorator</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">cost</span>
</span><span class='line'>    <span class="vi">@decorated</span><span class="o">.</span><span class="n">cost</span> <span class="o">+</span> <span class="mi">0</span><span class="o">.</span><span class="mi">4</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Whip</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Decorator</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">cost</span>
</span><span class='line'>    <span class="vi">@decorated</span><span class="o">.</span><span class="n">cost</span> <span class="o">+</span> <span class="mi">0</span><span class="o">.</span><span class="mi">2</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Sprinkles</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Decorator</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">cost</span>
</span><span class='line'>    <span class="vi">@decorated</span><span class="o">.</span><span class="n">cost</span> <span class="o">+</span> <span class="mi">0</span><span class="o">.</span><span class="mi">3</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Whip</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Coffee</span><span class="o">.</span><span class="n">new</span><span class="p">)</span><span class="o">.</span><span class="n">cost</span> <span class="c1">#=&gt; 2.2</span>
</span><span class='line'><span class="no">Sprinkles</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Whip</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Milk</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Coffee</span><span class="o">.</span><span class="n">new</span><span class="p">)))</span><span class="o">.</span><span class="n">cost</span> <span class="c1">#=&gt; 2.9</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Factory class</span>
</span><span class='line'><span class="k">class</span> <span class="nc">CoffeeFactory</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">cappuccino</span>
</span><span class='line'>    <span class="no">Sprinkles</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Cream</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Milk</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Coffee</span><span class="o">.</span><span class="n">new</span><span class="p">)))</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">CoffeeFactory</span><span class="o">.</span><span class="n">cappucino</span><span class="o">.</span><span class="n">kind_of?</span> <span class="no">Coffee</span> <span class="c1">#=&gt; true</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Module + Extend + Super Decorator</strong><br/>
  The benefits of this implementation are:<br/>
  - it delegates through all decorators.<br/>
  - has all of the original interface because it is the original object.<br/>
</p>




<p>
  The drawbacks of this implementation are:<br/>
  - can not use the same decorator more than once on the same object.<br/>
  - difficult to tell which decorator added the functionality.<br/>
</p>




<p>
  Sample example
</p>




<figure class='code'><figcaption><span>sample.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Coffee</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">cost</span>
</span><span class='line'>    <span class="mi">2</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Milk</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">cost</span>
</span><span class='line'>    <span class="k">super</span> <span class="o">+</span> <span class="mi">0</span><span class="o">.</span><span class="mi">4</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">Sugar</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">cost</span>
</span><span class='line'>    <span class="k">super</span> <span class="o">+</span> <span class="mi">0</span><span class="o">.</span><span class="mi">2</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">coffee</span> <span class="o">=</span> <span class="no">Coffee</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">coffee</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="no">Milk</span><span class="p">)</span>
</span><span class='line'><span class="n">coffee</span><span class="o">.</span><span class="n">cost</span>   <span class="c1">#=&gt; 2.4</span>
</span><span class='line'><span class="n">coffee</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="no">Sugar</span><span class="p">)</span>
</span><span class='line'><span class="n">coffee</span><span class="o">.</span><span class="n">cost</span>   <span class="c1">#=&gt; 2.6</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Plain Old Ruby Object Decorator</strong><br/>
  The benefits of this implementation are:<br/>
  - can be wrapped infinitely using Ruby instantiation.<br/>
  - delegates through all decorators.<br/>
  - can use same decorator more than once on component.<br/>
</p>




<p>
  The drawbacks of this implementation are:<br/>
  - cannot transparently use component&#8217;s original interface.<br/>
</p>




<p>
  Sample example
</p>




<figure class='code'><figcaption><span>sample.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Coffee</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">cost</span>
</span><span class='line'>    <span class="mi">2</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">origin</span>
</span><span class='line'>    <span class="s2">&quot;Cambodia&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Sugar</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">component</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@component</span> <span class="o">=</span> <span class="n">component</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">cost</span>
</span><span class='line'>    <span class="vi">@component</span><span class="o">.</span><span class="n">cost</span> <span class="o">+</span> <span class="mi">0</span><span class="o">.</span><span class="mi">2</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Milk</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">component</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@component</span> <span class="o">=</span> <span class="n">component</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">cost</span>
</span><span class='line'>    <span class="vi">@component</span><span class="o">.</span><span class="n">cost</span> <span class="o">+</span> <span class="mi">0</span><span class="o">.</span><span class="mi">4</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">coffee</span> <span class="o">=</span> <span class="no">Coffee</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="no">Sugar</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Milk</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">coffee</span><span class="p">))</span><span class="o">.</span><span class="n">cost</span>  <span class="c1">#=&gt; 2.6</span>
</span><span class='line'><span class="no">Sugar</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Sugar</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">coffee</span><span class="p">))</span><span class="o">.</span><span class="n">cost</span> <span class="c1">#=&gt; 2.4</span>
</span><span class='line'><span class="no">Sugar</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Milk</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">coffee</span><span class="p">))</span><span class="o">.</span><span class="n">class</span> <span class="c1">#=&gt; Sugar</span>
</span><span class='line'><span class="no">Milk</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">coffee</span><span class="p">)</span><span class="o">.</span><span class="n">origin</span>           <span class="c1">#=&gt; NoMethodError</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, Let decorate your way with Decorator Design Pattern. :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploy Ruby on Rails 4 to Heroku on Ubuntu]]></title>
    <link href="http://geekhmer.github.io/blog/2014/07/21/deploy-ruby-on-rails-4-to-heroku-on-ubuntu/"/>
    <updated>2014-07-21T21:20:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/07/21/deploy-ruby-on-rails-4-to-heroku-on-ubuntu</id>
    <content type="html"><![CDATA[<p>
  Ruby on Rails is a popular web framework written in Ruby. In this artical covers using Rails 4 on Heroku. The many step for deploying Rails 4 to Heroku below:
</p>




<p>
  <strong>1. Installation heroku environment <a href="https://toolbelt.heroku.com/">(www.toolbelt.heroku.com)</a></strong> &#8211; if you not yet have<br/>
  Open your terminal and type command below:<br/>
</p>




<p>
  1. <code>wget -qO- https://toolbelt.heroku.com/install.sh | sh</code><br/>
  2. <code>gem install heroku foreman</code><br/>
  3. <code>heroku login</code><br/>
</p>




<p>
  <strong>2. Installation git</strong> &#8211; if you not yet have<br/>
  Open your terminal and type command below:<br/>
</p>




<p>
  1. <code>sudo apt-get install git-core</code><br/>
  2. <code>sudo apt-get install expat openssl zlib1g zlib1g-dev</code><br/>
</p>




<p>
  <strong>3. Create Ruby on Rails project<br/></strong>
  Open your terminal and type command below:<br/>
</p>




<p>
  <code>rails new app_name -d postgresql</code><br/>
</p>




<p>
  Go into you project, Open your terminal and type command below:<br/>
</p>




<p>
  <code>cd app_name</code><br/>
</p>




<p>
  We will first create a controller called welcome for our home page to live, Open your terminal and type command below:
</p>




<p>
  <code>rails generate controller welcome</code><br/>
</p>




<p>
   Next then add an index page in directory app/views/welcome/index.html.erb<br/>
</p>




<figure class='code'><figcaption><span>index.html.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h2&gt;</span>Hello World<span class="nt">&lt;/h2&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span><span class='line'>  The time is now: <span class="err">&lt;</span>%= Time.now %&gt;
</span><span class='line'><span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  We need to have Rails route to index action. We’ll edit config/routes.rb<br/>
</p>




<figure class='code'><figcaption><span>routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">root</span> <span class="s1">&#39;welcome#index&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Let run the rails app and visiting http://localhost:3000 in your browser, Open your terminal and type command below:
</p>




<p>
  <code>rails server</code><br/>
</p>




<p>
  Then open Gemfile and add gems below at the end:<br/>
</p>




<p>
  <code>gem 'heroku'</code><br/>
  <code>gem 'thin'</code><br/>
  <code>gem 'rails_12factor', group: :production</code></code>
</p>




<p>
  Then open your terminal and type command below:<br/>
</p>




<p>
  <code>bundle install</code>
</p>




<p>
  Rails 4 requires Ruby 1.9.3 or above. Heroku has a recent version of Ruby installed, however you can specify an exact version by using the ruby DSL in your Gemfile by adding ruby &#8220;2.1.1&#8221; at the end of Gemfile. 
</p>




<p>
  <code>ruby "2.1.1"</code><br/>
</p>




<p>
  <strong>4. Deploy to heroku<br/></strong>
  Open your terminal and type command below:<br/>
</p>




<p>
  1. <code>cd project_name</code><br/>
  2. <code>git init</code><br/>
  3. <code>git add .</code><br/>
  4. <code>git commit -m “my first commit”</code><br/>
  5. <code>heroku create heroku_app_name</code><br/>
  6. <code>heroku git:remote -a heroku_app_name</code><br/>
  7. <code>git push heroku master</code><br/>
</p>




<p>
  <strong>Each time you wish to deploy to Heroku<br/></strong>
  Open your terminal and type command below:<br/>
</p>




<p>
  1. <code>git add -A</code><br/>
  2. <code>git commit -m “commit for deploy to heroku”</code><br/>
  3. <code>git push -f heroku</code><br/><br/>
</p>




<p>
  So far so good, You now have your first application deployed to Heroku. The next step is to deploy your own application. :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Useful Best Coding in Ruby on Rails Project]]></title>
    <link href="http://geekhmer.github.io/blog/2014/07/17/useful-best-coding-in-ruby-on-rails-project/"/>
    <updated>2014-07-17T22:24:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/07/17/useful-best-coding-in-ruby-on-rails-project</id>
    <content type="html"><![CDATA[<p>
  While a lot of techniques and libraries have come and gone as the community&#8217;s preferred way of doing something, there are some best practices that remain, and can lead to writing the clean code, most secure and maintainable Ruby on Rails code possible.<br/><br/>
  Listed here there are the most popular and useful best coding you can use as a Ruby on Rails developer:
</p>




<p>
  <strong>Fat Model - Thin Controller</strong><br/>
  The most important ways to write clear and concise cod in Ruby on Rails is &#8220;Fat Model - Thin Controller&#8221;. Model and Controller are parts of MVC(Model - View - Controller), many logic should go in the Model, and Controller is a nice interface between the view and Model.<br/><br/>
  In priactice, We should move any logic that isn&#8217;t about the response(setting a flash message, redirect, render view) to the model instead of the controller, anyway we can reuse it where possible and make it possible for testing outside of the Controller.
</p>




<p>
  Let look at sample example we have code in brands_controller.rb:
</p>




<figure class='code'><figcaption><span>brands_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>  <span class="vi">@brands</span> <span class="o">=</span> <span class="no">Brand</span><span class="o">.</span><span class="n">joins</span><span class="p">(</span><span class="ss">:products</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s1">&#39;products.category_uuid = ?&#39;</span><span class="p">,</span> <span class="s1">&#39;AA43D840-C70B-11E3-9C51-B888E33867FC&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">uniq</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  We can refactor it like this:
</p>




<figure class='code'><figcaption><span>brands_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>  <span class="vi">@brands</span> <span class="o">=</span> <span class="no">Brand</span><span class="o">.</span><span class="n">find_brands_by_category</span><span class="p">(</span><span class="s1">&#39;AA43D840-C70B-11E3-9C51-B888E33867FC&#39;</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Then we can move the logic into model brand.rb:
</p>




<figure class='code'><figcaption><span>brand.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">find_brands_by_category</span><span class="p">(</span><span class="n">uuid</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Brand</span><span class="o">.</span><span class="n">joins</span><span class="p">(</span><span class="ss">:products</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s1">&#39;products.category_uuid = ?&#39;</span><span class="p">,</span> <span class="n">uuid</span><span class="p">)</span><span class="o">.</span><span class="n">uniq</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  With the methods Brand.find_brands_by_category, we’ve not only made it simpler to test our code, we’ve also made it possible to reuse that same set of conditions in another location. But as we’ll see shortly, even this is still not ideal.
</p>




<p>
  <strong>Reusable Scopes and Relations</strong><br/>
  Ruby on Rails provides a better way &#8211; scopes to avoid duplication condition in another methods.
</p>




<p>
  Let look at sample example we have code in brands.rb:
</p>




<figure class='code'><figcaption><span>brand.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scope</span> <span class="ss">:under_portal</span><span class="p">,</span> <span class="nb">lambda</span><span class="p">{</span> <span class="o">|</span><span class="n">portal_uuid</span><span class="o">|</span> <span class="n">where</span><span class="p">(</span><span class="n">portal_uuid</span><span class="p">:</span> <span class="n">portal_uuid</span><span class="p">)</span> <span class="k">unless</span> <span class="n">portal_uuid</span><span class="o">.</span><span class="n">blank?</span> <span class="p">}</span>
</span><span class='line'><span class="n">scope</span> <span class="ss">:under_listing</span><span class="p">,</span> <span class="nb">lambda</span><span class="p">{</span> <span class="o">|</span><span class="n">alias_id</span><span class="o">|</span> <span class="n">where</span><span class="p">(</span><span class="n">listing_alias_id</span><span class="p">:</span> <span class="n">alias_id</span><span class="p">)</span> <span class="k">unless</span> <span class="n">alias_id</span><span class="o">.</span><span class="n">blank?</span> <span class="p">}</span>
</span><span class='line'><span class="n">scope</span> <span class="ss">:under_category</span><span class="p">,</span> <span class="nb">lambda</span><span class="p">{</span> <span class="o">|</span><span class="n">category_uuid</span><span class="o">|</span> <span class="n">where</span><span class="p">(</span><span class="n">category_uuid</span><span class="p">:</span> <span class="n">category_uuid</span><span class="p">)</span> <span class="k">unless</span> <span class="n">category_uuid</span><span class="o">.</span><span class="n">blank?</span> <span class="p">}</span>
</span><span class='line'><span class="n">scope</span> <span class="ss">:under_brand</span><span class="p">,</span> <span class="nb">lambda</span><span class="p">{</span> <span class="o">|</span><span class="n">brand_uuid</span><span class="o">|</span> <span class="n">where</span><span class="p">(</span><span class="n">brand_uuid</span><span class="p">:</span> <span class="n">brand_uuid</span><span class="p">)</span> <span class="k">unless</span> <span class="n">brand_uuid</span><span class="o">.</span><span class="n">blank?</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">set_scope</span><span class="p">(</span><span class="n">portal_uuid</span><span class="p">,</span> <span class="n">listing_alias_id</span><span class="p">,</span> <span class="n">category_uuid</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span> <span class="n">brand_uuid</span><span class="o">=</span><span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">under_portal</span><span class="p">(</span><span class="n">portal_uuid</span><span class="p">)</span><span class="o">.</span><span class="n">under_listing</span><span class="p">(</span><span class="n">listing_alias_id</span><span class="p">)</span><span class="o">.</span><span class="n">under_category</span><span class="p">(</span><span class="n">category_uuid</span><span class="p">)</span><span class="o">.</span><span class="n">under_brand</span><span class="p">(</span><span class="n">brand_uuid</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Virtual Attributes</strong><br/>
  If you find that you’re manipulating data before passing it to a model (for example, converting the type of an object), it’s likely time you started structuring your code to take advantage of virtual attributes.<br/>
</p>




<p>
  Virtual attributes are a very simple idea—essentially, all you’re doing is defining your own getter and setter methods.<br/>
</p>




<p>
  Let look at sample example we have code:
</p>




<figure class='code'><figcaption><span>brand.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:user</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="vi">@user</span><span class="o">.</span><span class="n">first_name</span><span class="p">,</span> <span class="vi">@user</span><span class="o">.</span><span class="n">last_name</span> <span class="o">=</span> <span class="n">params</span><span class="o">[</span><span class="ss">:user</span><span class="o">][</span><span class="ss">:full_name</span><span class="o">].</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  We could remove the second line, and instead add the following to our User model:
</p>




<figure class='code'><figcaption><span>brand.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">full_name</span><span class="o">=</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">first_name</span><span class="p">,</span> <span class="nb">self</span><span class="o">.</span><span class="n">last_name</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Use the Built-in Ruby Duck Typing Methods</strong><br/>
  Ruby uses several conventions that can make development easier like implementing a to_s instance method on an object will give you a standard way of getting a string representation of your object.
</p>


<p>
  By implementing these standard type conversions—in addition to to_s, there’s also to_i for integers, let have a look at the following string interpolation:
</p>




<figure class='code'><figcaption><span>brand.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;Hello there, </span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Use Non-database-backed Models</strong><br/>
  Although models in Rails are mostly based on ActiveRecord::Base or some other type of object mapper for a database, it’s important to remember that in MVC, the M isn’t restricted to database-backed models.
</p>




<p>
  Using non-database-backed models can help to organize logic which might otherwise become muddy. For example, there are libraries that give you anActiveRecord-like interface for contact form emails.
</p>




<p>
  When it comes time to interact with these models in your controller code, your code will be that much cleaner, as you can use the exact same approach as with database-backed models.
</p>




<p>
  <strong>Package Your Code into Gems</strong><br/>
  I you&#8217;ve used Ruby on Rails, you&#8217;ve noticed the wealth of rubygems available to Rails developers.
  When you write code you think is general enough—which usually just means you’ve written it more than once before in another application, let extract it into a gem suitable for a wider range of purposes.<br/>
</p>




<p>
  So far so good, there are hundreds of coding practices or techniques that can make your life as a Ruby on Rails developer easier, but I’ve tried to pick out some. :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gems for Helping Speed Up Your Ruby on Rails Application]]></title>
    <link href="http://geekhmer.github.io/blog/2014/06/30/gems-for-helping-speed-up-your-ruby-on-rails-application/"/>
    <updated>2014-06-30T10:55:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/06/30/gems-for-helping-speed-up-your-ruby-on-rails-application</id>
    <content type="html"><![CDATA[<p>
  <strong>1. rails-footnotes</strong><br/>
  Description: This gem allows you to display footnotes in your application on pertinent information such as database queries, request parameters, etc. You can also create your own custom footnotes for objects in your application.<br/>
  Helping: It’s helpful for debugging your application and showing you how long your database query took.<br/>
  Source: <a href="https://github.com/josevalim/rails-footnotes" target="_blank">https://github.com/josevalim/rails-footnotes</a>
</p>




<p>
  <strong>2. bullet</strong><br/>
  Description: This gem watches your database queries and alerts you when it thinks you should use eager loading, when you’re using eager loading unnecessarily, and when to consider using counter cache.<br/>
  Helping: Unnecessary database queries slow down your application’s performance. Using eager loading and counter cache are two easy things you can implement for a performance boost. For high traffic websites, database queries can be the bottleneck for performance.<br/>
  Source: <a href="https://github.com/flyerhzm/bullet" target="_blank">https://github.com/flyerhzm/bullet</a>
</p>




<p>
  <strong>3. request-log-analyzer</strong><br/>
  Description: This gem outputs a performance report based on your application’s database request log file(s). It includes metrics such as average server time (the average time a server needs to respond to a user request) and cumulative server time (the sum of all the server time needed to handle all the requests for a given action on the server, i.e., the “load” on a server).<br/>
  Helping: It uses your log files to tell you how your server is responding to database requests and points you in the direction of code to optimize in your application.<br/>
  Source: <a href="https://github.com/wvanbergen/request-log-analyzer" target="_blank">https://github.com/wvanbergen/request-log-analyzer</a>
</p>




<p>
  <strong>4. ruby-prof</strong><br/>
  Description: This is a code profiling tool for MRI ruby implementations. It can generate graphical reports and gives information on call times, memory usage, and object allocation.<br/>
  Helping: It can help you figure out where your “slow code” is in your rails application.<br/>
  Source: <a href="https://github.com/ruby-prof/ruby-prof" target="_blank">https://github.com/ruby-prof/ruby-prof</a>
</p>




<p>
  <strong>5. rack-mini-profiler</strong><br/>
  Description: This is originally a .NET tool ported over to Ruby that displays a speed profile badge on each html page you navigate to.<br/>
  Helping: If a page feels “slow”, MiniProfiler can give you a good idea of where the bottleneck is. It also lets you know which “sessions” you have not seen and displays them to you the next time you access your user interface. It allows you to easily see how much time you’re spending on database queries versus other non-SQL related bottlenecks.<br/>
  Source: <a href="https://github.com/MiniProfiler/rack-mini-profiler" target="_blank">https://github.com/MiniProfiler/rack-mini-profiler</a>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Strong Parameters With Fields For &amp; Nested Forms in Rails 4]]></title>
    <link href="http://geekhmer.github.io/blog/2014/06/28/using-strong-parameters-with-fields-for-and-nested-forms-in-rails-4/"/>
    <updated>2014-06-28T11:48:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/06/28/using-strong-parameters-with-fields-for-and-nested-forms-in-rails-4</id>
    <content type="html"><![CDATA[<p>
  With strong_parameters becoming the standard way of handling security in Rails 4, I played around with it. It works great except the documentation isn’t clear on how to handle nested forms inside Rails, specifically with the accepts_nested_attributes_for in the model and fields_for in views.<br/>
  So far so good, let take a look a short example below.
</p>




<figure class='code'><figcaption><span>account.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Account</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_many</span> <span class="ss">:people</span>
</span><span class='line'>  <span class="n">accepts_nested_attributes_for</span> <span class="ss">:people</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>person.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Person</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:account</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>accounts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AccountsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">new</span>
</span><span class='line'>    <span class="vi">@account</span> <span class="o">=</span> <span class="no">Account</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>    <span class="vi">@account</span><span class="o">.</span><span class="n">people</span><span class="o">.</span><span class="n">build</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>    <span class="vi">@account</span> <span class="o">=</span> <span class="no">Account</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">new_account_params</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@account</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>      <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>        <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="p">{</span><span class="n">redirect_to</span> <span class="n">root_path</span><span class="p">,</span> <span class="ss">notice</span><span class="p">:</span> <span class="s2">&quot;Account created successfully.&quot;</span><span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">new_account_params</span>
</span><span class='line'>    <span class="n">params</span><span class="o">.</span><span class="n">require</span><span class="p">(</span><span class="ss">:account</span><span class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">,</span> <span class="n">people_attributes</span><span class="p">:</span> <span class="o">[</span><span class="ss">:id</span><span class="p">,</span> <span class="ss">:email</span><span class="p">,</span> <span class="ss">:password</span><span class="p">,</span> <span class="ss">:password_confirmation</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Ruby?]]></title>
    <link href="http://geekhmer.github.io/blog/2014/06/28/why-ruby/"/>
    <updated>2014-06-28T00:07:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/06/28/why-ruby</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/logo_ruby.png" />
</p>




<p>
  <strong>History</strong><br/>
  - Ruby was conceived on February 24, 1993 by Yukihiro Matsumoto who wished to create a new language that balanced functional programming with imperative programming.<br/>
  - purpose of Ruby language help every programmer in the world to be productive, and to enjoy programming, and to be happy.
</p>




<p>
  <strong>What is Ruby?</strong><br/>
  - Ruby is a dynamic, reflective, general-purpose object-oriented programming language that combines syntax inspired by Perl with Smalltalk-like features.<br/>
  - Interpreted Script Language.
  - Ruby was first designed and developed in the mid-1990s by Yukihiro &#8216;Matz&#8217; Matsumoto in Japan.<br/>
  - The standard 1.8.7 implementation is written in C.
</p>




<h4>Good point of Ruby</h4>




<p>
  <strong>Reduce code</strong>
</p>




<figure class='code'><figcaption><span>In Java </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kr">public</span> <span class="kr">class</span> <span class="nx">HelloWorld</span> <span class="p">{</span>
</span><span class='line'>  <span class="kr">public</span> <span class="kr">static</span> <span class="k">void</span> <span class="nx">main</span><span class="p">(</span><span class="nb">String</span> <span class="nx">args</span><span class="p">[])</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">System</span><span class="p">.</span><span class="nx">out</span><span class="p">.</span><span class="nx">println</span><span class="p">(</span><span class="err">“</span><span class="nx">Hello</span> <span class="nx">World</span><span class="err">”</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>In Ruby </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">puts</span> <span class="err">“</span><span class="nx">Hellow</span> <span class="nx">World</span><span class="err">”</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Communities</strong><br/>
  Ruby have large communities.
</p>




<p>
  <img src="http://geekhmer.github.io/images/ruby_communities.png" />
</p>




<p>
  <strong>Code is Human-Readable</strong><br/>
  The code was designed from the start to be human-readable and this means that non-programmer can have a very easy to understand what a program is designed to do.
</p>




<p>
  <strong>Ruby on Rails</strong> (<a href="https://www.ruby-lang.org/en/" target="_blank">www.ruby-lang.org</a>)<br/>
  A Model-View-Controller framework for creating database-driven websites in Ruby. Rails is build on simple concepts.
</p>




<p>
  <strong>RubyGems</strong> (<a href="https://rubygems.org/" target="_blank">www.rubygems.org</a>)<br/>
  A package manager for the Ruby programming language that provides a standard format for distributing Ruby programs and libraries (in a self-contained format called a “gem”), a tool designed to easily manage the installation of gems, and a server for distributing them.
</p>




<p>
  <strong>Command-line</strong><br/>
  The interactive Ruby shell is a unique feature that allows developers to maintain and experiment with commands. There is no need to write webpages and check their functionality in a browser. 
</p>




<p>
  <strong>Object-Oriented-Programming (OOP)</strong><br/>
  Object-Oriented-Programming is a necessity for clean and maintainable code. However, In Ruby, everything is an object.
</p>




<p>
  <strong>Ruby is free</strong><br/>
</p>




<p>
  <strong>Encourage testing</strong><br/>
  - Test::Unit builds in into standard library<br/>
  - Other tools: Rspec, MiniTest, &#8230;
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Sass?]]></title>
    <link href="http://geekhmer.github.io/blog/2014/06/27/why-sass/"/>
    <updated>2014-06-27T00:00:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/06/27/why-sass</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/sass.png" />
</p>




<p>
  Sass is a Cascading Style Sheets (CSS) meta language. It is a scripting language that is interpreted into CSS. SassScript provides the following mechanisms: variables, nesting, mixins, and selector inheritance.
</p>




<p>
  <strong>Variables</strong><br/>
  - Sass allows variables to be defined.<br/>
  - Variables begin with a dollar sign ($).<br/>
  - Variable assignment is done with a colon (:).<br/>
  - SassScript supports four data types: Numbers, Strings, Colors, Booleans.
</p>




<figure class='code'><figcaption><span>In CSS </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">.</span><span class="nx">content</span><span class="o">-</span><span class="nx">navigation</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">border</span><span class="o">-</span><span class="nx">color</span><span class="o">:</span> <span class="err">#</span><span class="mi">3</span><span class="nx">bbfce</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">color</span><span class="o">:</span> <span class="err">#</span><span class="mi">2</span><span class="nx">b9eab</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="nx">border</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">padding</span><span class="o">:</span> <span class="mi">8</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">margin</span><span class="o">:</span> <span class="mi">8</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">border</span><span class="o">-</span><span class="nx">color</span><span class="o">:</span> <span class="err">#</span><span class="mi">3</span><span class="nx">bbfce</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>In Sass </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$blue</span><span class="o">:</span> <span class="err">#</span><span class="mi">3</span><span class="nx">bbfce</span><span class="p">;</span>
</span><span class='line'><span class="nx">$margin</span><span class="o">:</span> <span class="mi">16</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="nx">content</span><span class="o">-</span><span class="nx">navigation</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">border</span><span class="o">-</span><span class="nx">color</span><span class="o">:</span> <span class="nx">$blue</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">color</span><span class="o">:</span>
</span><span class='line'>    <span class="nx">darken</span><span class="p">(</span><span class="nx">$blue</span><span class="p">,</span> <span class="mi">9</span><span class="o">%</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="nx">border</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">padding</span><span class="o">:</span> <span class="nx">$margin</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">margin</span><span class="o">:</span> <span class="nx">$margin</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">border</span><span class="o">-</span><span class="nx">color</span><span class="o">:</span> <span class="nx">$blue</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Nesting</strong><br/>
  CSS does support logical nesting, but the code blocks themselves are not nested. Sass allows the nested code to be inserted within each other.
</p>




<figure class='code'><figcaption><span>In CSS </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">table</span><span class="p">.</span><span class="nx">hl</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">margin</span><span class="o">:</span> <span class="mi">2</span><span class="nx">em</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">table</span><span class="p">.</span><span class="nx">hl</span> <span class="nx">td</span><span class="p">.</span><span class="nx">ln</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">text</span><span class="o">-</span><span class="nx">align</span><span class="o">:</span> <span class="nx">right</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">li</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">font</span><span class="o">-</span><span class="nx">family</span><span class="o">:</span> <span class="nx">serif</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">font</span><span class="o">-</span><span class="nx">weight</span><span class="o">:</span> <span class="nx">bold</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">font</span><span class="o">-</span><span class="nx">size</span><span class="o">:</span> <span class="mf">1.2</span><span class="nx">em</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>In Sass </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">table</span><span class="p">.</span><span class="nx">hl</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">margin</span><span class="o">:</span> <span class="mi">2</span><span class="nx">em</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">td</span><span class="p">.</span><span class="nx">ln</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">text</span><span class="o">-</span><span class="nx">align</span><span class="o">:</span> <span class="nx">right</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">li</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">font</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">family</span><span class="o">:</span> <span class="nx">serif</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">weight</span><span class="o">:</span> <span class="nx">bold</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">size</span><span class="o">:</span> <span class="mf">1.2</span><span class="nx">em</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Mixins</strong><br/>
  - CSS does not support mixins.<br/>
  - Any repeated code must be repeated in each location.<br/>
  - A mixin is a section of code that contains any valid Sass code.<br/>
  - Whenever a mixin is called, the result of translating the mixin is inserted at the calling location.<br/>
  - Mixins allow for efficient and clean code repetitions, as well as easy alteration of code.
</p>




<figure class='code'><figcaption><span>In CSS </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span><span class="nx">data</span> <span class="nx">th</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">text</span><span class="o">-</span><span class="nx">align</span><span class="o">:</span> <span class="nx">center</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">font</span><span class="o">-</span><span class="nx">weight</span><span class="o">:</span> <span class="nx">bold</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span><span class="nx">data</span> <span class="nx">td</span><span class="p">,</span> <span class="err">#</span><span class="nx">data</span> <span class="nx">th</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">padding</span><span class="o">:</span> <span class="mi">2</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>In Sass </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">@</span><span class="nx">mixin</span> <span class="nx">table</span><span class="o">-</span><span class="nx">base</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">th</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">text</span><span class="o">-</span><span class="nx">align</span><span class="o">:</span> <span class="nx">center</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">font</span><span class="o">-</span><span class="nx">weight</span><span class="o">:</span> <span class="nx">bold</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">td</span><span class="p">,</span> <span class="nx">th</span> <span class="p">{</span><span class="nx">padding</span><span class="o">:</span> <span class="mi">2</span><span class="nx">px</span><span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span><span class="nx">data</span> <span class="p">{</span>
</span><span class='line'>  <span class="err">@</span><span class="nx">include</span> <span class="nx">table</span><span class="o">-</span><span class="nx">base</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Mixins also support arguments:<br/>
</p>




<figure class='code'><figcaption><span>In CSS </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span><span class="nx">data</span> <span class="p">{</span>
</span><span class='line'>  <span class="kr">float</span><span class="o">:</span> <span class="nx">left</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">margin</span><span class="o">-</span><span class="nx">left</span><span class="o">:</span> <span class="mi">10</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>In Sass </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">@</span><span class="nx">mixin</span> <span class="nx">left</span><span class="p">(</span><span class="nx">$dist</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kr">float</span><span class="o">:</span> <span class="nx">left</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">margin</span><span class="o">-</span><span class="nx">left</span><span class="o">:</span> <span class="nx">$dist</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span><span class="nx">data</span> <span class="p">{</span>
</span><span class='line'>  <span class="err">@</span><span class="nx">include</span> <span class="nx">left</span><span class="p">(</span><span class="mi">10</span><span class="nx">px</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  In combination:<br/>
</p>




<figure class='code'><figcaption><span>In CSS </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">#</span><span class="nx">data</span> <span class="p">{</span>
</span><span class='line'>  <span class="kr">float</span><span class="o">:</span> <span class="nx">left</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">margin</span><span class="o">-</span><span class="nx">left</span><span class="o">:</span> <span class="mi">10</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span><span class="nx">data</span> <span class="nx">th</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">text</span><span class="o">-</span><span class="nx">align</span><span class="o">:</span> <span class="nx">center</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">font</span><span class="o">-</span><span class="nx">weight</span><span class="o">:</span> <span class="nx">bold</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span><span class="nx">data</span> <span class="nx">td</span><span class="p">,</span> <span class="err">#</span><span class="nx">data</span> <span class="nx">th</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">padding</span><span class="o">:</span> <span class="mi">2</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>In Sass </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="err">@</span><span class="nx">mixin</span> <span class="nx">table</span><span class="o">-</span><span class="nx">base</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">th</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">text</span><span class="o">-</span><span class="nx">align</span><span class="o">:</span> <span class="nx">center</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">font</span><span class="o">-</span><span class="nx">weight</span><span class="o">:</span> <span class="nx">bold</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">td</span><span class="p">,</span> <span class="nx">th</span> <span class="p">{</span><span class="nx">padding</span><span class="o">:</span> <span class="mi">2</span><span class="nx">px</span><span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="err">@</span><span class="nx">mixin</span> <span class="nx">left</span><span class="p">(</span><span class="nx">$dist</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kr">float</span><span class="o">:</span> <span class="nx">left</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">margin</span><span class="o">-</span><span class="nx">left</span><span class="o">:</span> <span class="nx">$dist</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="err">#</span><span class="nx">data</span> <span class="p">{</span>
</span><span class='line'>  <span class="err">@</span><span class="nx">include</span> <span class="nx">left</span><span class="p">(</span><span class="mi">10</span><span class="nx">px</span><span class="p">);</span>
</span><span class='line'>  <span class="err">@</span><span class="nx">include</span> <span class="nx">table</span><span class="o">-</span><span class="nx">base</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  For more information <a href="http://sass-lang.com/" target="_blank">sass-lang.com</a>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why HAML?]]></title>
    <link href="http://geekhmer.github.io/blog/2014/06/26/why-haml/"/>
    <updated>2014-06-26T22:30:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/06/26/why-haml</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/haml.png" />
</p>




<p>
  Haml (HTML abstraction markup language) is based on one primary principle: markup should be beautiful. It’s not just beauty for beauty’s sake either; Haml accelerates and simplifies template creation down to veritable haiku.
</p>




<p>
  <strong>Why do we use HAML?</strong><br/>
  - Mark up should be beautiful.<br/>
  - Mark up should be Dry (Because Too much repetition in HTML and template engines like ERB).<br/>
  - Mark up should be well-indented.<br/>
  - Mark up structure should be clear.<br/>
  - Haml to the rescue:<br/>
</p>




<figure class='code'><figcaption><span>In HTML </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">ul</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;navigation&quot;</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">&lt;</span><span class="nx">li</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;menu_item&quot;</span><span class="o">&gt;</span>
</span><span class='line'>   <span class="o">&lt;</span><span class="nx">a</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;/home&quot;</span> <span class="nx">title</span><span class="o">=</span><span class="s2">&quot;Home&quot;</span><span class="o">&gt;</span>
</span><span class='line'>     <span class="nx">Home</span>
</span><span class='line'>   <span class="o">&lt;</span><span class="err">/a&gt;</span>
</span><span class='line'> <span class="o">&lt;</span><span class="err">/li&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/ul&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>In HAML </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">%</span><span class="nx">ul</span><span class="err">#</span><span class="nx">naviatioin</span>
</span><span class='line'>  <span class="o">%</span><span class="nx">li</span><span class="p">.</span><span class="nx">menu_item</span>
</span><span class='line'>    <span class="o">%</span><span class="nx">a</span><span class="p">{</span><span class="o">:</span><span class="nx">href</span> <span class="o">=&gt;</span> <span class="s2">&quot;/home&quot;</span><span class="p">,</span> <span class="o">:</span><span class="nx">title</span> <span class="o">=&gt;</span> <span class="s2">&quot;Home&quot;</span><span class="p">}</span>
</span><span class='line'>      <span class="nx">Home</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>HAML Basic</strong><br/>
  Syntax:
</p>




<figure class='code'><figcaption><span>In HAML </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">!!!</span>
</span><span class='line'><span class="o">%</span><span class="nx">html</span>
</span><span class='line'>  <span class="o">%</span><span class="nx">head</span>
</span><span class='line'>    <span class="o">%</span><span class="nx">title</span> <span class="nx">Haml</span> <span class="nx">Test</span>
</span><span class='line'>  <span class="o">%</span><span class="nx">body</span>
</span><span class='line'>    <span class="err">#</span><span class="nx">header</span>
</span><span class='line'>      <span class="o">%</span><span class="nx">h1</span> <span class="nx">Welcome</span> <span class="nx">to</span> <span class="nx">my</span> <span class="nx">blog</span>
</span><span class='line'>      <span class="o">%</span><span class="nx">nav</span><span class="err">#</span><span class="nx">navigation</span>
</span><span class='line'>    <span class="err">#</span><span class="nx">content</span>
</span><span class='line'>      <span class="err">#</span><span class="nx">yield</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Format:<br/>
  - HTML Tags are prefixed with &#8221; % &#8221;<br/>
  - ID attributes are prefixed with &#8221; # &#8221;<br/>
  - Class attributes are prefixed with &#8221; . &#8221;<br/>
  - Additional attributes are passed as: %a{:title => “Home”, :href => “/home”} Home
</p>




<p><p>
  <strong>HAML Formatting</strong><br/>
  Remove &ldquo; &lt; &rdquo; and &ldquo; > &rdquo;
</p></p>

<p><figure class='code'><figcaption><span>In HTML </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">img</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="nx">Hello</span> <span class="nx">Haml</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><figure class='code'><figcaption><span>In HAML </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">%</span><span class="nx">img</span>
</span><span class='line'><span class="o">%</span><span class="nx">p</span>
</span><span class='line'>  <span class="nx">Hello</span> <span class="nx">Haml</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><p>
  <strong>Dynamic HAML</strong><br/>
  &ndash; We use the &ldquo; = &rdquo; sign to evaluate dynamic code and assign the value to the desired tag.<br/>
  &ndash; We use the &ldquo; &ndash; &rdquo; sign to run code without appending a value to any tag.<br/>
  &ndash; We use Ruby interpolation to mix static and dynamic strings.<br/>
</p></p>

<p><figure class='code'><figcaption><span>In HAML </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">%</span><span class="nx">h2</span><span class="o">=</span> <span class="s2">&quot;posts for #{Time.now}&quot;</span>
</span><span class='line'><span class="o">%</span><span class="nx">ul</span><span class="err">#</span><span class="nx">posts</span>
</span><span class='line'><span class="o">&ndash;</span> <span class="err">@</span><span class="nx">posts</span><span class="p">.</span><span class="nx">each</span> <span class="k">do</span> <span class="o">|</span><span class="nx">post</span><span class="o">|</span>
</span><span class='line'>  <span class="o">%</span><span class="nx">li</span><span class="p">.</span><span class="nx">post_item</span>
</span><span class='line'>    <span class="o">%</span><span class="nx">h3</span><span class="o">=</span> <span class="nx">post</span><span class="p">.</span><span class="nx">title</span>
</span><span class='line'>    <span class="o">%</span><span class="nx">p</span><span class="o">=</span> <span class="nx">post</span><span class="p">.</span><span class="nx">post</span>
</span></code></pre></td></tr></table></div></figure></p>

<p><p>
  For more information <a href="http://haml.info/" target="_blank">haml.info</a>
</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Erlang?]]></title>
    <link href="http://geekhmer.github.io/blog/2014/06/26/why-erlang/"/>
    <updated>2014-06-26T20:51:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/06/26/why-erlang</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/logo_erlang.png" />
</p>




<p>
  Erlang is a programming language traditionally used to build massively scalable soft real-time systems with requirements on high availability. Some of its uses are in telecoms, banking, e-commerce, computer telephony, realtime application and instant messaging. Erlang’s runtime system has built-in support for concurrency, distribution and fault tolerance.
</p>




<p>
  <strong>High Availability/Reliability</strong><br/>
  - Simple and consistent error recovery and supervision hierarchiess.<br/>
  - Built-in fault tolerance.<br/>
  - Software upgrade (hot code loading) during runtime.<br/>
</p>




<p>
  <strong>Scalability/Heterogeneity</strong><br/>
  - Run on a variety of platforms, supports heterogeneous networks.<br/>
  - Network aware runtime, out-of-the-box distributed architectures.<br/>
  - Lightweight processes, highly scalable transparent or explicit concurrency.<br/>
</p>




<p>
  <strong>Less Effort</strong><br/>
  - Functional programming language, high abstraction level, concise readable programs.<br/>
  - 4–20 times less code compared to C/C++/Java.<br/>
  - Suitable for rapid prototyping.<br/>
  - Powerful middleware and libraries (OTP).<br/>
</p>




<p>
  For more information <a href="http://www.erlang.org/" target="_blank">erlang.org</a>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Map Draggable Maker]]></title>
    <link href="http://geekhmer.github.io/blog/2014/06/06/google-map-draggable-maker/"/>
    <updated>2014-06-06T12:05:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/06/06/google-map-draggable-maker</id>
    <content type="html"><![CDATA[<p>
  Google’s Maps API offer a vast range of functionality to interact with underlying maps. As opposed to statically setting markers (pins) programmatically sometimes you might want your users to be able to interact with the map by dragging existing markers around the map. Fortunately, Google’s JavaScript API offers this functionality out of the box. Below you’ll find an example based on Google Maps API V3.
</p>




<p> 
  <a class="fancybox" href="http://geekhmer.github.io/images/google_map_draggable_maker.png"><img src="http://geekhmer.github.io/images/google_map_draggable_maker.png" /></a>
</p>




<p>
  <strong>Practice</strong><br/>
</p>




<p>
  google_map_draggable_maker.js is a small library use to make google map draggable easily:
</p>




<figure class='code'><figcaption><span>google_map_draggable_maker.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// -------------------------------------------------------------------</span>
</span><span class='line'><span class="c1">// @author Bunlong &lt;bunlong.van@gmail&gt;</span>
</span><span class='line'><span class="c1">// Created :  6 Jun 2014 by Bunlong</span>
</span><span class='line'><span class="c1">// -------------------------------------------------------------------</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// options = {elementh, lat, lng, zoom, coordsLenght, elementLat, elementLng}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">MapDraggableMarker</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">element</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">lat</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">lat</span><span class="p">;</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">lng</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">lng</span><span class="p">;</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">zoom</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">zoom</span><span class="p">;</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">coordsLenght</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">coordsLenght</span><span class="p">;</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">elementLat</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">elementLat</span><span class="p">;</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">elementLng</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">elementLng</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">Map</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">zoom</span><span class="o">:</span> <span class="k">this</span><span class="p">.</span><span class="nx">zoom</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">center</span><span class="o">:</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lat</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">lng</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">mapTypeId</span><span class="o">:</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">MapTypeId</span><span class="p">.</span><span class="nx">ROADMAP</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">marker</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">Marker</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">position</span><span class="o">:</span> <span class="k">new</span> <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">lat</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="nx">lng</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">draggable</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">MapDraggableMarker</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">addListenerToMarker</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">self</span> <span class="o">=</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">google</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">addListener</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">marker</span><span class="p">,</span> <span class="s1">&#39;dragend&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">evt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">self</span><span class="p">.</span><span class="nx">elementLat</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="nx">evt</span><span class="p">.</span><span class="nx">latLng</span><span class="p">.</span><span class="nx">lat</span><span class="p">().</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">coordsLenght</span><span class="p">));</span>
</span><span class='line'>    <span class="nx">self</span><span class="p">.</span><span class="nx">elementLng</span><span class="p">.</span><span class="nx">val</span><span class="p">(</span><span class="nx">evt</span><span class="p">.</span><span class="nx">latLng</span><span class="p">.</span><span class="nx">lng</span><span class="p">().</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">self</span><span class="p">.</span><span class="nx">coordsLenght</span><span class="p">));</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">MapDraggableMarker</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">init</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">addListenerToMarker</span><span class="p">();</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">map</span><span class="p">.</span><span class="nx">setCenter</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">marker</span><span class="p">.</span><span class="nx">position</span><span class="p">);</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">marker</span><span class="p">.</span><span class="nx">setMap</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">map</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  index.html is the sample google map draggable:
</p>




<figure class='code'><figcaption><span>index.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;!</span><span class="nx">doctype</span> <span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">html</span> <span class="nx">lang</span><span class="o">=</span><span class="s2">&quot;en&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">meta</span> <span class="nx">charset</span><span class="o">=</span><span class="s2">&quot;utf-8&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">title</span><span class="o">&gt;&lt;</span><span class="err">/title&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;styles.css&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;http://maps.google.com/maps/api/js?sensor=false&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;jquery-1.11.1.min.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;google_map_draggable_maker.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">lat</span> <span class="o">=</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#latitude&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span> <span class="o">==</span> <span class="s2">&quot;&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="mf">11.558831</span> <span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#latitude&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">(),</span>
</span><span class='line'>          <span class="nx">lng</span> <span class="o">=</span> <span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#longitude&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span> <span class="o">==</span> <span class="s2">&quot;&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="mf">104.917445</span> <span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#longitude&quot;</span><span class="p">).</span><span class="nx">val</span><span class="p">(),</span>
</span><span class='line'>          <span class="nx">zoom</span> <span class="o">=</span> <span class="mi">15</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">coordslenght</span> <span class="o">=</span> <span class="mi">6</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="nx">mapDraggableMarker</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">MapDraggableMarker</span><span class="p">({</span> <span class="nx">element</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#canvas&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span>
</span><span class='line'>                                                        <span class="nx">lat</span><span class="o">:</span> <span class="nx">lat</span><span class="p">,</span>
</span><span class='line'>                                                        <span class="nx">lng</span><span class="o">:</span> <span class="nx">lng</span><span class="p">,</span>
</span><span class='line'>                                                        <span class="nx">zoom</span><span class="o">:</span> <span class="nx">zoom</span><span class="p">,</span>
</span><span class='line'>                                                        <span class="nx">coordsLenght</span><span class="o">:</span> <span class="nx">coordslenght</span><span class="p">,</span>
</span><span class='line'>                                                        <span class="nx">elementLat</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#latitude&quot;</span><span class="p">),</span>
</span><span class='line'>                                                        <span class="nx">elementLng</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#longitude&quot;</span><span class="p">)</span>
</span><span class='line'>                                                      <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">mapDraggableMarker</span><span class="p">.</span><span class="nx">init</span><span class="p">();</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/head&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">div</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;canvas&quot;</span> <span class="nx">style</span><span class="o">=</span><span class="s2">&quot;width: 635px; height: 300px;&quot;</span><span class="o">&gt;&lt;</span><span class="sr">/div&gt;&lt;br /</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">label</span> <span class="k">for</span><span class="o">=</span><span class="s2">&quot;latitude&quot;</span><span class="o">&gt;</span><span class="nx">Latitude</span><span class="o">:&lt;</span><span class="err">/label&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;latitude&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nx">value</span><span class="o">=</span><span class="s2">&quot;&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">label</span> <span class="k">for</span><span class="o">=</span><span class="s2">&quot;longitude&quot;</span><span class="o">&gt;</span><span class="nx">Longitude</span><span class="o">:&lt;</span><span class="err">/label&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;longitude&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nx">value</span><span class="o">=</span><span class="s2">&quot;&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/body&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can download the <a href="https://github.com/Bunlong/google_map_draggable_maker" target="_blank">source code</a> and try it out.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSRender]]></title>
    <link href="http://geekhmer.github.io/blog/2014/06/02/jsrender/"/>
    <updated>2014-06-02T17:08:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/06/02/jsrender</id>
    <content type="html"><![CDATA[<p>
  <strong>What is JsRender?</strong><br/>
  Many development platforms use templates to reduce code and simplify maintenance, and HTML5 and JavaScript are no exception. JsRender is a JavaScript library that allows you to define a boilerplate structure once and reuse it to generate HTML dynamically. JsRender brings a new templating library to HTML5 development that has a codeless tag syntax and high performance, has no dependency on jQuery nor on the Document Object Model (DOM), supports creating custom functions and uses pure string-based rendering.
</p>




<p>
  <strong>Why Templates?</strong><br/>
  Using templates with JavaScript reduces and simplifies code. Without templates, adding a series of list items and other HTML elements for a set of data might require manipulating a browser’s DOM. This is where templating using a plug-in such as JsRender can be quite useful to do the heavy lifting.
</p>




<p>
  <strong>Practice</strong><br/>
</p>




<figure class='code'><figcaption><span>demo.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;!</span><span class="nx">DOCTYPE</span> <span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;js/jquery.min.js&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;js/jsrender.js&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;css/bootstrap.min.css&quot;</span> <span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;book_template&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/x-jsrender&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">tr</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">td</span><span class="o">&gt;</span><span class="p">{</span> <span class="p">{</span><span class="o">:</span><span class="err">#</span><span class="nx">index</span><span class="o">+</span><span class="mi">1</span><span class="p">}</span> <span class="p">}</span> <span class="o">&lt;</span><span class="err">/td&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">td</span><span class="o">&gt;</span><span class="p">{</span> <span class="p">{</span><span class="o">&gt;</span><span class="nx">name</span><span class="p">}</span> <span class="p">}</span><span class="o">&lt;</span><span class="err">/td&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">td</span><span class="o">&gt;</span><span class="p">{</span> <span class="p">{</span><span class="o">&gt;</span><span class="nx">releaseYear</span><span class="p">}</span> <span class="p">}</span><span class="o">&lt;</span><span class="err">/td&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/tr&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">books</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;Erlang&quot;</span><span class="p">,</span> <span class="nx">releaseYear</span><span class="o">:</span> <span class="s2">&quot;1986&quot;</span> <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;Ruby&quot;</span><span class="p">,</span> <span class="nx">releaseYear</span><span class="o">:</span> <span class="s2">&quot;1998&quot;</span> <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;Ruby on Rails&quot;</span><span class="p">,</span> <span class="nx">releaseYear</span><span class="o">:</span> <span class="s2">&quot;1999&quot;</span> <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;Javascript&quot;</span><span class="p">,</span> <span class="nx">releaseYear</span><span class="o">:</span> <span class="s2">&quot;1976&quot;</span> <span class="p">}</span>
</span><span class='line'>      <span class="p">];</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#book_list&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#book_template&quot;</span><span class="p">).</span><span class="nx">render</span><span class="p">(</span><span class="nx">books</span><span class="p">)</span>
</span><span class='line'>      <span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="err">/head&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">div</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">section</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;fluidGridSystem&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">div</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;page-header&quot;</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">h3</span><span class="o">&gt;</span><span class="nx">Render</span> <span class="nx">template</span> <span class="nx">against</span> <span class="nx">local</span> <span class="nx">data</span><span class="o">&lt;</span><span class="err">/h3&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">div</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;row-fluid show-grid&quot;</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">table</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;table table-bordered&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">thead</span><span class="o">&gt;</span>
</span><span class='line'>            <span class="o">&lt;</span><span class="nx">tr</span><span class="o">&gt;</span>
</span><span class='line'>              <span class="o">&lt;</span><span class="nx">th</span><span class="o">&gt;</span><span class="nx">No</span><span class="o">&lt;</span><span class="err">/th&gt;</span>
</span><span class='line'>              <span class="o">&lt;</span><span class="nx">th</span><span class="o">&gt;</span><span class="nx">Name</span><span class="o">&lt;</span><span class="err">/th&gt;</span>
</span><span class='line'>              <span class="o">&lt;</span><span class="nx">th</span><span class="o">&gt;</span><span class="nx">Release</span> <span class="nx">Year</span><span class="o">&lt;</span><span class="err">/th&gt;</span>
</span><span class='line'>            <span class="o">&lt;</span><span class="err">/tr&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="err">/thead&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">tbody</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;book_list&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="err">/tbody&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/table&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/section&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/body&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can download the <a href="https://github.com/Bunlong/jsrender" target="_blank">source code</a> and try it out.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tokeninput Jquery Multiple Select Item]]></title>
    <link href="http://geekhmer.github.io/blog/2014/05/22/tokeninput-jquery-multiple-select-item/"/>
    <updated>2014-05-22T16:46:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/05/22/tokeninput-jquery-multiple-select-item</id>
    <content type="html"><![CDATA[<p>
  <strong>What is Tokeninput?</strong><br/>
  Tokeninput is a jQuery plugin which allows your users to select multiple items from a predefined list, using autocompletion as they type to find each item. You may have seen a similar type of text entry when filling in the recipients field sending messages on facebook.
</p>




<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/tokeninput_jquery.png"><img src="http://geekhmer.github.io/images/tokeninput_jquery.png" alt="" width="680" /></a>
</p>




<p>
  <strong>Practice</strong><br/>
</p>




<figure class='code'><figcaption><span>demo.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.min.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;src/jquery.tokeninput.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;styles/token-input.css&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;styles/token-input-facebook.css&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/head&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">h2</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;theme&quot;</span><span class="o">&gt;</span><span class="nx">Json</span> <span class="nx">local</span><span class="o">&lt;</span><span class="err">/h2&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;input-local&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#input-local&quot;</span><span class="p">).</span><span class="nx">tokenInput</span><span class="p">([</span>
</span><span class='line'>            <span class="p">{</span><span class="s2">&quot;id&quot;</span><span class="o">:</span><span class="s2">&quot;856&quot;</span><span class="p">,</span><span class="s2">&quot;name&quot;</span><span class="o">:</span><span class="s2">&quot;House&quot;</span><span class="p">},</span>
</span><span class='line'>            <span class="p">{</span><span class="s2">&quot;id&quot;</span><span class="o">:</span><span class="s2">&quot;1035&quot;</span><span class="p">,</span><span class="s2">&quot;name&quot;</span><span class="o">:</span><span class="s2">&quot;Desperate Housewives&quot;</span><span class="p">}</span>
</span><span class='line'>          <span class="p">],</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">theme</span><span class="o">:</span> <span class="s2">&quot;facebook&quot;</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">h2</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;theme&quot;</span><span class="o">&gt;</span><span class="nx">Json</span> <span class="nx">local</span> <span class="o">-</span> <span class="nx">no</span> <span class="nx">duplicates</span><span class="o">&lt;</span><span class="err">/h2&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;input-local-prevent-duplicates&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#input-local-prevent-duplicates&quot;</span><span class="p">).</span><span class="nx">tokenInput</span><span class="p">([</span>
</span><span class='line'>            <span class="p">{</span><span class="s2">&quot;id&quot;</span><span class="o">:</span><span class="s2">&quot;856&quot;</span><span class="p">,</span><span class="s2">&quot;name&quot;</span><span class="o">:</span><span class="s2">&quot;House&quot;</span><span class="p">},</span>
</span><span class='line'>            <span class="p">{</span><span class="s2">&quot;id&quot;</span><span class="o">:</span><span class="s2">&quot;1035&quot;</span><span class="p">,</span><span class="s2">&quot;name&quot;</span><span class="o">:</span><span class="s2">&quot;Desperate Housewives&quot;</span><span class="p">}</span>
</span><span class='line'>          <span class="p">],</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">theme</span><span class="o">:</span> <span class="s2">&quot;facebook&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">preventDuplicates</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">h2</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;theme&quot;</span><span class="o">&gt;</span><span class="nx">Json</span> <span class="nx">server</span><span class="o">&lt;</span><span class="err">/h2&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;input-server&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#input-server&quot;</span><span class="p">).</span><span class="nx">tokenInput</span><span class="p">(</span><span class="s2">&quot;http://shell.loopj.com/tokeninput/tvshows.php&quot;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">theme</span><span class="o">:</span> <span class="s2">&quot;facebook&quot;</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">h2</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;prevent-duplicates&quot;</span><span class="o">&gt;</span><span class="nx">Json</span> <span class="nx">server</span> <span class="o">-</span> <span class="nx">no</span> <span class="nx">duplicates</span><span class="o">&lt;</span><span class="err">/h2&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;input-server-prevent-duplicates&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#input-server-prevent-duplicates&quot;</span><span class="p">).</span><span class="nx">tokenInput</span><span class="p">(</span><span class="s2">&quot;http://shell.loopj.com/tokeninput/tvshows.php&quot;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">theme</span><span class="o">:</span> <span class="s2">&quot;facebook&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">preventDuplicates</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/body&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can download the <a href="https://github.com/Bunlong/tokeninput_jquery" target="_blank">source code</a> and try it out.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Autoload All Files in Lib Directory Ruby on Rails]]></title>
    <link href="http://geekhmer.github.io/blog/2014/04/24/autoload-all-files-in-lib-directory-ruby-on-rails/"/>
    <updated>2014-04-24T21:59:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/04/24/autoload-all-files-in-lib-directory-ruby-on-rails</id>
    <content type="html"><![CDATA[<p>
  In Ruby on Rails to create your own ruby library you have to create ruby library in /lib directory, so far so good to autoload all ruby library in /lib directory you have to add some code below in /config/application.rb.
</p>




<figure class='code'><figcaption><span>application.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">autoload_paths</span> <span class="o">+=</span> <span class="o">%</span><span class="nx">W</span><span class="p">(</span><span class="err">#</span><span class="p">{</span><span class="nx">config</span><span class="p">.</span><span class="nx">root</span><span class="p">}</span><span class="o">/</span><span class="nx">lib</span><span class="p">)</span>
</span><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">autoload_paths</span> <span class="o">+=</span> <span class="nx">Dir</span><span class="p">[</span><span class="s2">&quot;#{config.root}/lib/**/&quot;</span><span class="p">]</span>
</span><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">autoload_paths</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;#{config.root}/lib&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reduce duplication in database.yml configuration in Ruby on Rails Project]]></title>
    <link href="http://geekhmer.github.io/blog/2014/03/22/reduce-duplication-in-database-dot-yml-configuration-in-ruby-on-rails-project/"/>
    <updated>2014-03-22T00:03:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/03/22/reduce-duplication-in-database-dot-yml-configuration-in-ruby-on-rails-project</id>
    <content type="html"><![CDATA[<p>
  By default rails generate database.yml that have the same attributes in each environment. So to reduce duplication we use aliasing to essentially perform a hash merge on the fly in the code.<br/>
  So far so good please take a look the below code.<br/>
</p>




<p>
  <strong>Before refactor</strong><br/>
</p>




<figure class='code'><figcaption><span>database.yml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">development</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_development</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="nx">username</span><span class="o">:</span> <span class="nx">your_database_username</span>
</span><span class='line'>  <span class="nx">password</span><span class="o">:</span> <span class="nx">your_database_password</span>
</span><span class='line'>  <span class="nx">adapter</span><span class="o">:</span> <span class="nx">mysql2</span>
</span><span class='line'>  <span class="nx">encoding</span><span class="o">:</span> <span class="nx">utf8</span>
</span><span class='line'>  <span class="nx">collation</span><span class="o">:</span> <span class="nx">utf8_unicode_ci</span>
</span><span class='line'>
</span><span class='line'><span class="nx">test</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_test</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="nx">username</span><span class="o">:</span> <span class="nx">your_database_username</span>
</span><span class='line'>  <span class="nx">password</span><span class="o">:</span> <span class="nx">your_database_password</span>
</span><span class='line'>  <span class="nx">adapter</span><span class="o">:</span> <span class="nx">mysql2</span>
</span><span class='line'>  <span class="nx">encoding</span><span class="o">:</span> <span class="nx">utf8</span>
</span><span class='line'>  <span class="nx">collation</span><span class="o">:</span> <span class="nx">utf8_unicode_ci</span>
</span><span class='line'>
</span><span class='line'><span class="nx">staging</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_staging</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="nx">username</span><span class="o">:</span> <span class="nx">your_database_username</span>
</span><span class='line'>  <span class="nx">password</span><span class="o">:</span> <span class="nx">your_database_password</span>
</span><span class='line'>  <span class="nx">adapter</span><span class="o">:</span> <span class="nx">mysql2</span>
</span><span class='line'>  <span class="nx">encoding</span><span class="o">:</span> <span class="nx">utf8</span>
</span><span class='line'>  <span class="nx">collation</span><span class="o">:</span> <span class="nx">utf8_unicode_ci</span>
</span><span class='line'>
</span><span class='line'><span class="nx">production</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_production</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="nx">username</span><span class="o">:</span> <span class="nx">your_database_username</span>
</span><span class='line'>  <span class="nx">password</span><span class="o">:</span> <span class="nx">your_database_password</span>
</span><span class='line'>  <span class="nx">adapter</span><span class="o">:</span> <span class="nx">mysql2</span>
</span><span class='line'>  <span class="nx">encoding</span><span class="o">:</span> <span class="nx">utf8</span>
</span><span class='line'>  <span class="nx">collation</span><span class="o">:</span> <span class="nx">utf8_unicode_ci</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>After refactor</strong><br/>
</p>




<figure class='code'><figcaption><span>database.yml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">defaults</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">defaults</span>
</span><span class='line'>  <span class="nx">username</span><span class="o">:</span> <span class="nx">your_database_username</span>
</span><span class='line'>  <span class="nx">password</span><span class="o">:</span> <span class="nx">your_database_password</span>
</span><span class='line'>  <span class="nx">adapter</span><span class="o">:</span> <span class="nx">mysql2</span>
</span><span class='line'>  <span class="nx">encoding</span><span class="o">:</span> <span class="nx">utf8</span>
</span><span class='line'>  <span class="nx">collation</span><span class="o">:</span> <span class="nx">utf8_unicode_ci</span>
</span><span class='line'>
</span><span class='line'><span class="nx">development</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_development</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="o">&lt;&lt;:</span> <span class="o">*</span><span class="nx">defaults</span>
</span><span class='line'>
</span><span class='line'><span class="nx">test</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_test</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="o">&lt;&lt;:</span> <span class="o">*</span><span class="nx">defaults</span>
</span><span class='line'>
</span><span class='line'><span class="nx">staging</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_staging</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="o">&lt;&lt;:</span> <span class="o">*</span><span class="nx">defaults</span>
</span><span class='line'>
</span><span class='line'><span class="nx">production</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_production</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="o">&lt;&lt;:</span> <span class="o">*</span><span class="nx">defaults</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RVM - Ruby Version Manager]]></title>
    <link href="http://geekhmer.github.io/blog/2014/03/17/rvm-ruby-version-manager/"/>
    <updated>2014-03-17T23:48:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/03/17/rvm-ruby-version-manager</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/rvm.png" width="300" />
</p>




<p>
  Ruby is a very popular programming language that has Ruby on Rails or RoR is a popular development framework that allows you to easily get your application up and running with minimal hassle.<br/>
</p>




<p>
  Developing applications often times requires that you emulate different environments. Different versions of Ruby may be necessary for different projects. With conventional installations, this would impede your ability to be flexible.<br/>
</p>




<p>
  Luckily, the Ruby Version Manager, known more widely as RVM, allows you to easily install multiple, contained versions of Ruby and easily switch between them.
</p>




<p><p>
  <strong>Installing RVM</strong><br/>
  Run a quick update to make sure that all of the packages we download to our VPS are up to date:<br/>
  <code>sudo apt-get update</code><br/><br/>
  If you do not have curl on your system, you can start by installing it:<br/>
  <code>sudo apt-get install curl</code><br/><br/>
  To install RVM:<br/>
  <code>bash -s stable &lt; &lt;(curl -s <a href="https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer">https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer</a>)</code><br/><br/>
  To inject RVM into your environment .bashrc add the bit of bash it mentions at the end of the installation:<br/>
  <code>echo &lsquo;[[ -s &ldquo;$HOME/.rvm/scripts/rvm&rdquo; ]] &amp;&amp; source &ldquo;$HOME/.rvm/scripts/rvm&rdquo;&rsquo; >> .bashrc</code>
</p></p>

<p><p>
  <strong>Installing Ruby</strong><br/>
  Let’s go ahead and install Ruby MRI 1.9.3 (this is the default interpreter originally developed by Matz) first, and set that as our default interpreter. Afterwards, we’ll install Ruby 1.8.7, use RVM to easily switch between these two Rubies.<br/>
  Intall ruby version 1.9.3:<br/>
  <code>rvm install 1.9.3</code><br/><br/>
  To verify it works:<br/>
  <code>ruby -v</code><br/><br/>
  To make ruby version 1.9.3 as default version:<br/>
  <code>rvm &mdash;default 1.9.3</code><br/><br/>
  Let’s install ruby version 1.8.7:<br/>
  <code>rvm install 1.8.7</code><br/><br/>
  To switch ruby version:<br/>
  <code>rvm use 1.8.7</code> or <code>rvm 1.8.7</code>
</p></p>

<p><p>
  <strong>Installing Rails</strong><br/>
  To install the latest Rails:<br/>
  <code>gem install rails</code><br/>
</p></p>

<p><p>
  <strong>Gemsets</strong><br/>
  One common way to distribute code in Ruby is to use a format called gems. Gems can be installed to extend the capabilities of the core Ruby distribution, and there are often gems that are required to be installed to get certain programs to function correctly.<br/><br/>
  In keeping with RVM&rsquo;s mission of providing contained Ruby environments, it is also possible to install gems that are only associated with a single Ruby installation. RVM calls this functionality gemsets.<br/><br/>
  This means that you can have two different versions of the same gem, or you can make gems unaware of other gems on the system.<br/><br/>
  To see the available gemsets for the current Ruby:<br/>
  <code>rvm gemset list</code><br/><br/>
  If you have more than one Ruby version installed, you can see all of the gemsets:<br/>
  <code>rvm gemset list_all</code><br/><br/>
  By default, you should have two gemsets configured:<br/>
  &ndash; default: the gemset that is applied if no other gemset is specified.<br/>
  &ndash; global: this gemset is inherited by every other gemset that is used. This set generally does not need to be selected because it will be included automatically. You should install shared gems here.<br/>
</p></p>

<p><p>
  <strong>Creating Gemset for Rails Project</strong><br/>
  1. Create a Rails project:<br/>
  <code>rails new blog</code><br/><br/>
  2. Get in the project:<br/>
  <code>cd blog</code><br/><br/>
  3. Create gemset for the project:<br/>
  <code>rvm &mdash;rvmrc &mdash;create ruby_version@gemset_name</code><br/>
  <code>rvm &mdash;rvmrc &mdash;create 1.9.3@blog</code><br/><br/>
  4. Get out the project:<br/>
  <code>cd ..</code><br/><br/>
  5. Get in the project:<br/>
  <code>cd blog</code><br/><br/>
  6. To see the gemset that we have created and stand on:<br/>
  <code>rvm gemset list</code><br/><br/>
  So far so good whenever we cd into the project it will automatically switch to project&rsquo;s gemset.
</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby websocket and real-time app tutorial]]></title>
    <link href="http://geekhmer.github.io/blog/2014/02/04/ruby-websocket-and-real-time-app-tutorial/"/>
    <updated>2014-02-04T21:12:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/02/04/ruby-websocket-and-real-time-app-tutorial</id>
    <content type="html"><![CDATA[<p>
  In this post I would like to present a small tutorial, I hope it will serve as a good introduction to web-socket api.
</p>




<p>
  <strong>Websocket Server</strong><br/>
  In the part we focus on server part. In ruby we use eventmachine, em-websocket gem to install websocket server.<br/>
  To install eventmachine run <code>gem install eventmachine</code><br/>
  To install em-websocket run <code>gem install em-websocket</code><br/>
  Make a file server.rb and implement codes below:<br/>
</p>




<figure class='code'><figcaption><span>server.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;eventmachine&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;em-websocket&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">EventMachine</span><span class="o">.</span><span class="n">run</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">EventMachine</span><span class="p">:</span><span class="ss">:WebSocket</span><span class="o">.</span><span class="n">start</span><span class="p">(</span><span class="ss">:host</span> <span class="o">=&gt;</span> <span class="s2">&quot;0.0.0.0&quot;</span><span class="p">,</span> <span class="ss">:port</span> <span class="o">=&gt;</span> <span class="mi">8080</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">ws</span><span class="o">|</span>
</span><span class='line'>    <span class="n">ws</span><span class="o">.</span><span class="n">onopen</span> <span class="p">{</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;WebSocket connection open&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ws</span><span class="o">.</span><span class="n">onmessage</span> <span class="p">{</span> <span class="o">|</span><span class="n">msg</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="n">msg</span>
</span><span class='line'>      <span class="n">ws</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ws</span><span class="o">.</span><span class="n">onclose</span> <span class="p">{</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;WebSocket connection closed&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  What the code does is creates a websocket-server which listens at localhost:8080. Callbacks have been provided for open and close events, so when a client creates a connection or a connection gets closed the associated callbacks print an appropriate message to the terminal. And callbacks have been provided for message event when a client send the message.<br/><br/>
  To run websocket server run <code>ruby sever.rb</code>
</p>




<p>
  <strong>Websocket Client</strong><br/>
  So far, so good. But the main purpose of a websocket server is to get the message from client and relay data to the client. How do we do that? Turns out that is pretty simple too.<br/>
  Make a file index.html and implement codes below:<br/>
</p>




<figure class='code'><figcaption><span>index.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>Websocket GeeKhmer<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">ws</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">ws</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">WebSocket</span><span class="p">(</span><span class="s2">&quot;ws://localhost:8080&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">ws</span><span class="p">.</span><span class="nx">onopen</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Connection is opened&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">ws</span><span class="p">.</span><span class="nx">onclose</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Connection is closed&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">ws</span><span class="p">.</span><span class="nx">onmessage</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">msg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">send</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">ws</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;txt&quot;</span><span class="p">).</span><span class="nx">value</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body</span> <span class="na">onload=</span><span class="s">&quot;init();&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h2&gt;</span>WebSocket GeeKhmer<span class="nt">&lt;/h2&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">id=</span><span class="s">&quot;txt&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">onclick=</span><span class="s">&quot;send();&quot;</span> <span class="na">value=</span><span class="s">&quot;Send&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">&quot;display&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Feel free to provide your suggestions and to point out errors.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Top Three Front-End MVC Framework]]></title>
    <link href="http://geekhmer.github.io/blog/2014/02/01/top-three-front-end-mvc-framework/"/>
    <updated>2014-02-01T21:00:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/02/01/top-three-front-end-mvc-framework</id>
    <content type="html"><![CDATA[<p>
  As more and more logic are executed in the browser, JavaScript front-end codebases grow larger and more difficult to maintain. As a way to solve this issue developers have been turning to MVC frameworks which maked productivity and maintainable code. 
</p>




<p>
  JavaScript MVC Frameworks are a big topic nowadays that we use JS to bind data, send it back between server and client and actually implement lots of logic, so we want to structure our code in the MVC or similar patterns. In this article I want to show the most front-end MVC framework:
</p>




<p>
  <strong>AngularJS</strong><br/>
  A toolset based on extending the HTML vocabulary for your application. Let try <a href="http://angularjs.org/" target="_blank">AngularJS</a><br/><br/>
  <img src="http://geekhmer.github.io/images/angularjs.png" />
</p>




<p>
  <strong>Ember</strong><br/>
  Provides template written in the Handlebars templating language, views, controllers, models and a router. Let try <a href="http://emberjs.com/" target="_blank">EmberJS</a><br/><br/>
  <img src="http://geekhmer.github.io/images/ember.png" />
</p>




<p>
  <strong>Backbone</strong><br/>
  Provides models with key-value binding and custom events, collections, and connects it all to your existing API over a RESTful JSON interface. Let try <a href="http://backbonejs.org/" target="_blank">Backbone</a><br/><br/>
  <img src="http://geekhmer.github.io/images/backbone.png" />
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is Websocket?]]></title>
    <link href="http://geekhmer.github.io/blog/2014/01/31/what-is-websocket/"/>
    <updated>2014-01-31T13:05:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/01/31/what-is-websocket</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/websocket_ajax_.gif" /><br/>
  WebSocket is a new standard for realtime communication for the Web & Mobile apps.
</p>




<p>
  <strong>Websocket Benefit</strong><br/>
  - Websocket enables the server to push data to the connected clients.<br/>
  - Reduce unnecessary network traffic and latency using full-duplex through a single connection (instead of two).<br/>
  - Streaming through proxies and firewalls, supporting simultaneously upstream and downstream communication.
  - Backward compatible with the pre-WebSocket world by switching from an HTTP connection to WebSockets.
</p>




<p>
  <strong>Apps that should use Websocket</strong><br/>
  - Multi-User Apps.<br/>
  - Real-Time Apps.<br/>
  - Apps where live data is needed, like a stock market app&#8230;
</p>




<p>
  <strong>Websocket Client</strong><br/>
  On web, websocket support in browsers such as Google Chrome, Firefox, Opera.<br/>
  On mobile, websocket support in iOS & Android.<br/>
  Websocket client on Web use javascript for requesting to Websocket Server. Let try <a href="http://www.w3schools.com/html/html5_webworkers.asp" target="_blank">w3schools</a>, <a href="http://www.tutorialspoint.com/html5/html5_websocket.htm" target="_blank">tutorialspoint</a>
</p>




<p>
  <strong>Websocket Server</strong><br/>
  On Server, websocket support in Ruby, Java, Objective-C, PHP, .NET, node.js, ActionScript and many other languages. Let try <a href="https://github.com/igrigorik/em-websocket" target="_blank">Ruby</a>, <a href="https://github.com/Atmosphere/atmosphere" target="_blank">Java</a>, <a href="https://github.com/square/SocketRocket" target="_blank">Objective-C(iOS)</a>, <a href="https://github.com/hoaproject/Websocket" target="_blank">PHP</a>, <a href="http://xsockets.net/" target="_blank">.NET</a>, <a href="https://github.com/Worlize/WebSocket-Node" target="_blank">node.js</a>
</p>




<p>
  <strong>Processing</strong><br/><br/>
  <a class="fancybox" href="http://geekhmer.github.io/images/websocket_processing.png"><img src="http://geekhmer.github.io/images/websocket_processing.png" width="680" /></a><br/>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[assets_helper gem]]></title>
    <link href="http://geekhmer.github.io/blog/2013/12/19/assets-helper-gem/"/>
    <updated>2013-12-19T21:27:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/12/19/assets-helper-gem</id>
    <content type="html"><![CDATA[<p>
  <a href="http://rubygems.org/gems/assets_helper" target="_blank">assets_helper</a> is the gem that use to include css and javascript by controller name automatically, it mean that include only css and javascript file in the controller that you are running.
</p>




<p>
  <strong>Installation</strong><br/>
  Add this line to your application&#8217;s Gemfile:<br/>
  <code>gem 'assets_helper'</code>
</p>




<p>
  And then execute:<br/>
  <code>$ bundle</code>
</p>




<p>
  Or install it yourself as:<br/>
  <code>$ gem install assets_helper</code>
</p>




<p>
  <strong>Usage</strong><br/>
  1. Add <code>before_filter :include_css, :include_javascript</code> in application_controller.rb:<br/>
</p>




<figure class='code'><figcaption><span>application_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="ss">ActionController</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">protect_from_forgery</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before_filter</span> <span class="ss">:include_css</span><span class="p">,</span> <span class="ss">:include_javascript</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  2. Add <code>= yield :asset</code> n your layout file (exp: application.html.haml):<br/>
</p>




<figure class='code'><figcaption><span>application.html.haml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">!!!</span>
</span><span class='line'><span class="o">%</span><span class="n">html</span>
</span><span class='line'>  <span class="o">%</span><span class="n">head</span>
</span><span class='line'>    <span class="o">%</span><span class="n">title</span> <span class="no">JongEat</span>
</span><span class='line'>    <span class="o">=</span> <span class="n">stylesheet_link_tag</span>    <span class="s2">&quot;application&quot;</span><span class="p">,</span> <span class="ss">:media</span> <span class="o">=&gt;</span> <span class="s2">&quot;all&quot;</span>
</span><span class='line'>    <span class="o">=</span> <span class="n">javascript_include_tag</span> <span class="s2">&quot;application&quot;</span>
</span><span class='line'>    <span class="o">=</span> <span class="k">yield</span> <span class="ss">:asset</span>
</span><span class='line'>    <span class="o">=</span> <span class="n">csrf_meta_tags</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  3. Example if you create a controller name homes:<br/>
  <code>$ rails generate controller homes</code>
</p>




<p>
  4. Go to app/assets/javascripts and create a folder name homes like your controller (homes) you create below. And input javascript file that you use for controller homes in this folder ( app/assets/javascripts/homes ), and no need to include in application.js file.<br/>
</p>




<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/javascript_homes.png"><img src="http://geekhmer.github.io/images/javascript_homes.png" alt="" width="680" /></a>
</p>




<p>
  5. Go to app/assets/stylesheets and create a folder name homes like your controller(homes) you create below. And input css file that you use for controller homes in this folder(app/assets/stylesheets), and no need to include or import in application.css file.<br/>
</p>




<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/css_homes.png"><img src="http://geekhmer.github.io/images/css_homes.png" width="680" /></a><br/>
</p>




<p>
  So whenever you run homes controller, it include only css and javascript file that you use for homes controller, and can make your project run fast.<br/>
</p>




<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/browser_homes_controller.png"><img src="http://geekhmer.github.io/images/browser_homes_controller.png" width="680" /></a><br/>
</p>

]]></content>
  </entry>
  
</feed>
