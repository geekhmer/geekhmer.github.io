<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2014-01-07T22:49:03+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[assets_helper gem]]></title>
    <link href="http://geekhmer.github.io/blog/2013/12/19/assets-helper-gem/"/>
    <updated>2013-12-19T21:27:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/12/19/assets-helper-gem</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  <a href="http://rubygems.org/gems/assets_helper" target="_blank">assets_helper</a> is the gem that use to include css and javascript by controller name automatically, it mean that include only css and javascript file in the controller that you are running.
</p>




<p>
  <strong>Installation</strong><br/>
  Add this line to your application&#8217;s Gemfile:<br/>
  <code>gem 'assets_helper'</code>
</p>


<p>
  And then execute:<br/>
  <code>$ bundle</code>
</p>


<p>
  Or install it yourself as:<br/>
  <code>$ gem install assets_helper</code>
</p>




<p>
  <strong>Usage</strong><br/>
  1. Add <code>before_filter :include_css, :include_javascript</code> in application_controller.rb:<br/>
</p>




<figure class='code'><figcaption><span>application_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="ss">ActionController</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">protect_from_forgery</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before_filter</span> <span class="ss">:include_css</span><span class="p">,</span> <span class="ss">:include_javascript</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  2. Add <code>= yield :asset</code> n your layout file (exp: application.html.haml):<br/>
</p>




<figure class='code'><figcaption><span>application.html.haml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">!!!</span>
</span><span class='line'><span class="o">%</span><span class="n">html</span>
</span><span class='line'>  <span class="o">%</span><span class="n">head</span>
</span><span class='line'>    <span class="o">%</span><span class="n">title</span> <span class="no">JongEat</span>
</span><span class='line'>    <span class="o">=</span> <span class="n">stylesheet_link_tag</span>    <span class="s2">&quot;application&quot;</span><span class="p">,</span> <span class="ss">:media</span> <span class="o">=&gt;</span> <span class="s2">&quot;all&quot;</span>
</span><span class='line'>    <span class="o">=</span> <span class="n">javascript_include_tag</span> <span class="s2">&quot;application&quot;</span>
</span><span class='line'>    <span class="o">=</span> <span class="k">yield</span> <span class="ss">:asset</span>
</span><span class='line'>    <span class="o">=</span> <span class="n">csrf_meta_tags</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  3. Example if you create a controller name homes:<br/>
  <code>$ rails generate controller homes</code>
</p>




<p>
  4. Go to app/assets/javascripts and create a folder name homes like your controller (homes) you create below. And input javascript file that you use for controller homes in this folder ( app/assets/javascripts/homes ), and no need to include in application.js file.<br/>
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/javascript_homes.png"><img src="http://geekhmer.github.io/images/javascript_homes.png" alt="" width="680" /></a>
</p>


<p>
  5. Go to app/assets/stylesheets and create a folder name homes like your controller(homes) you create below. And input css file that you use for controller homes in this folder(app/assets/stylesheets), and no need to include or import in application.css file.<br/>
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/css_homes.png"><img src="http://geekhmer.github.io/images/css_homes.png" width="680" /></a><br/>
</p>


<p>So whenever you run homes controller, it include only css and javascript file that you use for homes controller, and can make your project run fast.<br/></p>

<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/browser_homes_controller.png"><img src="http://geekhmer.github.io/images/browser_homes_controller.png" width="680" /></a><br/>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to set Facebook Page Tab content auto resize height?]]></title>
    <link href="http://geekhmer.github.io/blog/2013/12/17/how-to-set-facebook-page-tab-content-auto-resize-height/"/>
    <updated>2013-12-17T16:02:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/12/17/how-to-set-facebook-page-tab-content-auto-resize-height</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
The height of Facebook Page Tab is fixed at 800px, so to set Facebook Page Tab content auto resize height you must add code below at the bottom of body tag.<br/>
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/page_tab_not_yet_resize.png"><img src="http://geekhmer.github.io/images/page_tab_not_yet_resize.png" width="680" /></a><br/>
</p>




<figure class='code'><figcaption><span>code for auto resize height </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;fb-root&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;http://connect.facebook.net/de_DE/all.js1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">window</span><span class="p">.</span><span class="nx">fbAsyncInit</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">FB</span><span class="p">.</span><span class="nx">init</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">appId</span> <span class="o">:</span> <span class="s1">&#39;APP_ID&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">cookie</span> <span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">window</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">FB</span><span class="p">.</span><span class="nx">Canvas</span><span class="p">.</span><span class="nx">setAutoGrow</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Enjoy it
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/page_tab_resize_already.png"><img src="http://geekhmer.github.io/images/page_tab_resize_already.png" width="680" /></a><br/>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to develop Facebook Page Tab?]]></title>
    <link href="http://geekhmer.github.io/blog/2013/12/15/how-to-develop-facebook-page-tab/"/>
    <updated>2013-12-15T11:01:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/12/15/how-to-develop-facebook-page-tab</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  One of the most interesting features of Apps on facebook.com is the ability for your apps (Facebook Page Tab) to be used within the context of a Facebook Fan Pages.<br/>
</p>




<p>
  <strong>1. To create Facebook Page Tab go to the link <a href="https://developers.facebook.com/apps" target="_blank">https://developers.facebook.com/apps</a>.<br/></strong>
  Then click button Create New App.
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/create_new_app_button.png"><img src="http://geekhmer.github.io/images/create_new_app_button.png" width="680" /></a><br/>
</p>


<p>
  <strong>2. Create New App</strong><br/>
  Then enter App Name, App Namespace and choose Apps for Pages for App Category. And click button Continuce.
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/create_new_app_popup.png"><img src="http://geekhmer.github.io/images/create_new_app_popup.png" width="680" /></a><br/>
</p>


<p>
  <strong>3. Setting Basic</strong><br/>
  Then select Website with Facebook Login and Page Tab to fill the information.<br/>
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/app_basic_form.png"><img src="http://geekhmer.github.io/images/app_basic_form.png" width="680" /></a><br/>
</p>


<p>
  <strong>4. Fill the information</strong><br/>
  - With Website with Facebook Login, Enter your Site URL.<br/>
  - With Page Tab, Enter your Page Tab Name, Page Tab URL, Secure Page Tab URL, Page Tab Edit URL and Page Tab Image. And click on button Save Changes. 
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/setup_facebook_page_tab.png"><img src="http://geekhmer.github.io/images/setup_facebook_page_tab.png" width="680" /></a><br/>
</p>




<p>
  <strong>5. Adding an Facebook Page Tab to a Page</strong><br/>
  - As a Facebook Page Tab App developer, you can prompt users to install
  your Page Tab App by including an &#8220;Install this Page Tab
  App&#8221; link.<br/>
  - http://www.facebook.com/dialog/pagetab?app_id=APP_ID&next=URL<br/>
  - Where APP_ID and URL can be found in your app setting (<a href="https://developers.facebook.com/apps" target="_blank">https://developers.facebook.com/apps</a>).<br/>
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/add_page_tab.png"><img src="http://geekhmer.github.io/images/add_page_tab.png" width="680" /></a><br/>
</p>


<p>
  Then please go to your Facebook Fan Page, and click on your Page Tab.
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/sample_facebook_fan_page.png"><img src="http://geekhmer.github.io/images/sample_facebook_fan_page.png" width="680" /></a><br/>
</p>


<p>
  Enjoy it
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/geekhmer_facebook_page_tab_content.png"><img src="http://geekhmer.github.io/images/geekhmer_facebook_page_tab_content.png" width="680" /></a><br/>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is Closure, Proc and Lambda?]]></title>
    <link href="http://geekhmer.github.io/blog/2013/12/08/what-is-closure/"/>
    <updated>2013-12-08T17:02:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/12/08/what-is-closure</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
<strong>1. Closure</strong><br/>
<strong>Closure</strong> is block of code/function/method that has two properties:<br/>
- It can be passed around like an object (to be called later).<br/>
- It remembers the values of all the variables that were in scope when the function was created, then it is able to access those variables when it is called.<br/><br/>
<strong>Proc & Lambda</strong> are closure.
</p>




<p>
<strong>2. Proc (Procedure)</strong><br/>
Proc is a closure and an object that can be bound to a variable and reused.
</p>




<figure class='code'><figcaption><span>default proc </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;Hello Rubyist&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">call</span> <span class="c1"># prints Hello Rubyist</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>proc with parameter </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;x: </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2">, y: </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="c1"># prints x: 1, y: 2</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>proc as closure </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">proc_maker</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="n">a</span> <span class="o">+</span> <span class="n">arg</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="n">proc_maker</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">25</span><span class="p">)</span> <span class="c1"># return =&gt; 35</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>proc as closure </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">to_do</span><span class="p">(</span><span class="nb">p</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">p</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;proc&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">to_do</span><span class="p">(</span><span class="nb">p</span><span class="p">)</span> <span class="c1"># prints proc</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>proc as closure </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">to_do</span><span class="p">(</span><span class="n">proc1</span><span class="p">,</span> <span class="n">proc2</span><span class="p">)</span>
</span><span class='line'>  <span class="n">proc1</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>  <span class="n">proc2</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;first proc&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;second proc&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">to_do</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># prints</span>
</span><span class='line'><span class="c1"># first proc</span>
</span><span class='line'><span class="c1"># second proc</span>
</span></code></pre></td></tr></table></div></figure>




<p>
<strong>3. Lambda</strong><br/>
Lambdas are a more strict form of Proc, something like:<br/>
- Lambda are more strict with regard to argument checking.<br/>
- Lambdas can return a value with the return keyword.
</p>




<figure class='code'><figcaption><span>default lambda </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;Hello Rubyist&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">l</span><span class="o">.</span><span class="n">call</span> <span class="c1"># prints &quot;Hello Rubyist&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>lambda with parameter </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;x: </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2">, y: </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">l</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="c1"># prints x: 1, y: 2</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>lambda as closure </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">lambda_maker</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="n">a</span> <span class="o">+</span> <span class="n">arg</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="n">lambda_maker</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="n">l</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">25</span><span class="p">)</span> <span class="c1"># return 35</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>lambda as closure </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">to_do</span><span class="p">(</span><span class="n">l</span><span class="p">)</span>
</span><span class='line'>  <span class="n">l</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;lambda&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">to_do</span><span class="p">(</span><span class="n">l</span><span class="p">)</span> <span class="c1"># prints lambda</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>lambda as closure </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">to_do</span><span class="p">(</span><span class="n">lambda1</span><span class="p">,</span> <span class="n">lambda2</span><span class="p">)</span>
</span><span class='line'>  <span class="n">lambda1</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>  <span class="n">lambda2</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;first proc&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;second proc&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">to_do</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># prints</span>
</span><span class='line'><span class="c1"># first proc</span>
</span><span class='line'><span class="c1"># second proc</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is Block?]]></title>
    <link href="http://geekhmer.github.io/blog/2013/12/08/what-is-block/"/>
    <updated>2013-12-08T10:29:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/12/08/what-is-block</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  A block is just a bit of code that can be executed. 
</p>




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">].</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">num</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">num</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># print</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="c1"># 2</span>
</span><span class='line'><span class="c1"># 3</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">num</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">num</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># print</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="c1"># 2</span>
</span><span class='line'><span class="c1"># 3</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  A block is a piece of code that is declared but not run in the place it&#8217;s written. 
  The idea is to run when to call it.
</p>




<figure class='code'><figcaption><span>default block using yield </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">to_do</span>
</span><span class='line'>  <span class="k">yield</span>
</span><span class='line'>  <span class="k">yield</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">to_do</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;hello&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># print</span>
</span><span class='line'><span class="c1"># hello</span>
</span><span class='line'><span class="c1"># hello</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>block with parameter using yield </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">to_do</span>
</span><span class='line'>  <span class="k">yield</span> <span class="s2">&quot;bunlong&quot;</span>
</span><span class='line'>  <span class="k">yield</span> <span class="s2">&quot;sky&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">to_do</span> <span class="k">do</span> <span class="o">|</span><span class="nb">name</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># print</span>
</span><span class='line'><span class="c1"># hello, bunlong</span>
</span><span class='line'><span class="c1"># hello, sky</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>default block using call </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">method_name</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="n">block</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">method_name</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;hello&quot;</span> <span class="p">}</span> <span class="c1"># prints hello</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>block with parameter using call </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">eat</span><span class="p">(</span><span class="n">meal</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">consume</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nb">block_given?</span>
</span><span class='line'>    <span class="n">meal</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">good</span><span class="o">|</span> <span class="n">consume</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">good</span><span class="p">)}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">eat</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;cheese&#39;</span><span class="p">,</span> <span class="s1">&#39;steak&#39;</span><span class="p">,</span> <span class="s1">&#39;wine&#39;</span><span class="o">]</span><span class="p">)</span> <span class="p">{</span><span class="o">|</span><span class="n">food</span><span class="o">|</span> <span class="nb">puts</span> <span class="s1">&#39;Hmm, #{food}&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># prints</span>
</span><span class='line'><span class="c1"># Hmm, cheese</span>
</span><span class='line'><span class="c1"># Hmm, steak</span>
</span><span class='line'><span class="c1"># Hmm, wine</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AbstractClass]]></title>
    <link href="http://geekhmer.github.io/blog/2013/12/07/abstractclass/"/>
    <updated>2013-12-07T22:31:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/12/07/abstractclass</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AbstractKlass</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method_name</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">hello</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">ConcreteKlass</span> <span class="o">&lt;</span> <span class="no">AbstractKlass</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span><span class="p">;</span> <span class="s2">&quot;Hello&quot;</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">name</span><span class="p">;</span> <span class="s2">&quot;Rubyist&quot;</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># def hello</span>
</span><span class='line'>  <span class="c1">#   &quot;Hello&quot;</span>
</span><span class='line'>  <span class="c1"># end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># def name</span>
</span><span class='line'>  <span class="c1">#   &quot;Rubyist&quot;</span>
</span><span class='line'>  <span class="c1"># end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">ConcreteKlass</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">method_name</span> <span class="c1"># =&gt; &quot;Hello Rubyist&quot;  </span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[method_missing]]></title>
    <link href="http://geekhmer.github.io/blog/2013/11/30/method-missing/"/>
    <updated>2013-11-30T11:15:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/11/30/method-missing</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  method_missing use for creating dynamic methods.
</p>


<p>
  <strong>example</strong><br/>
</p>




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Klass</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">method_name</span><span class="o">.</span><span class="n">to_s</span> <span class="o">=~</span> <span class="sr">/^find_by_(.+)$/</span>
</span><span class='line'>      <span class="n">run_find_by_method</span><span class="p">(</span><span class="vg">$1</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">super</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">run_find_by_method</span><span class="p">(</span><span class="n">attrs</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="n">attrs</span> <span class="o">=</span> <span class="n">attrs</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;_and_&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">attrs_with_args</span> <span class="o">=</span> <span class="o">[</span><span class="n">attrs</span><span class="p">,</span> <span class="n">args</span><span class="o">].</span><span class="n">transpose</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">conditions</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">[</span><span class="n">attrs_with_args</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">str</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>    <span class="n">conditions</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="o">|</span>
</span><span class='line'>      <span class="n">str</span> <span class="o">+=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">key</span><span class="si">}</span><span class="s2"> = &#39;</span><span class="si">#{</span><span class="n">value</span><span class="si">}</span><span class="s2">&#39; and &quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">p</span> <span class="s2">&quot;select * from tbl where </span><span class="si">#{</span><span class="n">str</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">6</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">k</span> <span class="o">=</span> <span class="no">Klass</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">k</span><span class="o">.</span><span class="n">find_by_name</span><span class="p">(</span><span class="s2">&quot;Bunlong&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">k</span><span class="o">.</span><span class="n">find_by_name_and_email</span><span class="p">(</span><span class="s2">&quot;Bunlong&quot;</span><span class="p">,</span> <span class="s2">&quot;bunlong.van@gmail.com&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[include_vs_extend]]></title>
    <link href="http://geekhmer.github.io/blog/2013/11/30/include-vs-extend/"/>
    <updated>2013-11-30T10:56:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/11/30/include-vs-extend</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  <strong>include</strong><br/>
  include use for adding methods to an instance of a class.
</p>




<p>
  <strong>example</strong><br/>
</p>




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s1">&#39;Hi foo&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Bar</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">bar</span> <span class="o">=</span> <span class="no">Bar</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">bar</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># =&gt; Hi foo</span>
</span><span class='line'>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># =&gt; NoMethodError: undefined method ‘foo’ for Bar:Class</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>extend</strong><br/>
  extend use for adding class methods.
</p>




<p>
  <strong>example</strong><br/>
</p>




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s1">&#39;Hi foo&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Baz</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># =&gt; Hi foo</span>
</span><span class='line'>
</span><span class='line'><span class="n">bar</span> <span class="o">=</span> <span class="no">Bar</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">bar</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># =&gt; NoMethodError: undefined method ‘foo’ for #&lt;Baz:0x1e708&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Using include to append both class and instance methods</strong><br/>
  You will see in Ruby is to use include to append both class and instance methods.<br/>
  The reason for this is that include has a self.included hook you can use to modify 
  the class that is including a module.
</p>




<p>
  <strong>example</strong><br/>
</p>




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="no">ClassMethods</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">bar</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s1">&#39;class method&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s1">&#39;instance method&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Bar</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">bar</span> <span class="c1"># =&gt; class method</span>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># =&gt; NoMethodError: undefined method ‘foo’ for Baz:Class</span>
</span><span class='line'>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># =&gt; instance method</span>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">bar</span> <span class="c1"># =&gt; NoMethodError: undefined method ‘bar’ for #&lt;Baz:0x1e3d4&gt;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[define_singleton_method]]></title>
    <link href="http://geekhmer.github.io/blog/2013/11/30/define-singleton-method/"/>
    <updated>2013-11-30T09:16:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/11/30/define-singleton-method</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  define_singleton_method use to define singleton method.
</p>




<p>
  <strong>example</strong><br/>
</p>




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Sayer</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">shouts</span><span class="p">(</span><span class="o">*</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="n">words</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">word</span><span class="o">|</span>
</span><span class='line'>      <span class="n">define_singleton_method</span> <span class="s2">&quot;shout_</span><span class="si">#{</span><span class="n">word</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>        <span class="nb">p</span> <span class="n">word</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">shouts</span> <span class="ss">:hello</span><span class="p">,</span> <span class="ss">:goodbye</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Sayer</span><span class="o">.</span><span class="n">shout_hello</span>
</span><span class='line'><span class="no">Sayer</span><span class="o">.</span><span class="n">shout_goodbye</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dynamic Grid Layout with Masonry]]></title>
    <link href="http://geekhmer.github.io/blog/2013/10/21/dynamic-grid-layout-with-masonry/"/>
    <updated>2013-10-21T00:35:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/10/21/dynamic-grid-layout-with-masonry</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  <strong>What is Masonry?</strong><br/>
  Masonry is a JavaScript grid layout library. It works by placing elements in optimal position based on available vertical space.
</p>


<p>
  <strong>Add JQuery & Masonry script</strong><br/>
  Add JQuery and Masonry script in head tag.
</p>




<figure class='code'><figcaption><span>Add JQuery & Masonary script </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;jquery-1.9.1.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;masonry.pkgd.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Create Item</strong><br/>
  All items are wrapped in a container.
</p>




<figure class='code'><figcaption><span>Create Item </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>Item1<span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>Item2<span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>Item3<span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Create Item CSS style</strong><br/>
  Item style should be floated.
</p>




<figure class='code'><figcaption><span>Create Item CSS style </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>.box-item {
</span><span class='line'>  width: 220px;
</span><span class='line'>  height: 220px;
</span><span class='line'>  margin: 10px;
</span><span class='line'>  float: left;
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Run Masonry</strong><br/>
  The script to run Masonry.
</p>




<figure class='code'><figcaption><span>Masongry script </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$(function(){
</span><span class='line'>  $(&#39;#container&#39;).masonry({
</span><span class='line'>    itemSelector: &#39;.box-item&#39;
</span><span class='line'>  });
</span><span class='line'>});
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Full Code</strong><br/>
</p>




<figure class='code'><figcaption><span>Full Code </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!doctype html&gt;</span>
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nc">.box-item</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">width</span><span class="o">:</span> <span class="m">220px</span><span class="p">;</span>
</span><span class='line'>      <span class="k">padding</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
</span><span class='line'>      <span class="k">margin</span><span class="o">:</span> <span class="m">5px</span><span class="p">;</span>
</span><span class='line'>      <span class="k">float</span><span class="o">:</span> <span class="k">left</span><span class="p">;</span>
</span><span class='line'>      <span class="k">border</span><span class="o">:</span> <span class="m">1px</span> <span class="k">solid</span> <span class="m">#CCC</span><span class="p">;</span>
</span><span class='line'>      <span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">4px</span><span class="p">;</span>
</span><span class='line'>      <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">4px</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="nt">&lt;/style&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;jquery-1.9.1.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;masonry.pkgd.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#container&#39;</span><span class="p">).</span><span class="nx">masonry</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">itemSelector</span><span class="o">:</span> <span class="s1">&#39;.box-item&#39;</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec odio. Quisque volutpat mattis eros. Nullam malesuada erat ut turpis. Suspendisse urna nibh, viverra non, semper suscipit, posuere a, pede.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis.
</span><span class='line'>      Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Sit amet mi ullamcorper vehicula Ut convallis, sem sit amet interdum consectetuer, odio augue aliquam leo, nec dapibus tortor nibh sed augue. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      usce accumsan mollis eros. Pellentesque a diam sit amet mi ullamcorper vehicula
</span><span class='line'>      Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Ut convallis, sem sit amet interdum consectetuer, odio augue aliquam leo, nec dapibus tortor nibh sed augue.
</span><span class='line'>      Ut condimentum mi vel tellus. Suspendisse laoreet. Fusce ut est sed dolor gravida convallis. Morbi vitae ante. Vivamus ultrices luctus nunc. Suspendisse et dolor. Etiam dignissim. Proin malesuada adipiscing lacus. Donec metus. Curabitur gravida.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Ut condimentum mi vel tellus. Suspendisse laoreet. Fusce ut est sed dolor gravida convallis. Morbi vitae ante. Vivamus ultrices luctus nunc. Suspendisse et dolor.
</span><span class='line'>      Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec odio. Quisque volutpat mattis eros. Nullam malesuada erat ut turpis. Suspendisse urna nibh, viverra non, semper suscipit, posuere a, pede.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis.
</span><span class='line'>      Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Sit amet mi ullamcorper vehicula Ut convallis, sem sit amet interdum consectetuer, odio augue aliquam leo, nec dapibus tortor nibh sed augue. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      usce accumsan mollis eros. Pellentesque a diam sit amet mi ullamcorper vehicula
</span><span class='line'>      Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Ut convallis, sem sit amet interdum consectetuer, odio augue aliquam leo, nec dapibus tortor nibh sed augue.
</span><span class='line'>      Ut condimentum mi vel tellus. Suspendisse laoreet. Fusce ut est sed dolor gravida convallis. Morbi vitae ante. Vivamus ultrices luctus nunc. Suspendisse et dolor. Etiam dignissim. Proin malesuada adipiscing lacus. Donec metus. Curabitur gravida.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Ut condimentum mi vel tellus. Suspendisse laoreet. Fusce ut est sed dolor gravida convallis. Morbi vitae ante. Vivamus ultrices luctus nunc. Suspendisse et dolor.
</span><span class='line'>      Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can download the <a href="https://github.com/Bunlong/masonry" target="_blank">source code</a> and try it out.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Acceptance/Feature test, Integration test, Unit test, Smoke test, Regression test]]></title>
    <link href="http://geekhmer.github.io/blog/2013/10/14/acceptance-slash-feature-test-integration-test-unit-test-smoke-test-regression-test/"/>
    <updated>2013-10-14T21:12:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/10/14/acceptance-slash-feature-test-integration-test-unit-test-smoke-test-regression-test</id>
    <content type="html"><![CDATA[<p>
  <strong>1. What is Acceptance/Feature test?</strong><br/>
  Is the testing use to test the customer&#8217;s specific scenarios when a user story has been correctly implemented. A story can have one or many acceptance tests, whatever it takes to ensure the functionality works.
</p>


<p>
  <strong>2. What is Integration test?</strong><br/>
  Is the testing use to expose defects in the interfaces and interaction between integrated components (modules).
</p>


<p>
  <strong>3. What is Unit test?</strong><br/>
   Also known as component testing, refers to tests that verify the functionality of a specific section of code, usually at the function level. In an object-oriented environment, this is usually at the class level.
   These types of tests is used to ensure that the specific function is working as expected. One function might have multiple tests.
</p>


<p>
  <strong>4. What is Smoke test?</strong><br/>
  Is the quick testing to make sure everything looks okay before you get involved in the more testing.
</p>


<p>
  <strong>5. What is Regression test?</strong><br/>
  Is the testing to make sure you haven&#8217;t broken anything. Everything that used to work should still work.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Test and Behaviour Driven Development (TDD/BDD)]]></title>
    <link href="http://geekhmer.github.io/blog/2013/10/12/test-and-behaviour-driven-development-tdd-slash-bdd/"/>
    <updated>2013-10-12T00:36:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/10/12/test-and-behaviour-driven-development-tdd-slash-bdd</id>
    <content type="html"><![CDATA[<p>
  <strong>1. What is TDD/BDD?</strong><br/>
  Express expected behaviour before writing code.
</p>


<p>
  <strong>2. Why is TDD/BDD a good thing?</strong><br/>
  - Enjoy more efficient and predictable course of development.<br/>
  - Find and fix bugs faster.<br/>
  - Prevent bugs from reappearing.<br/>
  - Improve the design of our software.<br/>
  - Reliable document.
</p>


<p>
  <strong>3. How do we do TDD/BDD?</strong><br/>
  - Write test programs.<br/>
  - Run the tests automatically.<br/>
</p>


<p>
  <strong>Workflow/Processing</strong><br/>
</p>


<p> 
  TDD<br/>
  <a class="fancybox" href="http://geekhmer.github.io/images/tdd.png"><img src="http://geekhmer.github.io/images/tdd.png" /></a><br/>
</p>


<p>
  BDD<br/>
  <a class="fancybox" href="http://geekhmer.github.io/images/tdd.png"><img src="http://geekhmer.github.io/images/bdd.png" /></a>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The most gem that you need for developing Ruby on Rails project]]></title>
    <link href="http://geekhmer.github.io/blog/2013/10/06/the-most-gem-that-you-need-for-developing-ruby-on-rails-project/"/>
    <updated>2013-10-06T18:04:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/10/06/the-most-gem-that-you-need-for-developing-ruby-on-rails-project</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  <strong>1. haml-rails</strong><br/>
  Description: Haml-rails provides Haml generators for rails 3.<br/>
  Source: <a href="https://github.com/indirect/haml-rails" target="_blank">https://github.com/indirect/haml-rails</a>
</p>


<p>
  <strong>2. bootstrap-sass</strong><br/>
  Description: bootstrap-sass is an sass-powered version of Twitter&#8217;s Bootstrap.<br/>
  Source: <a href="https://github.com/thomas-mcdonald/bootstrap-sass" target="_blank">https://github.com/thomas-mcdonald/bootstrap-sass</a>
</p>


<p>
  <strong>3. simple_form</strong><br/>
  Description: simple_form aims to be as flexible as possible while helping you with powerful components to create your form.<br/>
  Source: <a href="https://github.com/plataformatec/simple_form" target="_blank">https://github.com/plataformatec/simple_form</a>
</p>


<p>
  <strong>4. bootstrap Wysihtml5 for Rails</strong><br/>
  Description: It provides a stylish wysiwyg editor for Bootstrap.<br/>
  Source: <a href="https://github.com/Nerian/bootstrap-wysihtml5-rails" target="_blank">https://github.com/Nerian/bootstrap-wysihtml5-rails</a>, <a href="http://jquery-spellchecker.badsyntax.co/bootstrap-wysihtml5.html" target="_blank">http://jquery-spellchecker.badsyntax.co/bootstrap-wysihtml5.html</a>
</p>


<p>
  <strong>5. select2</strong><br/>
  Description: jQuery based replacement of select boxes. It supports searching, remote data sets, and infinite scrolling of results.<br/>
  Source: <a href="https://github.com/argerim/select2-rails" target="_blank">https://github.com/argerim/select2-rails</a>, <a href="http://ivaynberg.github.io/select2" target="_blank">http://ivaynberg.github.io/select2</a>
</p>


<p>
  <strong>6. nested_form</strong><br/>
  Description: This is a Rails gem for conveniently manage multiple nested models in a single form. It does so in an unobtrusive way through jQuery or Prototype.<br/>
  Source: <a href="https://github.com/ryanb/nested_form" target="_blank">https://github.com/ryanb/nested_form</a>
</p>


<p>
  <strong>7. httparty</strong><br/>
  Description: makes http fun again.<br/>
  Source: <a href="https://github.com/jnunemaker/httparty" target="_blank">https://github.com/jnunemaker/httparty</a>
</p>


<p>
  <strong>8. typhoeus</strong><br/>
  Description: typhoeus runs HTTP requests in parallel while cleanly encapsulating handling logic.<br/>
  Source: <a href="https://github.com/typhoeus/typhoeus" target="_blank">https://github.com/typhoeus/typhoeus</a>
</p>


<p>
  <strong>9. devise</strong><br/>
  Description: devise is a flexible authentication solution for Rails.<br/>
  Source: <a href="https://github.com/plataformatec/devise" target="_blank">https://github.com/plataformatec/devise</a>
</p>


<p>
  <strong>10. CanCan</strong><br/>
  Description: CanCan is an authorization library for Ruby on Rails.<br/>
  Source: <a href="https://github.com/ryanb/cancan" target="_blank">https://github.com/ryanb/cancan</a>
</p>


<p>
  <strong>11. rspec-rails</strong><br/>
  Description: rspec-rails is a testing framework for Rails 3.x and 4.x.<br/>
  Source: <a href="https://github.com/rspec/rspec-rails" target="_blank">https://github.com/rspec/rspec-rails</a>
</p>


<p>
  <strong>12. Capybara</strong><br/>
  Description: Capybara helps you test web applications by simulating how a real user would interact with your app.<br/>
  Source: <a href="https://github.com/rspec/rspec-rails" target="_blank">https://github.com/rspec/rspec-rails</a>
</p>


<p>
  <strong>13. factory_girl_rails</strong><br/>
  Description: factory_girl - A library for setting up Ruby objects as a test data.<br/>
  Source: <a href="https://github.com/thoughtbot/factory_girl_rails" target="_blank">https://github.com/thoughtbot/factory_girl_rails</a>
</p>


<p>
  <strong>14. exception_notification</strong><br/>
  Description: exception_notification provides a mailer object and a default set of templates for sending email notifications when errors occur in a Rails application.<br/>
  Source: <a href="https://github.com/smartinez87/exception_notification" target="_blank">https://github.com/smartinez87/exception_notification</a>
</p>


<p>
  <strong>15. Pry</strong><br/>
  Description: Pry is a powerful alternative to the standard IRB shell for Ruby.<br/>
  Source: <a href="https://github.com/pry/pry" target="_blank">https://github.com/pry/pry</a>
</p>


<p>
  <strong>16. browsernizer</strong><br/>
  Description: want friendly &#8220;please upgrade your browser&#8221; page? This gem is for you.<br/>
  Source: <a href="https://github.com/assembler/browsernizer" target="_blank">https://github.com/assembler/browsernizer</a>
</p>


<p>
  <strong>17. zero-clipboard-rails</strong><br/>
  Description: add the zeroclipboard to your rails app.<br/>
  Source: <a href="https://github.com/HaNdTriX/zeroclipboard-rails" target="_blank">https://github.com/HaNdTriX/zeroclipboard-rails</a>
</p>


<p>
  <strong>18. uuidtools</strong><br/>
  Description: uuidtools was designed to be a simple library for generating any of the various types of uuids.<br/>
  Source: <a href="https://github.com/sporkmonger/uuidtools/tree/" target="_blank">https://github.com/sporkmonger/uuidtools/tree</a>
</p>


<p>
  <strong>19. will_paginate</strong><br/>
  Description: will_paginate is a pagination library that intergrates with Ruby on Rails.<br/>
  Source: <a href="https://github.com/mislav/will_paginate" target="_blank">https://github.com/mislav/will_paginate</a>
</p>


<p>
  <strong>20. paperclip</strong><br/>
  Description: Paperclip is intended as an easy file attachment library for Active Record.<br/>
  Source: <a href="https://github.com/thoughtbot/paperclip" target="_blank">https://github.com/thoughtbot/paperclip</a>
</p>


<p>
  <strong>21. delayed_job_active_record</strong><br/>
  Description: delayed_job_active_record encapsulates the common pattern of asynchronously executing longer tasks in the background.<br/>
  Source: <a href="https://github.com/collectiveidea/delayed_job" target="_blank">https://github.com/collectiveidea/delayed_job</a>
</p>


<p>
  <strong>22. pg_search</strong><br/>
  Description: pg_search builds named scopes that take advantage of PostgreSQL&#8217;s full text search.<br/>
  Source: <a href="https://github.com/Casecommons/pg_search" target="_blank">https://github.com/Casecommons/pg_search</a>
</p>


<p>
  <strong>23. activerecord-postgres-hstore</strong><br/>
  Description: activerecord-postgres-hstore - Goodbye serialize, hello hstore. Speed up hashes in the database.<br/>
  Source: <a href="https://github.com/engageis/activerecord-postgres-hstore" target="_blank">https://github.com/engageis/activerecord-postgres-hstore</a>
</p>


<p>
  <strong>24. fastimage</strong><br/>
  Description: fastimage finds the size or type of an image given its uri by fetching as little as needed.<br/>
  Source: <a href="https://github.com/sdsykes/fastimage" target="_blank">https://github.com/sdsykes/fastimage</a>
</p>


<p>
  <strong>25. better_error</strong><br/>
  Description: better errors replaces the standard Rails error page with a much better and more useful error page.<br/>
  Source: <a href="https://github.com/charliesome/better_errors" target="_blank">https://github.com/charliesome/better_errors</a>
</p>


<p>
  <strong>26. vcr</strong><br/>
  Description: record your test suite&#8217;s HTTP interactions and reply them during future test runs for fast, deterministic, accurate tests.<br/>
  Source: <a href="https://github.com/vcr/vcr" target="_blank">https://github.com/vcr/vcr</a>
</p>


<p>
  <strong>27. aws-sdk</strong><br/>
  Description: The official AWS SDK for Ruby.<br/>
  Source: <a href="https://github.com/aws/aws-sdk-ruby" target="_blank">https://github.com/aws/aws-sdk-ruby</a>
</p>


<p>
  <strong>28. guard</strong><br/>
  Description: Guard is a command line tool to easily handle events on file system modifications.<br/>
  Source: <a href="https://github.com/guard/guard" target="_blank">https://github.com/guard/guard</a>
</p>


<p>
  <strong>29. Spork</strong><br/>
  Description: Spork is Tim Harper’s implementation of test server.<br/>
  Source: <a href="https://github.com/sporkrb/spork" target="_blank">https://github.com/sporkrb/spork</a>
</p>


<p>
  <strong>30. strip_attributes</strong><br/>
  Description: StripAttributes is an ActiveModel extension that automatically strips all attributes of leading and trailing whitespace before validation. If the attribute is blank, it strips the value to nil by default.<br/>
  Source: <a href="https://github.com/rmm5t/strip_attributes" target="_blank">https://github.com/rmm5t/strip_attributes</a>
</p>


<p>
  <strong>31. exception_notification</strong><br/>
  Description: The Exception Notifier plugin provides a mailer object and a default set of templates for sending email notifications when errors occur in a Rails application.<br/>
  Source: <a href="https://github.com/rails/exception_notification" target="_blank">https://github.com/rails/exception_notification</a>
</p>


<p>
  <strong>32. assets_helper</strong><br/>
  Description:  is the gem that use to include css and javascript by controller name automatically, it mean that include only css and javascript file in the controller that you are running.<br/>
  Source: <a href="https://github.com/Bunlong/assets_helper" target="_blank">https://github.com/Bunlong/assets_helper</a>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebook fan page auto Like]]></title>
    <link href="http://geekhmer.github.io/blog/2013/10/02/facebook-fan-page-auto-like/"/>
    <updated>2013-10-02T18:24:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/10/02/facebook-fan-page-auto-like</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  When someone click anywhere on your site they will automatically like your page, no need to put like button.
</p>


<p>
  <strong>1. Put the below code in head tag:</strong>
</p>




<figure class='code'><figcaption><span>Check the body are clicked yet </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;jquery-1.9.1.js&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">interval</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">updateActiveElement</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">activeElement</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="s2">&quot;fb-iframe&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">clearInterval</span><span class="p">(</span><span class="nx">interval</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">bodyClicked</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">interval</span> <span class="o">=</span> <span class="nx">setInterval</span><span class="p">(</span><span class="s2">&quot;updateActiveElement();&quot;</span><span class="p">,</span> <span class="mi">50</span><span class="p">);</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>2. Put the below code in body tag:</strong>
</p>




<figure class='code'><figcaption><span>Load facebook fan page like button & hide it </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">&quot;overflow: hidden; width: 10px; height: 12px; position: absolute; filter:alpha(opacity=0); -moz-opacity:0.0; -khtml-opacity: 0.0; opacity: 0.0;&quot;</span> <span class="na">id=</span><span class="s">&quot;iframe-wrapper&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;iframe</span> <span class="na">src=</span><span class="s">&quot;http://www.facebook.com/plugins/like.php?href=YOUR_PAGE_URL[/COLOR]&amp;amp;layout=standard&amp;amp;show_faces=false&amp;amp;width=450&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=80&quot;</span> <span class="na">scrolling=</span><span class="s">&quot;no&quot;</span> <span class="na">frameborder=</span><span class="s">&quot;0&quot;</span> <span class="na">style=</span><span class="s">&quot;border:none; overflow:hidden; width:50px; height:23px;&quot;</span> <span class="na">allowTransparency=</span><span class="s">&quot;true&quot;</span> <span class="na">id=</span><span class="s">&quot;fb-iframe&quot;</span> <span class="na">name=</span><span class="s">&quot;fb-iframe&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/iframe&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
And then find YOUR_PAGE_URL in src iframe and replace it with your facebook fan page url (ex: <a href="http://www.facebook.com/GeeKhmer" target="_blank">http://www.facebook.com/GeeKhmer</a>).
</p>


<p>
  <strong>3. Put the below code anywhere in html tag:</strong>
</p>




<figure class='code'><figcaption><span>Set mousemove event to body & when body are clicked, it auto click on facebook like button </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">bodyClicked</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">iframeWrapper</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;iframe-wrapper&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">standardBody</span> <span class="o">=</span> <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">compatMode</span> <span class="o">==</span> <span class="s2">&quot;CSS1Compat&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span> <span class="o">:</span> <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">mouseFollower</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// for internet explorer</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">iframeWrapper</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span> <span class="o">=</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">y</span> <span class="o">-</span> <span class="mi">5</span><span class="p">)</span> <span class="o">+</span> <span class="nx">standardBody</span><span class="p">.</span><span class="nx">scrollTop</span> <span class="o">+</span> <span class="s1">&#39;px&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">iframeWrapper</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span> <span class="o">=</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">x</span> <span class="o">-</span> <span class="mi">5</span><span class="p">)</span> <span class="o">+</span> <span class="nx">standardBody</span><span class="p">.</span><span class="nx">scrollLeft</span> <span class="o">+</span> <span class="s1">&#39;px&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">iframeWrapper</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span> <span class="o">=</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">pageY</span><span class="o">-</span><span class="mi">5</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;px&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">iframeWrapper</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span> <span class="o">=</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">pageX</span><span class="o">-</span><span class="mi">5</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;px&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">document</span><span class="p">.</span><span class="nx">onmousemove</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nx">bodyClicked</span> <span class="o">==</span> <span class="kc">false</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">mouseFollower</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can download the <a href="https://github.com/Bunlong/facebook_auto_like" target="_blank">source code</a> and try it out.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploy Ruby on Rails Project to Heroku on Ubuntu]]></title>
    <link href="http://geekhmer.github.io/blog/2013/09/29/deploy-ruby-on-rails-project-to-heroku-on-ubuntu/"/>
    <updated>2013-09-29T09:23:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/09/29/deploy-ruby-on-rails-project-to-heroku-on-ubuntu</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  <strong>1. Installation heroku environment <a href="https://toolbelt.heroku.com/">(www.toolbelt.heroku.com)</a></strong><br/>
  Open your terminal and type command below:<br/>
</p>


<p>
  1. <code>wget -qO- https://toolbelt.heroku.com/install.sh | sh</code><br/>
  2. <code>gem install heroku foreman</code><br/>
  3. <code>heroku login</code><br/>
</p>


<p>
  <strong>2.  Installation git<br/></strong>
  Open your terminal and type command below:<br/>
</p>


<p>
  1. <code>sudo apt-get install git-core</code><br/>
  2. <code>sudo apt-get install expat openssl zlib1g zlib1g-dev</code><br/>
</p>


<p>
  <strong>3. Create Ruby on Rails project<br/></strong>
  Open your terminal and type command below:<br/>
</p>


<p>
  <code>rails new app_name -d postgresql</code><br/>
</p>


<p>
  Then open Gemfile and add two gem below:
</p>


<p>
  <code>gem “heroku”</code><br/>
  <code>gem “thin”</code><br/>
</p>


<p>
  Open your terminal and type command below:<br/>
</p>


<p>
  <code>sudo apt-get install expat openssl zlib1g zlib1g-dev</code><br/>
</p>


<p>
  <strong>4. Deploy to heroku<br/></strong>
  Open your terminal and type command below:<br/>
</p>


<p>
  1. <code>cd project_name</code><br/>
  2. <code>git init</code><br/>
  3. <code>git add .</code><br/>
  4. <code>git commit -m “my first commit”</code><br/>
  5. <code>heroku create heroku_app_name</code><br/>
  6. <code>heroku git:remote -a heroku_app_name</code><br/>
  7. <code>git push heroku master</code><br/>
</p>


<p>
  <strong>Each time you wish to deploy to Heroku<br/></strong>
  Open your terminal and type command below:<br/>
</p>


<p>
  1. <code>git add -A</code><br/>
  2. <code>git commit -m “commit for deploy to heroku”</code><br/>
  3. <code>git push -f heroku</code><br/>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebook signed request lose session in Ruby on Rails]]></title>
    <link href="http://geekhmer.github.io/blog/2013/09/28/facebook-signed-request-lose-session-in-ruby-on-rails/"/>
    <updated>2013-09-28T22:03:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/09/28/facebook-signed-request-lose-session-in-ruby-on-rails</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  <strong>Question: </strong> Does the session in your Ruby on Rails application lose after a user goes to a facebook tab app then facebook tab app request to your server and your server receives a signed request?<br/>
  <strong>Answer: </strong> This can be happening because of the facebook app doesn’t send a csrf token in it’s token.
</p>


<p>
  You can fix this by add <strong>skip_before_filter :verify_authenticity_token</strong> to the controller that facebook app’s request to or remove <strong>protect_from_forgery</strong> from application_controller.rb
</p>

]]></content>
  </entry>
  
</feed>
