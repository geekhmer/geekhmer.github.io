<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2014-06-03T11:59:44+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JSRender]]></title>
    <link href="http://geekhmer.github.io/blog/2014/06/02/jsrender/"/>
    <updated>2014-06-02T17:08:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/06/02/jsrender</id>
    <content type="html"><![CDATA[<p>
  <strong>What is JsRender?</strong><br/>
  Many development platforms use templates to reduce code and simplify maintenance, and HTML5 and JavaScript are no exception. JsRender is a JavaScript library that allows you to define a boilerplate structure once and reuse it to generate HTML dynamically. JsRender brings a new templating library to HTML5 development that has a codeless tag syntax and high performance, has no dependency on jQuery nor on the Document Object Model (DOM), supports creating custom functions and uses pure string-based rendering.
</p>




<p>
  <strong>Why Templates?</strong><br/>
  Using templates with JavaScript reduces and simplifies code. Without templates, adding a series of list items and other HTML elements for a set of data might require manipulating a browserâ€™s DOM. This is where templating using a plug-in such as JsRender can be quite useful to do the heavy lifting.
</p>




<p>
  <strong>Practice</strong><br/>
</p>




<figure class='code'><figcaption><span>demo.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;!</span><span class="nx">DOCTYPE</span> <span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;js/jquery.min.js&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;js/jsrender.js&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;css/bootstrap.min.css&quot;</span> <span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;book_template&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/x-jsrender&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">tr</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">td</span><span class="o">&gt;</span><span class="p">{</span> <span class="p">{</span><span class="o">:</span><span class="err">#</span><span class="nx">index</span><span class="o">+</span><span class="mi">1</span><span class="p">}</span> <span class="p">}</span> <span class="o">&lt;</span><span class="err">/td&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">td</span><span class="o">&gt;</span><span class="p">{</span> <span class="p">{</span><span class="o">&gt;</span><span class="nx">name</span><span class="p">}</span> <span class="p">}</span><span class="o">&lt;</span><span class="err">/td&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">td</span><span class="o">&gt;</span><span class="p">{</span> <span class="p">{</span><span class="o">&gt;</span><span class="nx">releaseYear</span><span class="p">}</span> <span class="p">}</span><span class="o">&lt;</span><span class="err">/td&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/tr&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">books</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;Erlang&quot;</span><span class="p">,</span> <span class="nx">releaseYear</span><span class="o">:</span> <span class="s2">&quot;1986&quot;</span> <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;Ruby&quot;</span><span class="p">,</span> <span class="nx">releaseYear</span><span class="o">:</span> <span class="s2">&quot;1998&quot;</span> <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;Ruby on Rails&quot;</span><span class="p">,</span> <span class="nx">releaseYear</span><span class="o">:</span> <span class="s2">&quot;1999&quot;</span> <span class="p">},</span>
</span><span class='line'>        <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s2">&quot;Javascript&quot;</span><span class="p">,</span> <span class="nx">releaseYear</span><span class="o">:</span> <span class="s2">&quot;1976&quot;</span> <span class="p">}</span>
</span><span class='line'>      <span class="p">];</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#book_list&quot;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#book_template&quot;</span><span class="p">).</span><span class="nx">render</span><span class="p">(</span><span class="nx">books</span><span class="p">)</span>
</span><span class='line'>      <span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="err">/head&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">div</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">section</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;fluidGridSystem&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">div</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;page-header&quot;</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">h3</span><span class="o">&gt;</span><span class="nx">Render</span> <span class="nx">template</span> <span class="nx">against</span> <span class="nx">local</span> <span class="nx">data</span><span class="o">&lt;</span><span class="err">/h3&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="nx">div</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;row-fluid show-grid&quot;</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">table</span> <span class="kr">class</span><span class="o">=</span><span class="s2">&quot;table table-bordered&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">thead</span><span class="o">&gt;</span>
</span><span class='line'>            <span class="o">&lt;</span><span class="nx">tr</span><span class="o">&gt;</span>
</span><span class='line'>              <span class="o">&lt;</span><span class="nx">th</span><span class="o">&gt;</span><span class="nx">No</span><span class="o">&lt;</span><span class="err">/th&gt;</span>
</span><span class='line'>              <span class="o">&lt;</span><span class="nx">th</span><span class="o">&gt;</span><span class="nx">Name</span><span class="o">&lt;</span><span class="err">/th&gt;</span>
</span><span class='line'>              <span class="o">&lt;</span><span class="nx">th</span><span class="o">&gt;</span><span class="nx">Release</span> <span class="nx">Year</span><span class="o">&lt;</span><span class="err">/th&gt;</span>
</span><span class='line'>            <span class="o">&lt;</span><span class="err">/tr&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="err">/thead&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="nx">tbody</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;book_list&quot;</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="err">/tbody&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="err">/table&gt;</span>
</span><span class='line'>      <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/section&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/body&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can download the <a href="https://github.com/Bunlong/jsrender" target="_blank">source code</a> and try it out.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tokeninput Jquery Multiple Select Item]]></title>
    <link href="http://geekhmer.github.io/blog/2014/05/22/tokeninput-jquery-multiple-select-item/"/>
    <updated>2014-05-22T16:46:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/05/22/tokeninput-jquery-multiple-select-item</id>
    <content type="html"><![CDATA[<p>
  <strong>What is Tokeninput?</strong><br/>
  Tokeninput is a jQuery plugin which allows your users to select multiple items from a predefined list, using autocompletion as they type to find each item. You may have seen a similar type of text entry when filling in the recipients field sending messages on facebook.
</p>




<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/tokeninput_jquery.png"><img src="http://geekhmer.github.io/images/tokeninput_jquery.png" alt="" width="680" /></a>
</p>




<p>
  <strong>Practice</strong><br/>
</p>




<figure class='code'><figcaption><span>demo.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.min.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;src/jquery.tokeninput.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;styles/token-input.css&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">link</span> <span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nx">href</span><span class="o">=</span><span class="s2">&quot;styles/token-input-facebook.css&quot;</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/head&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">h2</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;theme&quot;</span><span class="o">&gt;</span><span class="nx">Json</span> <span class="nx">local</span><span class="o">&lt;</span><span class="err">/h2&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;input-local&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#input-local&quot;</span><span class="p">).</span><span class="nx">tokenInput</span><span class="p">([</span>
</span><span class='line'>            <span class="p">{</span><span class="s2">&quot;id&quot;</span><span class="o">:</span><span class="s2">&quot;856&quot;</span><span class="p">,</span><span class="s2">&quot;name&quot;</span><span class="o">:</span><span class="s2">&quot;House&quot;</span><span class="p">},</span>
</span><span class='line'>            <span class="p">{</span><span class="s2">&quot;id&quot;</span><span class="o">:</span><span class="s2">&quot;1035&quot;</span><span class="p">,</span><span class="s2">&quot;name&quot;</span><span class="o">:</span><span class="s2">&quot;Desperate Housewives&quot;</span><span class="p">}</span>
</span><span class='line'>          <span class="p">],</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">theme</span><span class="o">:</span> <span class="s2">&quot;facebook&quot;</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">h2</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;theme&quot;</span><span class="o">&gt;</span><span class="nx">Json</span> <span class="nx">local</span> <span class="o">-</span> <span class="nx">no</span> <span class="nx">duplicates</span><span class="o">&lt;</span><span class="err">/h2&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;input-local-prevent-duplicates&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#input-local-prevent-duplicates&quot;</span><span class="p">).</span><span class="nx">tokenInput</span><span class="p">([</span>
</span><span class='line'>            <span class="p">{</span><span class="s2">&quot;id&quot;</span><span class="o">:</span><span class="s2">&quot;856&quot;</span><span class="p">,</span><span class="s2">&quot;name&quot;</span><span class="o">:</span><span class="s2">&quot;House&quot;</span><span class="p">},</span>
</span><span class='line'>            <span class="p">{</span><span class="s2">&quot;id&quot;</span><span class="o">:</span><span class="s2">&quot;1035&quot;</span><span class="p">,</span><span class="s2">&quot;name&quot;</span><span class="o">:</span><span class="s2">&quot;Desperate Housewives&quot;</span><span class="p">}</span>
</span><span class='line'>          <span class="p">],</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">theme</span><span class="o">:</span> <span class="s2">&quot;facebook&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">preventDuplicates</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">h2</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;theme&quot;</span><span class="o">&gt;</span><span class="nx">Json</span> <span class="nx">server</span><span class="o">&lt;</span><span class="err">/h2&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;input-server&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#input-server&quot;</span><span class="p">).</span><span class="nx">tokenInput</span><span class="p">(</span><span class="s2">&quot;http://shell.loopj.com/tokeninput/tvshows.php&quot;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">theme</span><span class="o">:</span> <span class="s2">&quot;facebook&quot;</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">h2</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;prevent-duplicates&quot;</span><span class="o">&gt;</span><span class="nx">Json</span> <span class="nx">server</span> <span class="o">-</span> <span class="nx">no</span> <span class="nx">duplicates</span><span class="o">&lt;</span><span class="err">/h2&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nx">id</span><span class="o">=</span><span class="s2">&quot;input-server-prevent-duplicates&quot;</span> <span class="o">/&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s2">&quot;#input-server-prevent-duplicates&quot;</span><span class="p">).</span><span class="nx">tokenInput</span><span class="p">(</span><span class="s2">&quot;http://shell.loopj.com/tokeninput/tvshows.php&quot;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">theme</span><span class="o">:</span> <span class="s2">&quot;facebook&quot;</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">preventDuplicates</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="err">/script&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="err">/div&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/body&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can download the <a href="https://github.com/Bunlong/tokeninput_jquery" target="_blank">source code</a> and try it out.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Autoload All Files in Lib Directory Ruby on Rails]]></title>
    <link href="http://geekhmer.github.io/blog/2014/04/24/autoload-all-files-in-lib-directory-ruby-on-rails/"/>
    <updated>2014-04-24T21:59:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/04/24/autoload-all-files-in-lib-directory-ruby-on-rails</id>
    <content type="html"><![CDATA[<p>
  In Ruby on Rails to create your own ruby library you have to create ruby library in /lib directory, so far so good to autoload all ruby library in /lib directory you have to add some code below in /config/application.rb.
</p>




<figure class='code'><figcaption><span>application.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">autoload_paths</span> <span class="o">+=</span> <span class="o">%</span><span class="nx">W</span><span class="p">(</span><span class="err">#</span><span class="p">{</span><span class="nx">config</span><span class="p">.</span><span class="nx">root</span><span class="p">}</span><span class="o">/</span><span class="nx">lib</span><span class="p">)</span>
</span><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">autoload_paths</span> <span class="o">+=</span> <span class="nx">Dir</span><span class="p">[</span><span class="s2">&quot;#{config.root}/lib/**/&quot;</span><span class="p">]</span>
</span><span class='line'><span class="nx">config</span><span class="p">.</span><span class="nx">autoload_paths</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot;#{config.root}/lib&quot;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Reduce duplication in database.yml configuration in Ruby on Rails Project]]></title>
    <link href="http://geekhmer.github.io/blog/2014/03/22/reduce-duplication-in-database-dot-yml-configuration-in-ruby-on-rails-project/"/>
    <updated>2014-03-22T00:03:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/03/22/reduce-duplication-in-database-dot-yml-configuration-in-ruby-on-rails-project</id>
    <content type="html"><![CDATA[<p>
  By default rails generate database.yml that have the same attributes in each environment. So to reduce duplication we use aliasing to essentially perform a hash merge on the fly in the code.<br/>
  So far so good please take a look the below code.<br/>
</p>




<p>
  <strong>Before refactor</strong><br/>
</p>




<figure class='code'><figcaption><span>database.yml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">development</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_development</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="nx">username</span><span class="o">:</span> <span class="nx">your_database_username</span>
</span><span class='line'>  <span class="nx">password</span><span class="o">:</span> <span class="nx">your_database_password</span>
</span><span class='line'>  <span class="nx">adapter</span><span class="o">:</span> <span class="nx">mysql2</span>
</span><span class='line'>  <span class="nx">encoding</span><span class="o">:</span> <span class="nx">utf8</span>
</span><span class='line'>  <span class="nx">collation</span><span class="o">:</span> <span class="nx">utf8_unicode_ci</span>
</span><span class='line'>
</span><span class='line'><span class="nx">test</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_test</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="nx">username</span><span class="o">:</span> <span class="nx">your_database_username</span>
</span><span class='line'>  <span class="nx">password</span><span class="o">:</span> <span class="nx">your_database_password</span>
</span><span class='line'>  <span class="nx">adapter</span><span class="o">:</span> <span class="nx">mysql2</span>
</span><span class='line'>  <span class="nx">encoding</span><span class="o">:</span> <span class="nx">utf8</span>
</span><span class='line'>  <span class="nx">collation</span><span class="o">:</span> <span class="nx">utf8_unicode_ci</span>
</span><span class='line'>
</span><span class='line'><span class="nx">staging</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_staging</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="nx">username</span><span class="o">:</span> <span class="nx">your_database_username</span>
</span><span class='line'>  <span class="nx">password</span><span class="o">:</span> <span class="nx">your_database_password</span>
</span><span class='line'>  <span class="nx">adapter</span><span class="o">:</span> <span class="nx">mysql2</span>
</span><span class='line'>  <span class="nx">encoding</span><span class="o">:</span> <span class="nx">utf8</span>
</span><span class='line'>  <span class="nx">collation</span><span class="o">:</span> <span class="nx">utf8_unicode_ci</span>
</span><span class='line'>
</span><span class='line'><span class="nx">production</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_production</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="nx">username</span><span class="o">:</span> <span class="nx">your_database_username</span>
</span><span class='line'>  <span class="nx">password</span><span class="o">:</span> <span class="nx">your_database_password</span>
</span><span class='line'>  <span class="nx">adapter</span><span class="o">:</span> <span class="nx">mysql2</span>
</span><span class='line'>  <span class="nx">encoding</span><span class="o">:</span> <span class="nx">utf8</span>
</span><span class='line'>  <span class="nx">collation</span><span class="o">:</span> <span class="nx">utf8_unicode_ci</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>After refactor</strong><br/>
</p>




<figure class='code'><figcaption><span>database.yml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">defaults</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">defaults</span>
</span><span class='line'>  <span class="nx">username</span><span class="o">:</span> <span class="nx">your_database_username</span>
</span><span class='line'>  <span class="nx">password</span><span class="o">:</span> <span class="nx">your_database_password</span>
</span><span class='line'>  <span class="nx">adapter</span><span class="o">:</span> <span class="nx">mysql2</span>
</span><span class='line'>  <span class="nx">encoding</span><span class="o">:</span> <span class="nx">utf8</span>
</span><span class='line'>  <span class="nx">collation</span><span class="o">:</span> <span class="nx">utf8_unicode_ci</span>
</span><span class='line'>
</span><span class='line'><span class="nx">development</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_development</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="o">&lt;&lt;:</span> <span class="o">*</span><span class="nx">defaults</span>
</span><span class='line'>
</span><span class='line'><span class="nx">test</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_test</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="o">&lt;&lt;:</span> <span class="o">*</span><span class="nx">defaults</span>
</span><span class='line'>
</span><span class='line'><span class="nx">staging</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_staging</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="o">&lt;&lt;:</span> <span class="o">*</span><span class="nx">defaults</span>
</span><span class='line'>
</span><span class='line'><span class="nx">production</span><span class="o">:</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="nx">blog_production</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="nx">localhost</span>
</span><span class='line'>  <span class="o">&lt;&lt;:</span> <span class="o">*</span><span class="nx">defaults</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RVM - Ruby Version Manager]]></title>
    <link href="http://geekhmer.github.io/blog/2014/03/17/rvm-ruby-version-manager/"/>
    <updated>2014-03-17T23:48:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/03/17/rvm-ruby-version-manager</id>
    <content type="html"><![CDATA[<p><img src="http://geekhmer.github.io/images/rvm.png" width="300" /></p>

<p>
  Ruby is a very popular programming language that has Ruby on Rails or RoR is a popular development framework that allows you to easily get your application up and running with minimal hassle.<br/>
</p>


<p>
  Developing applications often times requires that you emulate different environments. Different versions of Ruby may be necessary for different projects. With conventional installations, this would impede your ability to be flexible.<br/>
</p>


<p>
  Luckily, the Ruby Version Manager, known more widely as RVM, allows you to easily install multiple, contained versions of Ruby and easily switch between them.
</p>


<p><p>
  <strong>Installing RVM</strong><br/>
  Run a quick update to make sure that all of the packages we download to our VPS are up to date:<br/>
  <code>sudo apt-get update</code><br/><br/>
  If you do not have curl on your system, you can start by installing it:<br/>
  <code>sudo apt-get install curl</code><br/><br/>
  To install RVM:<br/>
  <code>bash -s stable &lt; &lt;(curl -s <a href="https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer">https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer</a>)</code><br/><br/>
  To inject RVM into your environment .bashrc add the bit of bash it mentions at the end of the installation:<br/>
  <code>echo &lsquo;[[ -s &ldquo;$HOME/.rvm/scripts/rvm&rdquo; ]] &amp;&amp; source &ldquo;$HOME/.rvm/scripts/rvm&rdquo;&rsquo; >> .bashrc</code>
</p>
<p>
  <strong>Installing Ruby</strong><br/>
  Letâ€™s go ahead and install Ruby MRI 1.9.3 (this is the default interpreter originally developed by Matz) first, and set that as our default interpreter. Afterwards, weâ€™ll install Ruby 1.8.7, use RVM to easily switch between these two Rubies.<br/>
  Intall ruby version 1.9.3:<br/>
  <code>rvm install 1.9.3</code><br/><br/>
  To verify it works:<br/>
  <code>ruby -v</code><br/><br/>
  To make ruby version 1.9.3 as default version:<br/>
  <code>rvm &mdash;default 1.9.3</code><br/><br/>
  Letâ€™s install ruby version 1.8.7:<br/>
  <code>rvm install 1.8.7</code><br/><br/>
  To switch ruby version:<br/>
  <code>rvm use 1.8.7</code> or <code>rvm 1.8.7</code>
</p>
<p>
  <strong>Installing Rails</strong><br/>
  To install the latest Rails:<br/>
  <code>gem install rails</code><br/>
</p>
<p>
  <strong>Gemsets</strong><br/>
  One common way to distribute code in Ruby is to use a format called gems. Gems can be installed to extend the capabilities of the core Ruby distribution, and there are often gems that are required to be installed to get certain programs to function correctly.<br/><br/>
  In keeping with RVM&rsquo;s mission of providing contained Ruby environments, it is also possible to install gems that are only associated with a single Ruby installation. RVM calls this functionality gemsets.<br/><br/>
  This means that you can have two different versions of the same gem, or you can make gems unaware of other gems on the system.<br/><br/>
  To see the available gemsets for the current Ruby:<br/>
  <code>rvm gemset list</code><br/><br/>
  If you have more than one Ruby version installed, you can see all of the gemsets:<br/>
  <code>rvm gemset list_all</code><br/><br/>
  By default, you should have two gemsets configured:<br/>
  &ndash; default: the gemset that is applied if no other gemset is specified.<br/>
  &ndash; global: this gemset is inherited by every other gemset that is used. This set generally does not need to be selected because it will be included automatically. You should install shared gems here.<br/>
</p>
<p>
  <strong>Creating Gemset for Rails Project</strong><br/>
  1. Create a Rails project:<br/>
  <code>rails new blog</code><br/><br/>
  2. Get in the project:<br/>
  <code>cd blog</code><br/><br/>
  3. Create gemset for the project:<br/>
  <code>rvm &mdash;rvmrc &mdash;create ruby_version@gemset_name</code><br/>
  <code>rvm &mdash;rvmrc &mdash;create 1.9.3@blog</code><br/><br/>
  4. Get out the project:<br/>
  <code>cd ..</code><br/><br/>
  5. Get in the project:<br/>
  <code>cd blog</code><br/><br/>
  6. To see the gemset that we have created and stand on:<br/>
  <code>rvm gemset list</code><br/><br/>
  So far so good whenever we cd into the project it will automatically switch to project&rsquo;s gemset.
</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby websocket and real-time app tutorial]]></title>
    <link href="http://geekhmer.github.io/blog/2014/02/04/ruby-websocket-and-real-time-app-tutorial/"/>
    <updated>2014-02-04T21:12:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/02/04/ruby-websocket-and-real-time-app-tutorial</id>
    <content type="html"><![CDATA[<p>
  In this post I would like to present a small tutorial, I hope it will serve as a good introduction to web-socket api.
</p>




<p>
  <strong>Websocket Server</strong><br/>
  In the part we focus on server part. In ruby we use eventmachine, em-websocket gem to install websocket server.<br/>
  To install eventmachine run <code>gem install eventmachine</code><br/>
  To install em-websocket run <code>gem install em-websocket</code><br/>
  Make a file server.rb and implement codes below:<br/>
</p>




<figure class='code'><figcaption><span>server.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;eventmachine&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;em-websocket&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="no">EventMachine</span><span class="o">.</span><span class="n">run</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">EventMachine</span><span class="p">:</span><span class="ss">:WebSocket</span><span class="o">.</span><span class="n">start</span><span class="p">(</span><span class="ss">:host</span> <span class="o">=&gt;</span> <span class="s2">&quot;0.0.0.0&quot;</span><span class="p">,</span> <span class="ss">:port</span> <span class="o">=&gt;</span> <span class="mi">8080</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">ws</span><span class="o">|</span>
</span><span class='line'>    <span class="n">ws</span><span class="o">.</span><span class="n">onopen</span> <span class="p">{</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;WebSocket connection open&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ws</span><span class="o">.</span><span class="n">onmessage</span> <span class="p">{</span> <span class="o">|</span><span class="n">msg</span><span class="o">|</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="n">msg</span>
</span><span class='line'>      <span class="n">ws</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ws</span><span class="o">.</span><span class="n">onclose</span> <span class="p">{</span>
</span><span class='line'>      <span class="nb">puts</span> <span class="s2">&quot;WebSocket connection closed&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  What the code does is creates a websocket-server which listens at localhost:8080. Callbacks have been provided for open and close events, so when a client creates a connection or a connection gets closed the associated callbacks print an appropriate message to the terminal. And callbacks have been provided for message event when a client send the message.<br/><br/>
  To run websocket server run <code>ruby sever.rb</code>
</p>




<p>
  <strong>Websocket Client</strong><br/>
  So far, so good. But the main purpose of a websocket server is to get the message from client and relay data to the client. How do we do that? Turns out that is pretty simple too.<br/>
  Make a file index.html and implement codes below:<br/>
</p>




<figure class='code'><figcaption><span>index.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>Websocket GeeKhmer<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">ws</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">ws</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">WebSocket</span><span class="p">(</span><span class="s2">&quot;ws://localhost:8080&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">ws</span><span class="p">.</span><span class="nx">onopen</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Connection is opened&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">ws</span><span class="p">.</span><span class="nx">onclose</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Connection is closed&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">ws</span><span class="p">.</span><span class="nx">onmessage</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">msg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">send</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">ws</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;txt&quot;</span><span class="p">).</span><span class="nx">value</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body</span> <span class="na">onload=</span><span class="s">&quot;init();&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h2&gt;</span>WebSocket GeeKhmer<span class="nt">&lt;/h2&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">id=</span><span class="s">&quot;txt&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">onclick=</span><span class="s">&quot;send();&quot;</span> <span class="na">value=</span><span class="s">&quot;Send&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">&quot;display&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Feel free to provide your suggestions and to point out errors.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Top Three Front-End MVC Framework]]></title>
    <link href="http://geekhmer.github.io/blog/2014/02/01/top-three-front-end-mvc-framework/"/>
    <updated>2014-02-01T21:00:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/02/01/top-three-front-end-mvc-framework</id>
    <content type="html"><![CDATA[<p>
  As more and more logic are executed in the browser, JavaScript front-end codebases grow larger and more difficult to maintain. As a way to solve this issue developers have been turning to MVC frameworks which maked productivity and maintainable code. 
</p>




<p>
JavaScript MVC Frameworks are a big topic nowadays that we use JS to bind data, send it back between server and client and actually implement lots of logic, so we want to structure our code in the MVC or similar patterns. In this article I want to show the most front-end MVC framework:
</p>




<p>
  <strong>AngularJS</strong><br/>
  A toolset based on extending the HTML vocabulary for your application. Let try <a href="http://angularjs.org/" target="_blank">AngularJS</a><br/><br/>
  <img src="http://geekhmer.github.io/images/angularjs.png" />
</p>




<p>
  <strong>Ember</strong><br/>
  Provides template written in the Handlebars templating language, views, controllers, models and a router. Let try <a href="http://emberjs.com/" target="_blank">EmberJS</a><br/><br/>
  <img src="http://geekhmer.github.io/images/ember.png" />
</p>




<p>
  <strong>Backbone</strong><br/>
  Provides models with key-value binding and custom events, collections, and connects it all to your existing API over a RESTful JSON interface. Let try <a href="http://backbonejs.org/" target="_blank">Backbone</a><br/><br/>
  <img src="http://geekhmer.github.io/images/backbone.png" />
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is Websocket?]]></title>
    <link href="http://geekhmer.github.io/blog/2014/01/31/what-is-websocket/"/>
    <updated>2014-01-31T13:05:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/01/31/what-is-websocket</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/websocket_ajax_.gif" /><br/>
  WebSocket is a new standard for realtime communication for the Web & Mobile apps.
</p>




<p>
<strong>Websocket Benefit</strong><br/>
- Websocket enables the server to push data to the connected clients.<br/>
- Reduce unnecessary network traffic and latency using full-duplex through a single connection (instead of two).<br/>
- Streaming through proxies and firewalls, supporting simultaneously upstream and downstream communication.
- Backward compatible with the pre-WebSocket world by switching from an HTTP connection to WebSockets.
</p>




<p>
<strong>Apps that should use Websocket</strong><br/>
- Multi-User Apps.<br/>
- Real-Time Apps.<br/>
- Apps where live data is needed, like a stock market app&#8230;
</p>




<p>
<strong>Websocket Client</strong><br/>
On web, websocket support in browsers such as Google Chrome, Firefox, Opera.<br/>
On mobile, websocket support in iOS & Android.<br/>
Websocket client on Web use javascript for requesting to Websocket Server. Let try <a href="http://www.w3schools.com/html/html5_webworkers.asp" target="_blank">w3schools</a>, <a href="http://www.tutorialspoint.com/html5/html5_websocket.htm" target="_blank">tutorialspoint</a>
</p>




<p>
  <strong>Websocket Server</strong><br/>
  On Server, websocket support in Ruby, Java, Objective-C, PHP, .NET, node.js, ActionScript and many other languages. Let try <a href="https://github.com/igrigorik/em-websocket" target="_blank">Ruby</a>, <a href="https://github.com/Atmosphere/atmosphere" target="_blank">Java</a>, <a href="https://github.com/square/SocketRocket" target="_blank">Objective-C(iOS)</a>, <a href="https://github.com/hoaproject/Websocket" target="_blank">PHP</a>, <a href="http://xsockets.net/" target="_blank">.NET</a>, <a href="https://github.com/Worlize/WebSocket-Node" target="_blank">node.js</a>
</p>


<p>
<strong>Processing</strong><br/><br/>
<a class="fancybox" href="http://geekhmer.github.io/images/websocket_processing.png"><img src="http://geekhmer.github.io/images/websocket_processing.png" width="680" /></a><br/>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[assets_helper gem]]></title>
    <link href="http://geekhmer.github.io/blog/2013/12/19/assets-helper-gem/"/>
    <updated>2013-12-19T21:27:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/12/19/assets-helper-gem</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  <a href="http://rubygems.org/gems/assets_helper" target="_blank">assets_helper</a> is the gem that use to include css and javascript by controller name automatically, it mean that include only css and javascript file in the controller that you are running.
</p>




<p>
  <strong>Installation</strong><br/>
  Add this line to your application&#8217;s Gemfile:<br/>
  <code>gem 'assets_helper'</code>
</p>


<p>
  And then execute:<br/>
  <code>$ bundle</code>
</p>


<p>
  Or install it yourself as:<br/>
  <code>$ gem install assets_helper</code>
</p>




<p>
  <strong>Usage</strong><br/>
  1. Add <code>before_filter :include_css, :include_javascript</code> in application_controller.rb:<br/>
</p>




<figure class='code'><figcaption><span>application_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="ss">ActionController</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">protect_from_forgery</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">before_filter</span> <span class="ss">:include_css</span><span class="p">,</span> <span class="ss">:include_javascript</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  2. Add <code>= yield :asset</code> n your layout file (exp: application.html.haml):<br/>
</p>




<figure class='code'><figcaption><span>application.html.haml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">!!!</span>
</span><span class='line'><span class="o">%</span><span class="n">html</span>
</span><span class='line'>  <span class="o">%</span><span class="n">head</span>
</span><span class='line'>    <span class="o">%</span><span class="n">title</span> <span class="no">JongEat</span>
</span><span class='line'>    <span class="o">=</span> <span class="n">stylesheet_link_tag</span>    <span class="s2">&quot;application&quot;</span><span class="p">,</span> <span class="ss">:media</span> <span class="o">=&gt;</span> <span class="s2">&quot;all&quot;</span>
</span><span class='line'>    <span class="o">=</span> <span class="n">javascript_include_tag</span> <span class="s2">&quot;application&quot;</span>
</span><span class='line'>    <span class="o">=</span> <span class="k">yield</span> <span class="ss">:asset</span>
</span><span class='line'>    <span class="o">=</span> <span class="n">csrf_meta_tags</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  3. Example if you create a controller name homes:<br/>
  <code>$ rails generate controller homes</code>
</p>




<p>
  4. Go to app/assets/javascripts and create a folder name homes like your controller (homes) you create below. And input javascript file that you use for controller homes in this folder ( app/assets/javascripts/homes ), and no need to include in application.js file.<br/>
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/javascript_homes.png"><img src="http://geekhmer.github.io/images/javascript_homes.png" alt="" width="680" /></a>
</p>


<p>
  5. Go to app/assets/stylesheets and create a folder name homes like your controller(homes) you create below. And input css file that you use for controller homes in this folder(app/assets/stylesheets), and no need to include or import in application.css file.<br/>
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/css_homes.png"><img src="http://geekhmer.github.io/images/css_homes.png" width="680" /></a><br/>
</p>


<p>So whenever you run homes controller, it include only css and javascript file that you use for homes controller, and can make your project run fast.<br/></p>

<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/browser_homes_controller.png"><img src="http://geekhmer.github.io/images/browser_homes_controller.png" width="680" /></a><br/>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to set Facebook Page Tab content auto resize height?]]></title>
    <link href="http://geekhmer.github.io/blog/2013/12/17/how-to-set-facebook-page-tab-content-auto-resize-height/"/>
    <updated>2013-12-17T16:02:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/12/17/how-to-set-facebook-page-tab-content-auto-resize-height</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
The height of Facebook Page Tab is fixed at 800px, so to set Facebook Page Tab content auto resize height you must add code below at the bottom of body tag.<br/>
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/page_tab_not_yet_resize.png"><img src="http://geekhmer.github.io/images/page_tab_not_yet_resize.png" width="680" /></a><br/>
</p>




<figure class='code'><figcaption><span>code for auto resize height </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;fb-root&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;http://connect.facebook.net/de_DE/all.js1&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">window</span><span class="p">.</span><span class="nx">fbAsyncInit</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">FB</span><span class="p">.</span><span class="nx">init</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">appId</span> <span class="o">:</span> <span class="s1">&#39;APP_ID&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">cookie</span> <span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">window</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">FB</span><span class="p">.</span><span class="nx">Canvas</span><span class="p">.</span><span class="nx">setAutoGrow</span><span class="p">(</span><span class="mi">10</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Enjoy it
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/page_tab_resize_already.png"><img src="http://geekhmer.github.io/images/page_tab_resize_already.png" width="680" /></a><br/>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to develop Facebook Page Tab?]]></title>
    <link href="http://geekhmer.github.io/blog/2013/12/15/how-to-develop-facebook-page-tab/"/>
    <updated>2013-12-15T11:01:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/12/15/how-to-develop-facebook-page-tab</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  One of the most interesting features of Apps on facebook.com is the ability for your apps (Facebook Page Tab) to be used within the context of a Facebook Fan Pages.<br/>
</p>




<p>
  <strong>1. To create Facebook Page Tab go to the link <a href="https://developers.facebook.com/apps" target="_blank">https://developers.facebook.com/apps</a>.<br/></strong>
  Then click button Create New App.
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/create_new_app_button.png"><img src="http://geekhmer.github.io/images/create_new_app_button.png" width="680" /></a><br/>
</p>


<p>
  <strong>2. Create New App</strong><br/>
  Then enter App Name, App Namespace and choose Apps for Pages for App Category. And click button Continuce.
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/create_new_app_popup.png"><img src="http://geekhmer.github.io/images/create_new_app_popup.png" width="680" /></a><br/>
</p>


<p>
  <strong>3. Setting Basic</strong><br/>
  Then select Website with Facebook Login and Page Tab to fill the information.<br/>
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/app_basic_form.png"><img src="http://geekhmer.github.io/images/app_basic_form.png" width="680" /></a><br/>
</p>


<p>
  <strong>4. Fill the information</strong><br/>
  - With Website with Facebook Login, Enter your Site URL.<br/>
  - With Page Tab, Enter your Page Tab Name, Page Tab URL, Secure Page Tab URL, Page Tab Edit URL and Page Tab Image. And click on button Save Changes. 
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/setup_facebook_page_tab.png"><img src="http://geekhmer.github.io/images/setup_facebook_page_tab.png" width="680" /></a><br/>
</p>




<p>
  <strong>5. Adding an Facebook Page Tab to a Page</strong><br/>
  - As a Facebook Page Tab App developer, you can prompt users to install
  your Page Tab App by including an &#8220;Install this Page Tab
  App&#8221; link.<br/>
  - http://www.facebook.com/dialog/pagetab?app_id=APP_ID&next=URL<br/>
  - Where APP_ID and URL can be found in your app setting (<a href="https://developers.facebook.com/apps" target="_blank">https://developers.facebook.com/apps</a>).<br/>
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/add_page_tab.png"><img src="http://geekhmer.github.io/images/add_page_tab.png" width="680" /></a><br/>
</p>


<p>
  Then please go to your Facebook Fan Page, and click on your Page Tab.
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/sample_facebook_fan_page.png"><img src="http://geekhmer.github.io/images/sample_facebook_fan_page.png" width="680" /></a><br/>
</p>


<p>
  Enjoy it
</p>


<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/geekhmer_facebook_page_tab_content.png"><img src="http://geekhmer.github.io/images/geekhmer_facebook_page_tab_content.png" width="680" /></a><br/>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is Closure, Proc and Lambda?]]></title>
    <link href="http://geekhmer.github.io/blog/2013/12/08/what-is-closure/"/>
    <updated>2013-12-08T17:02:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/12/08/what-is-closure</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
<strong>1. Closure</strong><br/>
<strong>Closure</strong> is block of code/function/method that has two properties:<br/>
- It can be passed around like an object (to be called later).<br/>
- It remembers the values of all the variables that were in scope when the function was created, then it is able to access those variables when it is called.<br/><br/>
<strong>Proc & Lambda</strong> are closure.
</p>




<p>
<strong>2. Proc (Procedure)</strong><br/>
Proc is a closure and an object that can be bound to a variable and reused.
</p>




<figure class='code'><figcaption><span>default proc </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;Hello Rubyist&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">call</span> <span class="c1"># prints Hello Rubyist</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>proc with parameter </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;x: </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2">, y: </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="c1"># prints x: 1, y: 2</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>proc as closure </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">proc_maker</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span>
</span><span class='line'>  <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="n">a</span> <span class="o">+</span> <span class="n">arg</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="n">proc_maker</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="nb">p</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">25</span><span class="p">)</span> <span class="c1"># return =&gt; 35</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>proc as closure </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">to_do</span><span class="p">(</span><span class="nb">p</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">p</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;proc&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">to_do</span><span class="p">(</span><span class="nb">p</span><span class="p">)</span> <span class="c1"># prints proc</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>proc as closure </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">to_do</span><span class="p">(</span><span class="n">proc1</span><span class="p">,</span> <span class="n">proc2</span><span class="p">)</span>
</span><span class='line'>  <span class="n">proc1</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>  <span class="n">proc2</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;first proc&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;second proc&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">to_do</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># prints</span>
</span><span class='line'><span class="c1"># first proc</span>
</span><span class='line'><span class="c1"># second proc</span>
</span></code></pre></td></tr></table></div></figure>




<p>
<strong>3. Lambda</strong><br/>
Lambdas are a more strict form of Proc, something like:<br/>
- Lambda are more strict with regard to argument checking.<br/>
- Lambdas can return a value with the return keyword.
</p>




<figure class='code'><figcaption><span>default lambda </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;Hello Rubyist&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">l</span><span class="o">.</span><span class="n">call</span> <span class="c1"># prints &quot;Hello Rubyist&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>lambda with parameter </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;x: </span><span class="si">#{</span><span class="n">a</span><span class="si">}</span><span class="s2">, y: </span><span class="si">#{</span><span class="n">b</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">l</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="c1"># prints x: 1, y: 2</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>lambda as closure </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">lambda_maker</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="n">a</span> <span class="o">+</span> <span class="n">arg</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="n">lambda_maker</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="n">l</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">25</span><span class="p">)</span> <span class="c1"># return 35</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>lambda as closure </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">to_do</span><span class="p">(</span><span class="n">l</span><span class="p">)</span>
</span><span class='line'>  <span class="n">l</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">l</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;lambda&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">to_do</span><span class="p">(</span><span class="n">l</span><span class="p">)</span> <span class="c1"># prints lambda</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>lambda as closure </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">to_do</span><span class="p">(</span><span class="n">lambda1</span><span class="p">,</span> <span class="n">lambda2</span><span class="p">)</span>
</span><span class='line'>  <span class="n">lambda1</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'>  <span class="n">lambda2</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;first proc&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;second proc&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">to_do</span><span class="p">(</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># prints</span>
</span><span class='line'><span class="c1"># first proc</span>
</span><span class='line'><span class="c1"># second proc</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is Block?]]></title>
    <link href="http://geekhmer.github.io/blog/2013/12/08/what-is-block/"/>
    <updated>2013-12-08T10:29:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/12/08/what-is-block</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  A block is just a bit of code that can be executed. 
</p>




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">].</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">num</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">num</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># print</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="c1"># 2</span>
</span><span class='line'><span class="c1"># 3</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">num</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">num</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># print</span>
</span><span class='line'><span class="c1"># 1</span>
</span><span class='line'><span class="c1"># 2</span>
</span><span class='line'><span class="c1"># 3</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  A block is a piece of code that is declared but not run in the place it&#8217;s written. 
  The idea is to run when to call it.
</p>




<figure class='code'><figcaption><span>default block using yield </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">to_do</span>
</span><span class='line'>  <span class="k">yield</span>
</span><span class='line'>  <span class="k">yield</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">to_do</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;hello&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># print</span>
</span><span class='line'><span class="c1"># hello</span>
</span><span class='line'><span class="c1"># hello</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>block with parameter using yield </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">to_do</span>
</span><span class='line'>  <span class="k">yield</span> <span class="s2">&quot;bunlong&quot;</span>
</span><span class='line'>  <span class="k">yield</span> <span class="s2">&quot;sky&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">to_do</span> <span class="k">do</span> <span class="o">|</span><span class="nb">name</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># print</span>
</span><span class='line'><span class="c1"># hello, bunlong</span>
</span><span class='line'><span class="c1"># hello, sky</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>default block using call </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">method_name</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>  <span class="n">block</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">method_name</span> <span class="p">{</span> <span class="nb">puts</span> <span class="s2">&quot;hello&quot;</span> <span class="p">}</span> <span class="c1"># prints hello</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>block with parameter using call </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">eat</span><span class="p">(</span><span class="n">meal</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">consume</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="nb">block_given?</span>
</span><span class='line'>    <span class="n">meal</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span><span class="o">|</span><span class="n">good</span><span class="o">|</span> <span class="n">consume</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="n">good</span><span class="p">)}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">puts</span> <span class="n">eat</span><span class="p">(</span><span class="o">[</span><span class="s1">&#39;cheese&#39;</span><span class="p">,</span> <span class="s1">&#39;steak&#39;</span><span class="p">,</span> <span class="s1">&#39;wine&#39;</span><span class="o">]</span><span class="p">)</span> <span class="p">{</span><span class="o">|</span><span class="n">food</span><span class="o">|</span> <span class="nb">puts</span> <span class="s1">&#39;Hmm, #{food}&#39;</span><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># prints</span>
</span><span class='line'><span class="c1"># Hmm, cheese</span>
</span><span class='line'><span class="c1"># Hmm, steak</span>
</span><span class='line'><span class="c1"># Hmm, wine</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AbstractClass]]></title>
    <link href="http://geekhmer.github.io/blog/2013/12/07/abstractclass/"/>
    <updated>2013-12-07T22:31:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/12/07/abstractclass</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">AbstractKlass</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method_name</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">hello</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">ConcreteKlass</span> <span class="o">&lt;</span> <span class="no">AbstractKlass</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span><span class="p">;</span> <span class="s2">&quot;Hello&quot;</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">name</span><span class="p">;</span> <span class="s2">&quot;Rubyist&quot;</span><span class="p">;</span> <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># def hello</span>
</span><span class='line'>  <span class="c1">#   &quot;Hello&quot;</span>
</span><span class='line'>  <span class="c1"># end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># def name</span>
</span><span class='line'>  <span class="c1">#   &quot;Rubyist&quot;</span>
</span><span class='line'>  <span class="c1"># end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">ConcreteKlass</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">method_name</span> <span class="c1"># =&gt; &quot;Hello Rubyist&quot;  </span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[method_missing]]></title>
    <link href="http://geekhmer.github.io/blog/2013/11/30/method-missing/"/>
    <updated>2013-11-30T11:15:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/11/30/method-missing</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  method_missing use for creating dynamic methods.
</p>


<p>
  <strong>example</strong><br/>
</p>




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Klass</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">method_name</span><span class="o">.</span><span class="n">to_s</span> <span class="o">=~</span> <span class="sr">/^find_by_(.+)$/</span>
</span><span class='line'>      <span class="n">run_find_by_method</span><span class="p">(</span><span class="vg">$1</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">super</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">run_find_by_method</span><span class="p">(</span><span class="n">attrs</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>    <span class="n">attrs</span> <span class="o">=</span> <span class="n">attrs</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;_and_&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">attrs_with_args</span> <span class="o">=</span> <span class="o">[</span><span class="n">attrs</span><span class="p">,</span> <span class="n">args</span><span class="o">].</span><span class="n">transpose</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">conditions</span> <span class="o">=</span> <span class="no">Hash</span><span class="o">[</span><span class="n">attrs_with_args</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">str</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>    <span class="n">conditions</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">key</span><span class="p">,</span> <span class="n">value</span><span class="o">|</span>
</span><span class='line'>      <span class="n">str</span> <span class="o">+=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">key</span><span class="si">}</span><span class="s2"> = &#39;</span><span class="si">#{</span><span class="n">value</span><span class="si">}</span><span class="s2">&#39; and &quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">p</span> <span class="s2">&quot;select * from tbl where </span><span class="si">#{</span><span class="n">str</span><span class="o">[</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">6</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">k</span> <span class="o">=</span> <span class="no">Klass</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">k</span><span class="o">.</span><span class="n">find_by_name</span><span class="p">(</span><span class="s2">&quot;Bunlong&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">k</span><span class="o">.</span><span class="n">find_by_name_and_email</span><span class="p">(</span><span class="s2">&quot;Bunlong&quot;</span><span class="p">,</span> <span class="s2">&quot;bunlong.van@gmail.com&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[include_vs_extend]]></title>
    <link href="http://geekhmer.github.io/blog/2013/11/30/include-vs-extend/"/>
    <updated>2013-11-30T10:56:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/11/30/include-vs-extend</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  <strong>include</strong><br/>
  include use for adding methods to an instance of a class.
</p>




<p>
  <strong>example</strong><br/>
</p>




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s1">&#39;Hi foo&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Bar</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">bar</span> <span class="o">=</span> <span class="no">Bar</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">bar</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># =&gt; Hi foo</span>
</span><span class='line'>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># =&gt; NoMethodError: undefined method â€˜fooâ€™ for Bar:Class</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>extend</strong><br/>
  extend use for adding class methods.
</p>




<p>
  <strong>example</strong><br/>
</p>




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s1">&#39;Hi foo&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Baz</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># =&gt; Hi foo</span>
</span><span class='line'>
</span><span class='line'><span class="n">bar</span> <span class="o">=</span> <span class="no">Bar</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">bar</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># =&gt; NoMethodError: undefined method â€˜fooâ€™ for #&lt;Baz:0x1e708&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Using include to append both class and instance methods</strong><br/>
  You will see in Ruby is to use include to append both class and instance methods.<br/>
  The reason for this is that include has a self.included hook you can use to modify 
  the class that is including a module.
</p>




<p>
  <strong>example</strong><br/>
</p>




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Foo</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">included</span><span class="p">(</span><span class="n">base</span><span class="p">)</span>
</span><span class='line'>    <span class="n">base</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="no">ClassMethods</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">module</span> <span class="nn">ClassMethods</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">bar</span>
</span><span class='line'>      <span class="nb">p</span> <span class="s1">&#39;class method&#39;</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s1">&#39;instance method&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Bar</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Foo</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">bar</span> <span class="c1"># =&gt; class method</span>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># =&gt; NoMethodError: undefined method â€˜fooâ€™ for Baz:Class</span>
</span><span class='line'>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">foo</span> <span class="c1"># =&gt; instance method</span>
</span><span class='line'><span class="no">Bar</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">bar</span> <span class="c1"># =&gt; NoMethodError: undefined method â€˜barâ€™ for #&lt;Baz:0x1e3d4&gt;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[define_singleton_method]]></title>
    <link href="http://geekhmer.github.io/blog/2013/11/30/define-singleton-method/"/>
    <updated>2013-11-30T09:16:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/11/30/define-singleton-method</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  define_singleton_method use to define singleton method.
</p>




<p>
  <strong>example</strong><br/>
</p>




<figure class='code'><figcaption><span>example </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Sayer</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">shouts</span><span class="p">(</span><span class="o">*</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>    <span class="n">words</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">word</span><span class="o">|</span>
</span><span class='line'>      <span class="n">define_singleton_method</span> <span class="s2">&quot;shout_</span><span class="si">#{</span><span class="n">word</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class='line'>        <span class="nb">p</span> <span class="n">word</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">shouts</span> <span class="ss">:hello</span><span class="p">,</span> <span class="ss">:goodbye</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">Sayer</span><span class="o">.</span><span class="n">shout_hello</span>
</span><span class='line'><span class="no">Sayer</span><span class="o">.</span><span class="n">shout_goodbye</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dynamic Grid Layout with Masonry]]></title>
    <link href="http://geekhmer.github.io/blog/2013/10/21/dynamic-grid-layout-with-masonry/"/>
    <updated>2013-10-21T00:35:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/10/21/dynamic-grid-layout-with-masonry</id>
    <content type="html"><![CDATA[<!-- **Content start here** -->


<p>
  <strong>What is Masonry?</strong><br/>
  Masonry is a JavaScript grid layout library. It works by placing elements in optimal position based on available vertical space.
</p>


<p>
  <strong>Add JQuery & Masonry script</strong><br/>
  Add JQuery and Masonry script in head tag.
</p>




<figure class='code'><figcaption><span>Add JQuery & Masonary script </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;jquery-1.9.1.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;masonry.pkgd.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Create Item</strong><br/>
  All items are wrapped in a container.
</p>




<figure class='code'><figcaption><span>Create Item </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>Item1<span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>Item2<span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>Item3<span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Create Item CSS style</strong><br/>
  Item style should be floated.
</p>




<figure class='code'><figcaption><span>Create Item CSS style </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>.box-item {
</span><span class='line'>  width: 220px;
</span><span class='line'>  height: 220px;
</span><span class='line'>  margin: 10px;
</span><span class='line'>  float: left;
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Run Masonry</strong><br/>
  The script to run Masonry.
</p>




<figure class='code'><figcaption><span>Masongry script </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>$(function(){
</span><span class='line'>  $(&#39;#container&#39;).masonry({
</span><span class='line'>    itemSelector: &#39;.box-item&#39;
</span><span class='line'>  });
</span><span class='line'>});
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Full Code</strong><br/>
</p>




<figure class='code'><figcaption><span>Full Code </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!doctype html&gt;</span>
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">&quot;utf-8&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nc">.box-item</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">width</span><span class="o">:</span> <span class="m">220px</span><span class="p">;</span>
</span><span class='line'>      <span class="k">padding</span><span class="o">:</span> <span class="m">10px</span><span class="p">;</span>
</span><span class='line'>      <span class="k">margin</span><span class="o">:</span> <span class="m">5px</span><span class="p">;</span>
</span><span class='line'>      <span class="k">float</span><span class="o">:</span> <span class="k">left</span><span class="p">;</span>
</span><span class='line'>      <span class="k">border</span><span class="o">:</span> <span class="m">1px</span> <span class="k">solid</span> <span class="m">#CCC</span><span class="p">;</span>
</span><span class='line'>      <span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">4px</span><span class="p">;</span>
</span><span class='line'>      <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">4px</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="nt">&lt;/style&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;jquery-1.9.1.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span> <span class="na">src=</span><span class="s">&quot;masonry.pkgd.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#container&#39;</span><span class="p">).</span><span class="nx">masonry</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">itemSelector</span><span class="o">:</span> <span class="s1">&#39;.box-item&#39;</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>  <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;container&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec odio. Quisque volutpat mattis eros. Nullam malesuada erat ut turpis. Suspendisse urna nibh, viverra non, semper suscipit, posuere a, pede.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis.
</span><span class='line'>      Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Sit amet mi ullamcorper vehicula Ut convallis, sem sit amet interdum consectetuer, odio augue aliquam leo, nec dapibus tortor nibh sed augue. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      usce accumsan mollis eros. Pellentesque a diam sit amet mi ullamcorper vehicula
</span><span class='line'>      Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Ut convallis, sem sit amet interdum consectetuer, odio augue aliquam leo, nec dapibus tortor nibh sed augue.
</span><span class='line'>      Ut condimentum mi vel tellus. Suspendisse laoreet. Fusce ut est sed dolor gravida convallis. Morbi vitae ante. Vivamus ultrices luctus nunc. Suspendisse et dolor. Etiam dignissim. Proin malesuada adipiscing lacus. Donec metus. Curabitur gravida.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Ut condimentum mi vel tellus. Suspendisse laoreet. Fusce ut est sed dolor gravida convallis. Morbi vitae ante. Vivamus ultrices luctus nunc. Suspendisse et dolor.
</span><span class='line'>      Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Donec odio. Quisque volutpat mattis eros. Nullam malesuada erat ut turpis. Suspendisse urna nibh, viverra non, semper suscipit, posuere a, pede.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Morbi purus libero, faucibus adipiscing, commodo quis, gravida id, est. Sed lectus. Praesent elementum hendrerit tortor. Sed semper lorem at felis.
</span><span class='line'>      Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Sit amet mi ullamcorper vehicula Ut convallis, sem sit amet interdum consectetuer, odio augue aliquam leo, nec dapibus tortor nibh sed augue. Sed vel lacus. Mauris nibh felis, adipiscing varius, adipiscing in, lacinia vel, tellus. Suspendisse ac urna. Etiam pellentesque mauris ut lectus. Nunc tellus ante, mattis eget, gravida vitae, ultricies ac, leo. Integer leo pede, ornare a, lacinia eu, vulputate vel, nisl.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      usce accumsan mollis eros. Pellentesque a diam sit amet mi ullamcorper vehicula
</span><span class='line'>      Morbi interdum mollis sapien. Sed ac risus. Phasellus lacinia, magna a ullamcorper laoreet, lectus arcu pulvinar risus, vitae facilisis libero dolor a purus.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Ut convallis, sem sit amet interdum consectetuer, odio augue aliquam leo, nec dapibus tortor nibh sed augue.
</span><span class='line'>      Ut condimentum mi vel tellus. Suspendisse laoreet. Fusce ut est sed dolor gravida convallis. Morbi vitae ante. Vivamus ultrices luctus nunc. Suspendisse et dolor. Etiam dignissim. Proin malesuada adipiscing lacus. Donec metus. Curabitur gravida.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>    <span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&quot;box-item&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      Ut condimentum mi vel tellus. Suspendisse laoreet. Fusce ut est sed dolor gravida convallis. Morbi vitae ante. Vivamus ultrices luctus nunc. Suspendisse et dolor.
</span><span class='line'>      Phasellus pede arcu, dapibus eu, fermentum et, dapibus sed, urna.
</span><span class='line'>    <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/div&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You can download the <a href="https://github.com/Bunlong/masonry" target="_blank">source code</a> and try it out.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Acceptance/Feature test, Integration test, Unit test, Smoke test, Regression test]]></title>
    <link href="http://geekhmer.github.io/blog/2013/10/14/acceptance-slash-feature-test-integration-test-unit-test-smoke-test-regression-test/"/>
    <updated>2013-10-14T21:12:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/10/14/acceptance-slash-feature-test-integration-test-unit-test-smoke-test-regression-test</id>
    <content type="html"><![CDATA[<p>
  <strong>1. What is Acceptance/Feature test?</strong><br/>
  Is the testing use to test the customer&#8217;s specific scenarios when a user story has been correctly implemented. A story can have one or many acceptance tests, whatever it takes to ensure the functionality works.
</p>


<p>
  <strong>2. What is Integration test?</strong><br/>
  Is the testing use to expose defects in the interfaces and interaction between integrated components (modules).
</p>


<p>
  <strong>3. What is Unit test?</strong><br/>
   Also known as component testing, refers to tests that verify the functionality of a specific section of code, usually at the function level. In an object-oriented environment, this is usually at the class level.
   These types of tests is used to ensure that the specific function is working as expected. One function might have multiple tests.
</p>


<p>
  <strong>4. What is Smoke test?</strong><br/>
  Is the quick testing to make sure everything looks okay before you get involved in the more testing.
</p>


<p>
  <strong>5. What is Regression test?</strong><br/>
  Is the testing to make sure you haven&#8217;t broken anything. Everything that used to work should still work.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Test and Behaviour Driven Development (TDD/BDD)]]></title>
    <link href="http://geekhmer.github.io/blog/2013/10/12/test-and-behaviour-driven-development-tdd-slash-bdd/"/>
    <updated>2013-10-12T00:36:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2013/10/12/test-and-behaviour-driven-development-tdd-slash-bdd</id>
    <content type="html"><![CDATA[<p>
  <strong>1. What is TDD/BDD?</strong><br/>
  Express expected behaviour before writing code.
</p>


<p>
  <strong>2. Why is TDD/BDD a good thing?</strong><br/>
  - Enjoy more efficient and predictable course of development.<br/>
  - Find and fix bugs faster.<br/>
  - Prevent bugs from reappearing.<br/>
  - Improve the design of our software.<br/>
  - Reliable document.
</p>


<p>
  <strong>3. How do we do TDD/BDD?</strong><br/>
  - Write test programs.<br/>
  - Run the tests automatically.<br/>
</p>


<p>
  <strong>Workflow/Processing</strong><br/>
</p>


<p> 
  TDD<br/>
  <a class="fancybox" href="http://geekhmer.github.io/images/tdd.png"><img src="http://geekhmer.github.io/images/tdd.png" /></a><br/>
</p>


<p>
  BDD<br/>
  <a class="fancybox" href="http://geekhmer.github.io/images/tdd.png"><img src="http://geekhmer.github.io/images/bdd.png" /></a>
</p>

]]></content>
  </entry>
  
</feed>
