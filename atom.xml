<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2016-09-23T10:33:08+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gulp – Concat: Combining multiple files into one]]></title>
    <link href="http://geekhmer.github.io/blog/2016/09/13/gulp-concat-combining-multiple-files-into-one/"/>
    <updated>2016-09-13T09:35:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/09/13/gulp-concat-combining-multiple-files-into-one</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/gulp.jpg" width="600" alt="Gulp, Gulp – Concat: Combining multiple files into one" />
</p>




<p>
  Printing Hello and moving files is rather boring. Let’s do something productive.
</p>




<p>
  When we create websites, we are always trying to deliver the best experience possible.
  This includes having our webpages displaying fast. Back in the day, this meant having
  all our styles in one css file.
</p>




<p>
  While this made our webpages load faster, it made maintaining the css file a night-mare!
</p>




<p>
  These days we can use multiple css files for better organization and then concat (meaning merge or combine) the files together into one large file.
</p>




<p>
  We left our project looking like:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/build</span>
</span><span class='line'><span class="sr">  /s</span><span class="n">tyles</span>
</span><span class='line'>    <span class="n">some_styles</span><span class="o">.</span><span class="n">css</span>
</span><span class='line'>    <span class="n">more_styles</span><span class="o">.</span><span class="n">css</span>
</span><span class='line'><span class="sr">/node_modules</span>
</span><span class='line'><span class="sr">/</span><span class="n">contents</span>
</span><span class='line'>  <span class="sr">/styles</span>
</span><span class='line'><span class="sr">    some_styles.css</span>
</span><span class='line'><span class="sr">    more_styles.css</span>
</span><span class='line'><span class="sr">gulpfile.js</span>
</span><span class='line'><span class="sr">package.json</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Right now, we have two separate css files in our build/styles folder. We are going to use a gulp plugin to concat all our css files in the styles folder.
</p>




<p>
  Gulp contains some basic tasks, but the power of gulp is the customization you can bring into your build process by using plugins.
</p>




<p>
  For a list of all the gulp plugins available, go to <a href="http://gulpjs.com/plugins/" target="_blank">http://gulpjs.com/plugins/</a>
</p>




<p>
  To concat the files together, we will need to install one of these plugins.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="n">install</span> <span class="n">gulp</span><span class="o">-</span><span class="n">concat</span> <span class="o">--</span><span class="n">save</span><span class="o">-</span><span class="n">dev</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  We can then update our default gulp task to concat the files.
</p>




<figure class='code'><figcaption><span>gulpfile.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">var</span> <span class="n">gulp</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="s1">&#39;gulp&#39;</span><span class="p">);</span>
</span><span class='line'><span class="n">var</span> <span class="n">concat</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="s1">&#39;gulp-concat&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">gulp</span><span class="o">.</span><span class="n">task</span><span class="p">(</span><span class="s1">&#39;default&#39;</span><span class="p">,</span> <span class="o">[]</span><span class="p">,</span> <span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">console</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="s2">&quot;Concating and moving all the css files in styles folder&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">gulp</span><span class="o">.</span><span class="n">src</span><span class="p">(</span><span class="s2">&quot;contents/styles/**.css&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="o">.</span><span class="n">pipe</span><span class="p">(</span><span class="n">concat</span><span class="p">(</span><span class="s1">&#39;main.css&#39;</span><span class="p">))</span>
</span><span class='line'>    <span class="o">.</span><span class="n">pipe</span><span class="p">(</span><span class="n">gulp</span><span class="o">.</span><span class="n">dest</span><span class="p">(</span><span class="s1">&#39;build/styles&#39;</span><span class="p">));</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Couple of things have changed, can you spot them? First, we had to reference the gulp plugin with:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">var</span> <span class="n">concat</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="s1">&#39;gulp-concat&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  We chose to label this <code>concat</code>. Obviously we could call it anything we want, but concat communicates what the plugin does to those reading our build script.
</p>




<p>
  Second, we added another step to our task. In between the <code>src</code> and the <code>pipe(gulp.dest...)</code> steps, we added <code>pipe(concat(...))</code>.
</p>




<p>
  Gulp works by streaming files from one process to another. This allows us to create complex build tasks out of small, simple steps. Composition == winning.
</p>




<p>
  Now run our gulp task:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">gulp</span>
</span><span class='line'><span class="no">Using</span> <span class="n">gulpfile</span> <span class="o">~</span><span class="sr">/YOUR_DIRECTORY/</span><span class="n">gulpfile</span><span class="o">.</span><span class="n">js</span>
</span><span class='line'><span class="no">Starting</span> <span class="s1">&#39;default&#39;</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="no">Moving</span> <span class="n">all</span> <span class="n">the</span> <span class="n">css</span> <span class="n">files</span> <span class="k">in</span> <span class="n">styles</span> <span class="n">folder</span>
</span><span class='line'><span class="no">Finished</span> <span class="s1">&#39;default&#39;</span> <span class="n">after</span> <span class="mi">6</span><span class="o">.</span><span class="mi">09</span> <span class="n">ms</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Our task will read all the css files in the <code>styles</code> folder, combine them into one <code>main.css</code> file, and then place that file in the <code>build/styles</code> folder.
</p>




<p>
  Our project should now look like:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/build</span>
</span><span class='line'><span class="sr">  /s</span><span class="n">tyles</span>
</span><span class='line'>    <span class="n">main</span><span class="o">.</span><span class="n">css</span>
</span><span class='line'>    <span class="n">more_styles</span><span class="o">.</span><span class="n">css</span>
</span><span class='line'>    <span class="n">some_styles</span><span class="o">.</span><span class="n">css</span>
</span><span class='line'><span class="sr">/node_modules</span>
</span><span class='line'><span class="sr">/s</span><span class="n">tyles</span>
</span><span class='line'>  <span class="n">more_styles</span><span class="o">.</span><span class="n">css</span>
</span><span class='line'>  <span class="n">some_styles</span><span class="o">.</span><span class="n">css</span>
</span><span class='line'><span class="n">gulpfile</span><span class="o">.</span><span class="n">js</span>
</span><span class='line'><span class="n">package</span><span class="o">.</span><span class="n">json</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Notice the more_styles.css and some_styles.css files are still in our build folder. :(
</p>




<p>
  We don’t want those chumps there anymore. In the next chapter we will learn how to
  get rid of those files.
</p>




<p>
  So far so good, That’s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gulp – Moving Files]]></title>
    <link href="http://geekhmer.github.io/blog/2016/08/28/gulp-moving-files/"/>
    <updated>2016-08-28T18:35:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/08/28/gulp-moving-files</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/gulp.jpg" width="600" alt="Gulp – Moving Files" />
</p>




<p>
  The first thing we will learn to do with gulp is to move files.
</p>




<p>
  Let’s create simple styles files some_styles.css and more_styles.css.
</p>




<figure class='code'><figcaption><span>/contents/styles/some_styles.css </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h1</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">color</span><span class="p">:</span> <span class="n">red</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>/contents/styles/more_styles.css </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">font</span><span class="o">-</span><span class="ss">size</span><span class="p">:</span> <span class="mi">30</span><span class="n">px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Our project structure should now look like:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/node_modules</span>
</span><span class='line'><span class="sr">/</span><span class="n">contents</span>
</span><span class='line'>  <span class="sr">/styles</span>
</span><span class='line'><span class="sr">    more_styles.css</span>
</span><span class='line'><span class="sr">    some_styles.css</span>
</span><span class='line'><span class="sr">gulpfile.js</span>
</span><span class='line'><span class="sr">package.json</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Update our <code>gulpfile.js</code> from the previous section and instruct gulp to move all the files found in the styles folder to our <code>build/styles</code> folder.
</p>




<figure class='code'><figcaption><span>gulpfile.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">var</span> <span class="n">gulp</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="s1">&#39;gulp&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">gulp</span><span class="o">.</span><span class="n">task</span><span class="p">(</span><span class="s1">&#39;default&#39;</span><span class="p">,</span> <span class="o">[]</span><span class="p">,</span> <span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">console</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="s2">&quot;Moving all files in styles folder&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="n">gulp</span><span class="o">.</span><span class="n">src</span><span class="p">(</span><span class="s2">&quot;contents/styles/**.*&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="o">.</span><span class="n">pipe</span><span class="p">(</span><span class="n">gulp</span><span class="o">.</span><span class="n">dest</span><span class="p">(</span><span class="s1">&#39;build/styles&#39;</span><span class="p">));</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Well, What do we expect will happen when we run gulp? If you guessed the files will be copied and moved to the <code>build/styles</code> folder, then give yourself a cookie.
</p>




<p>
  When we run gulp , we should see:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">gulp</span>
</span><span class='line'>
</span><span class='line'><span class="no">Using</span> <span class="n">gulpfile</span> <span class="o">~</span><span class="sr">/YOUR_DIRECTORY/</span><span class="n">gulpfile</span><span class="o">.</span><span class="n">js</span>
</span><span class='line'><span class="no">Starting</span> <span class="s1">&#39;default&#39;</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="no">Moving</span> <span class="n">all</span> <span class="n">files</span> <span class="k">in</span> <span class="n">styles</span> <span class="n">folder</span>
</span><span class='line'><span class="no">Finished</span> <span class="s1">&#39;default&#39;</span> <span class="n">after</span> <span class="mi">7</span><span class="o">.</span><span class="mi">27</span> <span class="n">ms</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Our project should now look like:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/build</span>
</span><span class='line'><span class="sr">  /s</span><span class="n">tyles</span>
</span><span class='line'>    <span class="n">some_styles</span><span class="o">.</span><span class="n">css</span>
</span><span class='line'>    <span class="n">more_styles</span><span class="o">.</span><span class="n">css</span>
</span><span class='line'><span class="sr">/node_modules</span>
</span><span class='line'><span class="sr">/</span><span class="n">contents</span>
</span><span class='line'>  <span class="sr">/styles</span>
</span><span class='line'><span class="sr">    some_styles.css</span>
</span><span class='line'><span class="sr">    more_styles.css</span>
</span><span class='line'><span class="sr">gulpfile.js</span>
</span><span class='line'><span class="sr">package.json</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, That’s it!!! See ya!!! :)
</p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gulp – Hello World]]></title>
    <link href="http://geekhmer.github.io/blog/2016/08/28/gulp-hello-world/"/>
    <updated>2016-08-28T17:54:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/08/28/gulp-hello-world</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/gulp.jpg" width="600" alt="Gulp – Hello World" />
</p>




<p>
  Let’s start a new node project in our folder and add a package.json by using command below:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="n">init</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Time to install gulp using npm. First globally to access the gulp command and then locally for our package.json .
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="n">install</span> <span class="n">gulp</span> <span class="o">-</span><span class="n">g</span>
</span><span class='line'><span class="n">npm</span> <span class="n">install</span> <span class="n">gulp</span> <span class="o">--</span><span class="n">save</span><span class="o">-</span><span class="n">dev</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  By default gulp looks for a <code>gulpfile.js</code> to run. Let’s create a simple gulpfile.js.
</p>




<figure class='code'><figcaption><span>gulpfile.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">var</span> <span class="n">gulp</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="s1">&#39;gulp&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">gulp</span><span class="o">.</span><span class="n">task</span><span class="p">(</span><span class="s1">&#39;default&#39;</span><span class="p">,</span> <span class="o">[]</span><span class="p">,</span> <span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">console</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="s2">&quot;Hellow World&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  In your terminator run the gulp command below:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gulp</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  You should see:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Hello</span> <span class="no">Gulp</span>
</span><span class='line'>
</span><span class='line'><span class="no">Using</span> <span class="n">gulpfile</span> <span class="o">~</span><span class="sr">/YOUR_DIRECTORY/</span><span class="n">gulpfile</span><span class="o">.</span><span class="n">js</span>
</span><span class='line'><span class="no">Starting</span> <span class="s1">&#39;default&#39;</span><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'><span class="no">Hello</span> <span class="no">Gulp</span><span class="o">!</span> <span class="no">You</span> <span class="n">are</span> <span class="n">mighty</span> <span class="n">fine</span><span class="o">.</span>
</span><span class='line'><span class="no">Finished</span> <span class="s1">&#39;default&#39;</span> <span class="n">after</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Congratulations creating your first gulp build script. So far so good, That’s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gulp – Installation]]></title>
    <link href="http://geekhmer.github.io/blog/2016/08/28/gulp-installation/"/>
    <updated>2016-08-28T14:06:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/08/28/gulp-installation</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/gulp.jpg" width="600" alt="Gulp – Installation" />
</p>




<p>
  This article provides a step-by-step procedure of Gulp installation.
</p>




<p>
  <strong>Node.js Installation</strong><br/>
  Run the setup to install the Node.js on your computer <a href="https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-16-04" target="_blank">here</a>.<br/>
  Then open up the terminator in your system and enter the following command. It will display the installed Node.js version. 
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">node</span> <span class="o">-</span><span class="n">v</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  In the terminator, enter the following command to display the version of npm (Node.js package manager) which is used to install modules. It will display the installed Node.js version.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="o">-</span><span class="n">v</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Gulp Installation</strong><br/>
  In the terminator, enter the following command to install Gulp. Adding “-g” flag ensures that the Gulp is globally available for any project.
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gulp</span> <span class="o">-</span><span class="n">v</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  So far so good, That’s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is Gulp?]]></title>
    <link href="http://geekhmer.github.io/blog/2016/08/09/what-is-gulp/"/>
    <updated>2016-08-09T13:51:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/08/09/what-is-gulp</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/what_is_gulpjs.jpg" width="400" alt="What is Gulp?" />
</p>




<p>
  <strong>What is Gulp?</strong><br/>
  Gulp is a task runner that uses Node.js as a platform. Gulp purely uses the JavaScript code and helps to run front-end tasks and large-scale web applications. It builds system automated tasks like CSS and HTML minification, concatenating library files, and compiling the SASS files. These tasks can be run using Shell or Bash scripts on the command line.
</p>




<p>
  <strong>Why Use Gulp?</strong><br/>
  - It is shorter, simpler and faster as compared to other task runner.<br/>
  - Uses SASS and LESS as CSS preprocessor.<br/>
  - Automatically refreshes page after editing the source files.<br/>
  - Easy to understand and build the Gulpfile.js because, it uses pure JavaScript code to build the task.
</p>




<p>
  <strong>Features</strong><br/>
  - Provides minification and concatenation.<br/>
  - Uses pure JavaScript code.<br/>
  - Converts LESS or SASS to CSS compilation.<br/>
  - Manages file manipulation in the memory and enhances speed by using the Node.js
platform.
</p>




<p>
  <strong>Advantages</strong><br/>
  - Huge speed advantage over any other task runner.<br/>
  - Easy to code and understand.<br/>
  - Easy to test the web applications.<br/>
  - Plugins are simple to use and they are designed to do one thing at a time.<br/>
  - Performs repetitive tasks repeatedly such as minifying stylesheets, compressing images, etc.
</p>




<p>
  <strong>Disadvantages</strong><br/>
  - More number of dependencies and is a newcomer compared to Grunt.<br/>
  - Using Gulp plugins, you cannot perform multiple tasks.<br/>
  - Configuration is not as clean as Grunt.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebook Fan Page Auto Like - Revised]]></title>
    <link href="http://geekhmer.github.io/blog/2016/07/25/facebook-fan-page-auto-like-revised/"/>
    <updated>2016-07-25T22:47:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/07/25/facebook-fan-page-auto-like-revised</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/facebook_like.jpg" width="450" alt="Facebook Fan Page Auto Like" />
</p>




<p>
  Due Facebook Graph API was changed/updated so my previous article &#8221;<a href="http://geekhmer.github.io/blog/2013/10/02/facebook-fan-page-auto-like" target="_blank">Facebook Fan Page Auto Like</a>&#8221; is no longer working. And here is what I revised.
</p>




<p>
  Well, the process is when someone click anywhere on your site they will automatically like your page, no need to put like button.
</p>




<p>
  Follow the step below to make it work:
</p>




<p>
  <strong>1. Put the below code in head tag</strong>
</p>




<figure class='code'><figcaption><span>Check the body are clicked yet </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">interval</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">updateActiveElement</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">activeElement</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">)</span> <span class="o">==</span> <span class="s2">&quot;fb-iframe&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">clearInterval</span><span class="p">(</span><span class="nx">interval</span><span class="p">);</span>
</span><span class='line'>      <span class="nx">bodyClicked</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">interval</span> <span class="o">=</span> <span class="nx">setInterval</span><span class="p">(</span><span class="s2">&quot;updateActiveElement();&quot;</span><span class="p">,</span> <span class="mi">50</span><span class="p">);</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>2. Put the below code in body tag:</strong>
</p>




<figure class='code'><figcaption><span>Load facebook fan page like button & hide it </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">&quot;overflow: hidden; width: 10px; height: 12px; position: absolute; filter:alpha(opacity=0); -moz-opacity:0.0; -khtml-opacity: 0.0; opacity: 0.0;&quot;</span> <span class="na">id=</span><span class="s">&quot;iframe-wrapper&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;iframe</span> <span class="na">src=</span><span class="s">&quot;https://www.facebook.com/plugins/like.php?href=https://www.facebook.com/FACEBOOK_PAGE_NAME_URL&amp;send=false&amp;layout=button_count&amp;width=450&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font&amp;height=21&amp;confirm=false&quot;</span> <span class="na">scrolling=</span><span class="s">&quot;no&quot;</span> <span class="na">frameborder=</span><span class="s">&quot;0&quot;</span> <span class="na">style=</span><span class="s">&quot;border:none;overflow:hidden;width:450px;height:21px;&quot;</span> <span class="na">allowTransparency=</span><span class="s">&quot;false&quot;</span><span class="nt">&gt;&lt;/iframe&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  And then find FACEBOOK_PAGE_NAME_URL in src iframe and replace it with your facebook fan page url (ex: <a href="http://www.facebook.com/geekhmer" target="_blank">http://www.facebook.com/GeeKhmer</a>).
</p>




<p>
  <strong>3. Put the below code anywhere in html tag:</strong>
</p>




<figure class='code'><figcaption><span>Set mousemove event to body & when body are clicked, it auto click on facebook like button </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">bodyClicked</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">iframeWrapper</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">&#39;iframe-wrapper&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">standardBody</span><span class="o">=</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">compatMode</span><span class="o">==</span><span class="s2">&quot;CSS1Compat&quot;</span><span class="p">)</span> <span class="o">?</span> <span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span> <span class="o">:</span> <span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">mouseFollower</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// for internet explorer</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">iframeWrapper</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span> <span class="o">=</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="mi">5</span><span class="p">)</span><span class="o">+</span><span class="nx">standardBody</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">+</span><span class="s1">&#39;px&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">iframeWrapper</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span> <span class="o">=</span> <span class="p">(</span><span class="nb">window</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="mi">5</span><span class="p">)</span><span class="o">+</span><span class="nx">standardBody</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">+</span><span class="s1">&#39;px&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">iframeWrapper</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span> <span class="o">=</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">pageY</span><span class="o">-</span><span class="mi">5</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;px&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">iframeWrapper</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span> <span class="o">=</span> <span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">pageX</span><span class="o">-</span><span class="mi">5</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;px&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">document</span><span class="p">.</span><span class="nx">onmousemove</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nx">bodyClicked</span> <span class="o">==</span> <span class="kc">false</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">mouseFollower</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="nt">&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Video:</strong>
</p>




<iframe width="560" height="315" src="https://www.youtube.com/embed/UJROR37rVB4" frameborder="0" allowfullscreen></iframe>




<p>
  So far so good, That’s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Application Steps for Applying to Study Masters in Computer Science at MAHARISHI UNIVERSITY OF MANAGEMENT USA]]></title>
    <link href="http://geekhmer.github.io/blog/2016/07/22/application-steps-for-applying-to-study-masters-in-computer-science-at-maharishi-university-of-management-usa/"/>
    <updated>2016-07-22T09:48:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/07/22/application-steps-for-applying-to-study-masters-in-computer-science-at-maharishi-university-of-management-usa</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/mum.JPG" width="600" alt="Application Steps for Applying to Study Masters in Computer Science at MAHARISHI UNIVERSITY OF MANAGEMENT USA" />
</p>




<p>
  Well, there are 7 sequence of steps to follow as list below:
</p>




<p>
  <strong>1. Complete the online application form <a href="https://admin.cs.mum.edu/Admissions/ApplicationForm.html" target="_blank">here</a>.</strong>
</p>




<p>
  <strong>2. Take a programming exam.</strong> For this simple test you are required to write code in one of the following languages: Java, C++, C#, or C language. If you do not pass the test, you will need to study programming for some time and then take the test again before your application can proceed.
</p>




<p>
  <strong>3. Send the items requested</strong> on the Application Checklist including your transcripts and resume. Do NOT send these items until you are asked to send them.
</p>




<p>
  <strong>4. English interview</strong> via telephone.
</p>




<p>
  <strong>5.1.</strong> Send documents verifying finances.<br/>
  <strong>5.2.</strong> Submit application fee.<br/>
  <strong>5.3.</strong> Sign student agreement form.<br/>
</p>




<p>
  <strong>6.1.</strong> You schedule your visa interview at the U.S. embassy, attend your visa interview and receive visa.<br/>
  <strong>6.2.</strong> Book a flight to Cedar Rapids, Iowa.<br/>
  <strong>6.3.</strong> Notify your admissions representative of your travel itinerary, and ask for instructions on transportation to the University.
</p>




<p>
  <strong>7.</strong> Arrive at your dormitory on campus. Attend orientation session as requested. Enjoy 8 months of courses on campus. Search for a Curricular Practical Training (CPT) internship job at a US company under the guidance of our Career Placement Center. Complete coursework via distance education while gaining hands on, professional experience for which you will earn a full salary, and gain academic credit. Attend graduation ceremonies, Enjoy the rest of your life!
</p>




<p>
  So far so good, Let enjoy the rest of your life in USA. :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Requirements to Applying to Study Masters in Computer Science at MAHARISHI UNIVERSITY OF MANAGEMENT USA]]></title>
    <link href="http://geekhmer.github.io/blog/2016/07/22/the-requirements-to-applying-to-study-masters-in-computer-science-at-maharishi-university-of-management-usa/"/>
    <updated>2016-07-22T09:45:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/07/22/the-requirements-to-applying-to-study-masters-in-computer-science-at-maharishi-university-of-management-usa</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/mum.JPG" width="600" alt="The Requirements to Applying to Study Masters in Computer Science at MAHARISHI UNIVERSITY OF MANAGEMENT USA" />
</p>




<p>
  My friend always ask me, What is the requirement to applying to study Masters in Computer Science at MAHARISHI UNIVERSITY OF MANAGEMENT USA?
</p>




<p>
  Well, before applying, please carefully read all requirements below. Admission requirements are subject to change.
</p>




<p>
  Upon arrival, you are tested to confirm that you meet the entrance requirements as per your application materials. If you are unable to demonstrate your stated level, you will be deferred from the program until you can remedy these deficiencies.
</p>




<p>
  <strong>There are Three Main Areas of Requirements:</strong><br/>
  1. Academic and undergraduate degree<br/>
  2. English proficiency for internationals<br/>
  3. Professional paid work experience as a programmer (only required for international students)<br/>
</p>




<p>
  Please read all requirement details below carefully.
</p>




<p>
  <strong>Academic Requirements</strong><br/>
  1. 4-year Bachelors degree in computer science or related area.<br/>
  2. Courses must include at the least: Programming of a higher language (C, C++, C# or Java), Data Structures, Math courses (Calculus 1 & 2, Discrete Math).<br/>
  3. GPA of at least 2.7 out of 4. <br/>
  4. Other Computer Science courses are helpful but not required.<br/>
</p>




<p>
  <strong>English Proficiency</strong><br/>
  International students must be able to communicate fluently (speak, understand, read and write), and will be tested during the application process and again on arrival. IELTS and TOEFL not required.
</p>




<p>
  <strong>Work Experience</strong><br/>
  International students must have at least 6 months of OOP professionally paid work experience. If the GPA is lower than 2.7, students may be asked to have more work experience, and/or may be asked to take the GRE.
</p>




<p>
  So far so good, If you meet the admissions requirements, please <a href="https://admin.cs.mum.edu/Admissions/faces/login.xhtml" target="_blank">apply online</a>.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup and Deploy Ruby On Rails on Ubuntu 16.04 or Latest]]></title>
    <link href="http://geekhmer.github.io/blog/2016/07/13/setup-and-deploy-ruby-on-rails-on-ubuntu-16-dot-04-or-latest/"/>
    <updated>2016-07-13T15:00:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/07/13/setup-and-deploy-ruby-on-rails-on-ubuntu-16-dot-04-or-latest</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/rails_nginx_ubuntu.jpg" width="600" alt="Setup and Deploy Ruby On Rails on Ubuntu 16.04 or Latest" />
</p>




<p>
  Since we setup Ubuntu for our development environment, we also want to use it in production. This keeps your application running consistently between development and production. 
</p>




<h3>Install Ruby</h3>




<p>
  The first step is to install some dependencies for Ruby:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">git</span><span class="o">-</span><span class="n">core</span> <span class="n">curl</span> <span class="n">zlib1g</span><span class="o">-</span><span class="n">dev</span> <span class="n">build</span><span class="o">-</span><span class="n">essential</span> <span class="n">libssl</span><span class="o">-</span><span class="n">dev</span> <span class="n">libreadline</span><span class="o">-</span><span class="n">dev</span> <span class="n">libyaml</span><span class="o">-</span><span class="n">dev</span> <span class="n">libsqlite3</span><span class="o">-</span><span class="n">dev</span> <span class="n">sqlite3</span> <span class="n">libxml2</span><span class="o">-</span><span class="n">dev</span> <span class="n">libxslt1</span><span class="o">-</span><span class="n">dev</span> <span class="n">libcurl4</span><span class="o">-</span><span class="n">openssl</span><span class="o">-</span><span class="n">dev</span> <span class="n">python</span><span class="o">-</span><span class="n">software</span><span class="o">-</span><span class="n">properties</span> <span class="n">libffi</span><span class="o">-</span><span class="n">dev</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Next we&#8217;re going to be installing Ruby using rvm:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">libgdbm</span><span class="o">-</span><span class="n">dev</span> <span class="n">libncurses5</span><span class="o">-</span><span class="n">dev</span> <span class="n">automake</span> <span class="n">libtool</span> <span class="n">bison</span> <span class="n">libffi</span><span class="o">-</span><span class="n">dev</span>
</span><span class='line'><span class="n">gpg</span> <span class="o">--</span><span class="n">keyserver</span> <span class="ss">hkp</span><span class="p">:</span><span class="sr">//</span><span class="n">keys</span><span class="o">.</span><span class="n">gnupg</span><span class="o">.</span><span class="n">net</span> <span class="o">--</span><span class="n">recv</span><span class="o">-</span><span class="n">keys</span> <span class="mi">409</span><span class="no">B6B1796C275462A1703113804BB82D39DC0E3</span>
</span><span class='line'><span class="n">curl</span> <span class="o">-</span><span class="n">sSL</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">get</span><span class="o">.</span><span class="n">rvm</span><span class="o">.</span><span class="n">io</span> <span class="o">|</span> <span class="n">bash</span> <span class="o">-</span><span class="n">s</span> <span class="n">stable</span>
</span><span class='line'><span class="n">source</span> <span class="o">~</span><span class="sr">/.rvm/s</span><span class="n">cripts</span><span class="o">/</span><span class="n">rvm</span>
</span><span class='line'><span class="n">rvm</span> <span class="n">install</span> <span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">1</span>
</span><span class='line'><span class="n">rvm</span> <span class="n">use</span> <span class="mi">2</span><span class="o">.</span><span class="mi">3</span><span class="o">.</span><span class="mi">1</span> <span class="o">--</span><span class="n">default</span>
</span><span class='line'><span class="n">ruby</span> <span class="o">-</span><span class="n">v</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  The last step is to install Bundler
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="n">install</span> <span class="n">bundler</span>
</span></code></pre></td></tr></table></div></figure>




<h3>Install Nginx</h3>




<p>
  Phusion is the company that develops Passenger and they recently put out an official Ubuntu package that ships with Nginx and Passenger pre-installed.
</p>




<p>
  We&#8217;ll be using that to setup our production server because it&#8217;s very easy to setup:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">key</span> <span class="n">adv</span> <span class="o">--</span><span class="n">keyserver</span> <span class="ss">hkp</span><span class="p">:</span><span class="sr">//</span><span class="n">keyserver</span><span class="o">.</span><span class="n">ubuntu</span><span class="o">.</span><span class="n">com</span><span class="p">:</span><span class="mi">80</span> <span class="o">--</span><span class="n">recv</span><span class="o">-</span><span class="n">keys</span> <span class="mi">561</span><span class="no">F9B9CAC40B2F7</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">apt</span><span class="o">-</span><span class="n">transport</span><span class="o">-</span><span class="n">https</span> <span class="n">ca</span><span class="o">-</span><span class="n">certificates</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Add Passenger APT repository</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">sh</span> <span class="o">-</span><span class="n">c</span> <span class="s1">&#39;echo deb https://oss-binaries.phusionpassenger.com/apt/passenger xenial main &gt; /etc/apt/sources.list.d/passenger.list&#39;</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Install Passenger &amp; Nginx</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">nginx</span><span class="o">-</span><span class="n">extras</span> <span class="n">passenger</span>
</span></code></pre></td></tr></table></div></figure>




<p>So now we have Nginx and passenger installed. We can manage the Nginx webserver by using the service command:</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">service</span> <span class="n">nginx</span> <span class="n">start</span>
</span></code></pre></td></tr></table></div></figure>




<p>
The service command also provides some other methods such as <code>restart</code> and <code>stop</code> that allow you to easily restart and stop your webserver.
</p>




<p>Next, we need to update the Nginx configuration to point Passenger to the version of Ruby that we&#8217;re using. You&#8217;ll want to open up <code>/etc/nginx/nginx.conf</code> in your favorite editor. I like to use vim, so I&#8217;d run this command:</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">vim</span> <span class="sr">/etc/n</span><span class="n">ginx</span><span class="o">/</span><span class="n">nginx</span><span class="o">.</span><span class="n">conf</span>
</span></code></pre></td></tr></table></div></figure>




<p>Find the following lines, and uncomment them:</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">##</span>
</span><span class='line'><span class="c1"># Phusion Passenger config</span>
</span><span class='line'><span class="c1">##</span>
</span><span class='line'><span class="c1"># Uncomment it if you installed passenger or passenger-enterprise</span>
</span><span class='line'><span class="c1">##</span>
</span><span class='line'>
</span><span class='line'><span class="kp">include</span> <span class="sr">/etc/n</span><span class="n">ginx</span><span class="o">/</span><span class="n">passenger</span><span class="o">.</span><span class="n">conf</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>




<p>Once you&#8217;ve configured <code>/etc/nginx/nginx.conf</code> , you can run <code>sudo service nginx restart</code> to restart Nginx with the new Passenger configuration.</p>




<h3>Install MySQL and PostgreSQL</h3>




<p>Setting up your production database is pretty easy. Make sure to keep in mind that you should use a different password for your production databases.</p>




<p>Depending on what database you want to use, follow the steps related to the database:</p>




<p>
  <strong>Install MySQL</strong><br/>
  All you need to do in order to install MySQL is to run the following command:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">mysql</span><span class="o">-</span><span class="n">server</span> <span class="n">mysql</span><span class="o">-</span><span class="n">client</span> <span class="n">libmysqlclient</span><span class="o">-</span><span class="n">dev</span>
</span></code></pre></td></tr></table></div></figure>




<p>You can use the root user and password set during installation for your database or you can add a new user to MySQL.</p>




<p>
  <strong>Install PostgreSQL</strong><br/>
  We can install PostgreSQL like so:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">postgresql</span> <span class="n">postgresql</span><span class="o">-</span><span class="n">contrib</span> <span class="n">libpq</span><span class="o">-</span><span class="n">dev</span>
</span></code></pre></td></tr></table></div></figure>




<p>Next we need to setup the postgres user:</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">su</span> <span class="o">-</span> <span class="n">postgres</span>
</span><span class='line'><span class="n">createuser</span> <span class="o">--</span><span class="n">pwprompt</span>
</span><span class='line'><span class="nb">exit</span>
</span></code></pre></td></tr></table></div></figure>




<p>The password you type in here will be the one to put in your <code>my_app/current/config/database.yml</code> later when you deploy your app for the first time.</p>




<h3>Adding The Nginx Host</h3>




<p>In order to get Nginx to respond with the Rails app, we need to modify it&#8217;s sites-enabled.</p>




<p>Open up <code>/etc/nginx/sites-enabled/default</code> in your text editor and we will replace the file&#8217;s contents with the following:</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">server</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">listen</span> <span class="mi">80</span> <span class="n">default_server</span><span class="p">;</span>
</span><span class='line'>  <span class="n">listen</span> <span class="o">[::]</span><span class="p">:</span><span class="mi">80</span> <span class="n">default_server</span> <span class="n">ipv6only</span><span class="o">=</span><span class="n">on</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">server_name</span> <span class="n">mydomain</span><span class="o">.</span><span class="n">com</span><span class="p">;</span>
</span><span class='line'>  <span class="n">passenger_enabled</span> <span class="n">on</span><span class="p">;</span>
</span><span class='line'>  <span class="n">rails_env</span>    <span class="n">production</span><span class="p">;</span>
</span><span class='line'>  <span class="n">root</span>         <span class="sr">/home/</span><span class="n">deploy</span><span class="o">/</span><span class="n">myapp</span><span class="o">/</span><span class="kp">public</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># redirect server error pages to the static page /50x.html</span>
</span><span class='line'>  <span class="n">error_page</span>   <span class="mi">500</span> <span class="mi">502</span> <span class="mi">503</span> <span class="mi">504</span>  <span class="o">/</span><span class="mi">50</span><span class="n">x</span><span class="o">.</span><span class="n">html</span><span class="p">;</span>
</span><span class='line'>  <span class="n">location</span> <span class="o">=</span> <span class="sr">/50x.html {</span>
</span><span class='line'><span class="sr">    root   html;</span>
</span><span class='line'><span class="sr">  }</span>
</span><span class='line'><span class="sr">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>This is our Nginx configuration for a server listening on port 80. You need to change the server_name values to match the domain you want to use and in root replace &#8220;myapp&#8221; with the name of your application.</p>




<h3>Connect The Database</h3>




<p>
  The file <code>config/database.yml</code> needs to be updated for the production database server username, password, and host. You can set host to &#8220;localhost&#8221; and you will have to create a database on the server with the same name by using command:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">create</span> <span class="no">RAILS_ENV</span><span class="o">=</span><span class="n">production</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span> <span class="no">RAILS_ENV</span><span class="o">=</span><span class="n">production</span>
</span></code></pre></td></tr></table></div></figure>




<p>Then run command below to minify or compress JavaScript and CSS assets:</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="ss">assets</span><span class="p">:</span><span class="n">precompile</span> <span class="no">RAILS_ENV</span><span class="o">=</span><span class="n">production</span>
</span></code></pre></td></tr></table></div></figure>




<h3>Setup Secret Key Base</h3>




<p>Go to your rails app directory and run command below to generate secret key base:</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="n">secret</span> <span class="no">RAILS_ENV</span><span class="o">=</span><span class="n">production</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Go to <code>/yourapp/config/secrets.yml</code> and set production secret_key_base. Then reload Nginx using command line: <code>sudo service nginx reload</code>
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Send Notifications from Rails Backend to iOS and Android]]></title>
    <link href="http://geekhmer.github.io/blog/2016/05/03/send-notifications-from-rails-backend-to-ios-and-android/"/>
    <updated>2016-05-03T12:29:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/05/03/send-notifications-from-rails-backend-to-ios-and-android</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/gcm-app.png" width="600" alt="Send Notifications from Rails Backend to iOS and Android" />
</p>




<p>
  Written for a project. I developed the backend for a social network app - My own startup business, will release soon.
</p>




<p>
  One of the most common uses for a backend connected to a mobile application is to use it to send push notifications to users. Once you&#8217;ve wrapped your head around it, it&#8217;s pretty straightforward, but it&#8217;s also a common source of confusion for developers new to the topic. This frequent confusion is also the reason I&#8217;ve decided to cover it for my introductory technical story for my own startup business app, where I&#8217;m a CEO.
</p>




<p>
  Before I continue, you should know that there are plug-n-play services that will provide you with a notification-sending backend, if you&#8217;re willing to pay for it (Parse, mobDB, Pushwoosh, Urban Airship, etc.), but since that&#8217;s not the way of the warrior, let&#8217;s see how you do it from scratch (and for free).
</p>




<blockquote><p>&#8220;If you wish to make an apple pie from scratch, you must first invent the universe.&#8221; - Carl Sagan</p></blockquote>




<p>
  There are several components in my own startup business app that play various roles in the notification sending feature:<br/>
  1. API endpoint for getting tokens from mobile devices.<br/>
  2. <a href="https://github.com/resque/resque" target="_blank">Resque</a> worker which remains connected to Apple/Google notification servers and feeds off a queue of notifications in Redis.<br/>
  3. The code that does the actual sending and feedback processing in the worker.
</p>




<p>
  Before anything else, you need to ask the user if they&#8217;d like to receive push notifications (<a href="https://developer.apple.com/notifications/" target="_blank">iOS notifications</a>, <a href="http://developer.android.com/guide/topics/ui/notifiers/notifications.html" target="_blank">Google Cloud Messaging</a>) and if they say yes, get their device token and send it from the mobile device to the backend server. We store these tokens in a simple <a href="http://api.rubyonrails.org/classes/ActiveRecord/Base.html" target="_blank">ActiveRecord</a> model called Device:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># ====================</span>
</span><span class='line'><span class="c1"># Schema Information</span>
</span><span class='line'><span class="c1"># Table name: devices</span>
</span><span class='line'><span class="c1">#  id         :integer          not null, primary key</span>
</span><span class='line'><span class="c1">#  user_id    :integer</span>
</span><span class='line'><span class="c1">#  token      :string(255)</span>
</span><span class='line'><span class="c1">#  enabled    :boolean          default(TRUE)</span>
</span><span class='line'><span class="c1">#  created_at :datetime         not null</span>
</span><span class='line'><span class="c1">#  updated_at :datetime         not null</span>
</span><span class='line'><span class="c1">#  platform   :string(255)</span>
</span><span class='line'><span class="c1"># ====================</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Device</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">attr_accessible</span> <span class="ss">:enabled</span><span class="p">,</span> <span class="ss">:token</span><span class="p">,</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:platform</span>
</span><span class='line'>  <span class="n">belongs_to</span> <span class="ss">:user</span>
</span><span class='line'>  <span class="n">validates_uniqueness_of</span> <span class="ss">:token</span><span class="p">,</span> <span class="ss">scope</span><span class="p">:</span> <span class="ss">:user_id</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Instances of Device get created when the mobile app calls an API endpoint, which looks something like this (we&#8217;re using <a href="https://github.com/ruby-grape/grape" target="_blank">grape</a> gem for our API needs):
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">resource</span> <span class="ss">:devices</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">post</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@device</span> <span class="o">=</span> <span class="no">Device</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">user</span><span class="p">:</span> <span class="n">current_user</span><span class="p">,</span> <span class="ss">token</span><span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:token</span><span class="o">]</span><span class="p">,</span> <span class="ss">platform</span><span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:platform</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>    <span class="n">present</span> <span class="vi">@device</span><span class="p">,</span> <span class="ss">with</span><span class="p">:</span> <span class="ss">WellWithMe</span><span class="p">:</span><span class="ss">:Entities</span><span class="o">::</span><span class="no">Device</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  With our mobile app user having a stored device token, we&#8217;re now ready to queue notifications for her, which we do through a simple Redis list backed Notification model, which ensures data validity among other things. If a user has multiple devices, the Notification model also ensures they get sent to all of them. Queuing notifications is then as easy as:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">notification</span> <span class="o">=</span> <span class="no">Notification</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">activity</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">name</span><span class="si">}</span><span class="s2"> just started the challenge!&quot;</span><span class="p">,</span> <span class="s1">&#39;status_change&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  In an essence, the Notification model is a Redis list, which serves as the queue for a background worker (NotificationSender):
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">NotificationSender</span>
</span><span class='line'>  <span class="vi">@queue</span> <span class="o">=</span> <span class="ss">:notifications</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">perform</span>
</span><span class='line'>    <span class="vi">@list</span> <span class="o">=</span> <span class="ss">Redis</span><span class="p">:</span><span class="ss">:List</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">Notification</span><span class="o">.</span><span class="n">key_name</span><span class="p">)</span>
</span><span class='line'>    <span class="k">while</span> <span class="n">notification</span> <span class="o">=</span> <span class="vi">@list</span><span class="o">.</span><span class="n">pop</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">notification_json</span> <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">notification</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">notification_json</span><span class="o">[</span><span class="s1">&#39;platform&#39;</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;iOS&#39;</span>
</span><span class='line'>        <span class="n">note</span> <span class="o">=</span> <span class="ss">Grocer</span><span class="p">:</span><span class="ss">:Notification</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
</span><span class='line'>          <span class="n">device_token</span><span class="p">:</span> <span class="n">notification_json</span><span class="o">[</span><span class="s1">&#39;token&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">alert</span><span class="p">:</span> <span class="n">notification_json</span><span class="o">[</span><span class="s1">&#39;message&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">sound</span><span class="p">:</span> <span class="s1">&#39;default&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">badge</span><span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="no">PUSHER</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="n">note</span><span class="p">)</span>
</span><span class='line'>      <span class="k">elsif</span> <span class="n">notification_json</span><span class="o">[</span><span class="s1">&#39;platform&#39;</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;Android&#39;</span>
</span><span class='line'>        <span class="n">gcm</span> <span class="o">=</span> <span class="no">GCM</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;gcm_key&#39;</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>        <span class="n">registration_id</span> <span class="o">=</span> <span class="o">[</span><span class="n">notification_json</span><span class="o">[</span><span class="s1">&#39;token&#39;</span><span class="o">]]</span>
</span><span class='line'>        <span class="n">options</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>          <span class="s1">&#39;data&#39;</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>            <span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="n">notification_json</span><span class="o">[</span><span class="s1">&#39;message&#39;</span><span class="o">]</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>            <span class="s1">&#39;collapse_key&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;updated_state&#39;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>        <span class="n">response</span> <span class="o">=</span> <span class="n">gcm</span><span class="o">.</span><span class="n">send_notification</span><span class="p">(</span><span class="n">registration_id</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Having NotificationSender be a queued job constantly running on a worker as opposed to a synchronous connection has the advantage of not trying to establish a connection to Apple&#8217;s notification servers for every notification, which is something Apple actively discourages: <a href="https://developer.apple.com/news/?id=03212012a" target="_blank">Apple&#8217;s note about notification servers connections</a>.
</p>




<p>
  Thus NotificationSender is a Resque job, which is run every minute and just gobbles up the Redis list of notifications, and sends them according to the platform. We&#8217;re using the awesome <a href="https://github.com/grocer/grocer" target="_blank">grocer</a> gem for iOS and the <a href="https://github.com/spacialdb/gcm" target="_blank">GCM</a> gem for Android. Both are working perfectly and the documentation is very good. The only caveat is that you should watch out for certificates magic in iOS, as you need to have your Apple certificates on the server as well, and you need to export them in a certain way (including the private key) - just follow instructions for the grocer gem to the letter, and you&#8217;ll be fine.
</p>




<p>
  With this, you should have a working and easily extendible system for sending important notifications about in-app events to your users. Notifications can drastically increase user retention, just don&#8217;t abuse them or they&#8217;ll have an opposite effect.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Command Line]]></title>
    <link href="http://geekhmer.github.io/blog/2016/03/25/git-command-line/"/>
    <updated>2016-03-25T15:01:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/03/25/git-command-line</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/logo_git.png" alt="Git Command Line" />
</p>




<p>
  <a href="http://geekhmer.github.io/blog/2015/02/09/install-git-on-linux-slash-ubuntu/" target="_blank">How to install GIT on Linux/Ubuntu</a> &#8211; Today, Source Version Control has gained popularity in the management of source code. Therefore, the software engineer needs to know how to use and manipulate GIT. The following common GIT command line will help you manipulate GIT:
</p>




<p>
  <strong>Set up Git Configuration</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">config</span> <span class="o">--</span><span class="n">global</span> <span class="n">user</span><span class="o">.</span><span class="n">email</span> <span class="s2">&quot;your_email@domain_name.com&quot;</span> <span class="sr">/* Setup email is used to commit */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">config</span> <span class="o">--</span><span class="n">global</span> <span class="n">user</span><span class="o">.</span><span class="n">name</span> <span class="s2">&quot;your user name&quot;</span> <span class="sr">/* Setup username is used to commit */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">config</span> <span class="o">--</span><span class="n">global</span> <span class="n">core</span><span class="o">.</span><span class="n">editor</span> <span class="s2">&quot;vi&quot;</span> <span class="sr">/* Choose editor used by GIT */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">config</span> <span class="o">--</span><span class="n">global</span> <span class="n">color</span><span class="o">.</span><span class="n">ui</span> <span class="kp">true</span> <span class="sr">/* Setup color ui for command line */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">config</span> <span class="o">--</span><span class="n">list</span> <span class="sr">/* See Git configuration */</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>To Initialise a Local Repository</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">init</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Add a File to the Repository</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">init</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Commit the Change to Git</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">commit</span> <span class="o">-</span><span class="n">m</span> <span class="s2">&quot;message&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>See the Commits</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">log</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Basic Commands</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">status</span>  <span class="sr">/*  The command &#39;git status&#39; tells which files are not added or committed from Working to Staging to Repository */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">commit</span> <span class="o">-</span><span class="n">m</span> <span class="s2">&quot;message&quot;</span> <span class="sr">/*  Commits and changes to all files that are in Staging into Repo  */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">diff</span> <span class="sr">/*  Show changes between Working and Local Repo, no file supplied shows all files  */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">diff</span> <span class="o">--</span><span class="n">staged</span> <span class="sr">/*  Shows changes between Staged and Local Repo  */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">rm</span> <span class="n">file</span><span class="o">.</span><span class="n">txt</span> <span class="sr">/*  Will remove file from working then git commit -m &quot;&quot; to also remove from Repo */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">rm</span> <span class="o">--</span><span class="n">cached</span> <span class="n">file</span><span class="o">.</span><span class="n">txt</span> <span class="sr">/* Leaves copy of file in Working but removes from Staging and Repo */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">mv</span> <span class="sr">/* Rename or move files - then git commit -m &quot;&quot; to move to Repo */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">commit</span> <span class="o">-</span><span class="n">am</span> <span class="s2">&quot;text goes here&quot;</span> <span class="sr">/* Adds all files straight to Repo from Staging if they have changes - meaning they skip git add */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">checkout</span> <span class="o">--</span> <span class="n">file</span><span class="o">.</span><span class="n">txt</span> <span class="sr">/* Restore Repo file to Working Directory using current branch  */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">reset</span> <span class="o">--</span><span class="n">soft</span> <span class="no">HEAD</span><span class="o">^</span> <span class="sr">/* Restore repo file to staging */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">reset</span> <span class="no">HEAD</span> <span class="n">file</span><span class="o">.</span><span class="n">txt</span> <span class="sr">/*  Move a Stage file out of Stage back to Working */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">commit</span> <span class="o">--</span><span class="n">amend</span> <span class="o">-</span><span class="n">m</span> <span class="s2">&quot;message&quot;</span> <span class="n">file</span><span class="o">.</span><span class="n">txt</span> <span class="sr">/* Change last commit to Repo (only last one can change) */</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Resetting & Reverting</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/* Reverting --soft --mixed --hard will go back to previous commits* /</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">log</span> <span class="sr">/* Gets the sha1s so you can see the coomits where you want revert  back to */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">reset</span> <span class="o">--</span><span class="n">soft</span> <span class="n">sha</span> <span class="sr">/* Changes Repo but not Staging or Working */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">reset</span> <span class="o">--</span><span class="n">mixed</span> <span class="n">sha</span> <span class="sr">/* Changes Repo and Staging but not Working */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">reset</span> <span class="o">--</span><span class="n">hard</span> <span class="n">sha</span> <span class="sr">/* Changes all 3 Tiers */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">clean</span> <span class="o">-</span><span class="n">f</span> <span class="sr">/* Remove untracked files from Working  */</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Ignore File</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">.</span><span class="n">gitignore</span> <span class="sr">/* Ignores files to track in Working /</span> <span class="n">track</span> <span class="n">the</span> <span class="o">.</span><span class="n">gitignore</span> <span class="n">file</span> <span class="o">*/</span>
</span><span class='line'>
</span><span class='line'><span class="no">Global</span> <span class="no">Ignore</span> <span class="sr">/* Create in home folder  */</span>
</span><span class='line'><span class="o">.</span><span class="n">gitignore_global</span>
</span><span class='line'><span class="o">.</span><span class="n">DS_Store</span>
</span><span class='line'><span class="o">.</span><span class="n">Trashes</span>
</span><span class='line'><span class="o">.</span><span class="n">Spotlight_V100</span>
</span><span class='line'><span class="sr">/* Add in  */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">config</span> <span class="o">--</span><span class="n">global</span> <span class="n">core</span><span class="o">.</span><span class="n">excludesfile</span> <span class="o">~</span><span class="sr">/.gitignore_global /</span><span class="o">*</span> <span class="no">Add</span> <span class="n">to</span> <span class="n">gitconfig</span> <span class="o">*/</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Stop Tracking Changes</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">rm</span> <span class="o">--</span><span class="n">cached</span> <span class="n">file</span><span class="o">.</span><span class="n">txt</span> <span class="sr">/* Leaves copy in Repo and Working */</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Commit Log</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">ls</span><span class="o">-</span><span class="n">tree</span> <span class="no">HEAD</span>
</span><span class='line'><span class="n">git</span> <span class="n">ls</span><span class="o">-</span><span class="n">tree</span> <span class="n">master</span>
</span><span class='line'><span class="n">git</span> <span class="n">log</span> <span class="o">--</span><span class="n">oneline</span>
</span><span class='line'><span class="n">git</span> <span class="n">log</span> <span class="o">--</span><span class="n">author</span><span class="o">=</span><span class="s2">&quot;Bunlong&quot;</span>
</span><span class='line'><span class="n">git</span> <span class="n">log</span> <span class="o">--</span><span class="n">grep</span><span class="o">=</span><span class="s2">&quot;temp&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Show Commit</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">show</span> <span class="n">dc094cb</span> <span class="sr">/*  show SHA1 */</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Commands on Branch</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">branch</span> <span class="sr">/* Show local branches * is the one we are on */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">r</span> <span class="sr">/* Shows remote branches */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">a</span> <span class="sr">/* Shows local and remote */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">branch</span> <span class="n">newbranch</span> <span class="sr">/* Creates a new branch */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">checkout</span> <span class="n">newbranch</span> <span class="sr">/* Switch to new branch */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">checkout</span> <span class="o">-</span><span class="n">b</span> <span class="n">oldbranch</span> <span class="sr">/* Creates and switches to new branch  */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">newbranch</span> <span class="sr">/* Push new branch to remote */</span>
</span><span class='line'>
</span><span class='line'><span class="sr">/* Diff in Branches */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">diff</span> <span class="n">master</span><span class="o">.</span><span class="n">.otherbranch</span> <span class="sr">/* Shows diff */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">diff</span> <span class="o">--</span><span class="n">color</span><span class="o">-</span><span class="n">words</span> <span class="n">master</span><span class="o">.</span><span class="n">.otherbranch</span> <span class="sr">/*  Shows diff in color */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">branch</span> <span class="o">--</span><span class="n">merged</span> <span class="sr">/* Shows any merged branches */</span>
</span><span class='line'>
</span><span class='line'><span class="sr">/* Rename Branch */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">m</span> <span class="n">oldname</span> <span class="n">newname</span>
</span><span class='line'>
</span><span class='line'><span class="sr">/* Delete  Branch */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">d</span> <span class="n">nameofbranch</span>
</span><span class='line'>
</span><span class='line'><span class="sr">/* Merge Branch  */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">merge</span> <span class="n">branchname</span> <span class="sr">/* Be on the receiver branch to merge the other branch */</span>
</span><span class='line'>
</span><span class='line'><span class="sr">/* Merge Conflicts between the same file on 2 branches are marked in HEAD and other branch */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">merge</span> <span class="o">--</span><span class="nb">abort</span> <span class="sr">/*  Abort basically cancels the merge */</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Manually Fix Files and Commit - The Stash</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">stash</span> <span class="n">save</span> <span class="s2">&quot;message&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">stash</span> <span class="n">list</span> <span class="sr">/* Shows whats in stash */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">stash</span> <span class="n">show</span> <span class="o">-</span><span class="nb">p</span> <span class="n">stash</span><span class="err">@</span><span class="p">{</span><span class="mi">0</span><span class="p">}</span> <span class="sr">/* Show the diff in the stash */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">stash</span> <span class="n">pop</span> <span class="n">stash</span><span class="err">@</span><span class="p">{</span><span class="mi">0</span><span class="p">}</span> <span class="sr">/* Restores the stash deletes the tash */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">stash</span> <span class="n">apply</span> <span class="n">stash</span><span class="err">@</span><span class="p">{</span><span class="mi">0</span><span class="p">}</span> <span class="sr">/* Restores the stash and keeps the stash */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">stash</span> <span class="n">clear</span> <span class="sr">/* Removes all stash */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">stash</span> <span class="n">drop</span> <span class="n">stash</span><span class="err">@</span><span class="p">{</span><span class="mi">0</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Remotes Commands</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="n">add</span> <span class="n">origin</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">bunlong</span><span class="o">/</span><span class="nb">test</span><span class="o">.</span><span class="n">git</span> <span class="sr">/* Origin can be named whateve followed by the remote */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="sr">/* To show all remotes */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="n">show</span> <span class="n">origin</span> <span class="sr">/* To see remote URL*/</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="n">remove</span> <span class="n">origin</span> <span class="sr">/* To remove remote */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">remote</span> <span class="n">rm</span> <span class="n">origin</span> <span class="sr">/* To remove remote */</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Clone project. Push from local to Remote</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/* Cloning a GitHub Repo - create and get the URL of a new repository from GitHub, then clone that to your local repo, example below uses local repo named &#39;nameoffolder&#39; */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="nb">clone</span> <span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">bunlong</span><span class="o">/</span><span class="nb">test</span><span class="o">.</span><span class="n">git</span> <span class="n">nameoffolder</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="o">-</span><span class="n">u</span> <span class="n">origin</span> <span class="n">master</span> <span class="sr">/* Push to remote(origin) and branch(master) */</span>
</span><span class='line'>
</span><span class='line'><span class="sr">/* Push to Remote from Local - more - since when we pushed the local to remote we used -u parameter then the remote branch is tracked to the local branch and we just need to use... */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">push</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">newbranch</span> <span class="sr">/* Push a branch to a remote */</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Fetch Changes from a Cloned Repository</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">fetch</span> <span class="n">origin</span> <span class="sr">/* Pulls down latest committs from remote origin/m</span><span class="n">aster</span> <span class="ow">not</span> <span class="n">origin</span><span class="p">,</span> <span class="n">also</span> <span class="n">pull</span> <span class="n">down</span> <span class="n">any</span> <span class="n">branches</span> <span class="n">pushed</span> <span class="n">to</span> <span class="no">Repo</span> <span class="no">Fetch</span> <span class="n">before</span> <span class="n">you</span> <span class="n">work</span> <span class="no">Fetch</span> <span class="n">before</span> <span class="n">you</span> <span class="n">pull</span> <span class="no">Fetch</span> <span class="n">often</span> <span class="o">*/</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Merge with origin/master</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">merge</span> <span class="n">origin</span><span class="o">/</span><span class="n">master</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Fetch + Merge data ==> Pull</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">merge</span> <span class="n">origin</span><span class="o">/</span><span class="n">master</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Get Remote Branch</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">branch</span> <span class="n">branch_name</span> <span class="n">origin</span><span class="o">/</span><span class="n">branch_name</span> <span class="sr">/* This will bring the remote branch to local and track with the remote */</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Delete Branch</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">branch</span> <span class="o">-</span><span class="n">d</span> <span class="n">branch_name</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Checkout and Switch Branch and Track to Remote</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">checkout</span> <span class="o">-</span><span class="n">b</span> <span class="n">nontracking</span> <span class="n">origin</span><span class="o">/</span><span class="n">nontracking</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Remove Remote Branch</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="o">--</span><span class="n">delete</span> <span class="n">branch</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Undoing Changes</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">checkout</span> <span class="n">path</span><span class="o">-</span><span class="n">to</span><span class="o">-</span><span class="n">file</span> <span class="sr">/* Restores a file before it is staged */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">reset</span> <span class="no">HEAD</span> <span class="n">path</span><span class="o">-</span><span class="n">to</span><span class="o">-</span><span class="n">file</span> <span class="sr">/* If it is staged - restores a file from last commit and then git checkout path-to-file */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">checkout</span> <span class="no">HEAD</span><span class="o">^</span> <span class="n">path</span><span class="o">-</span><span class="n">to</span><span class="o">-</span><span class="n">file</span> <span class="sr">/* If is staged and committed - restores from last commit */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">reset</span> <span class="o">--</span><span class="n">hard</span> <span class="no">HEAD</span><span class="o">^</span> <span class="sr">/* Restore prior commit */</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Tag</strong>
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">tag</span> <span class="o">-</span><span class="n">a</span> <span class="n">v1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span> <span class="o">-</span><span class="n">m</span> <span class="s2">&quot;message&quot;</span> <span class="sr">/* Tagging a commit with a version number*/</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="o">--</span><span class="n">tags</span> <span class="sr">/* Pushes tag info to master remote */</span>
</span><span class='line'>
</span><span class='line'><span class="sr">/* You can checkout a commit and add a tag to that commit by checking out its SHA */</span>
</span><span class='line'>
</span><span class='line'><span class="n">git</span> <span class="n">checkout</span> <span class="n">f1f4a3d</span> <span class="sr">/* Checking out a commit - see the commit SHAS by git log */</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Freelancer]]></title>
    <link href="http://geekhmer.github.io/blog/2016/03/22/the-freelancer/"/>
    <updated>2016-03-22T16:45:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/03/22/the-freelancer</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/the_freelancer.jpg" width="600" alt="The Freelancer" />
</p>




<p>
  Freelancer is a self-employed person who pursues a profession without a long-term commitment to any particular employer. Your curiosity in this opportunity was probably sparked by posts marked &#8220;Freelance&#8221; or &#8220;Work from anywhere&#8221; on the myriad of job boards around the Web. Freelancing is equal parts freedom and responsibility. While you have the freedom to choose when you work, where you work and what you work on, you are also responsible for everything: deadlines, finding work, the quality of your work, communication and so much more.
</p>




<p>
  So, your skill may be in Web development, Graphic design and your approach is to freelance, but it’s not that easy: freelancing is no walk in the park. It could become a living nightmare if you’re not able to use your time efficiently and remain focused and motivated until a project comes to a close. It could also become a nightmare if you market yourself poorly, are constantly desperate for work or surrender too much power to a client, putting you in the position of a monkey-worker responding to petty demands. The reasons I love being a freelancer:
</p>




<p>
  <strong>Be your own boss</strong><br/>
  Report to no one but yourself. You will work on boring tasks.
</p>




<p>
  <strong>Enjoy your freedom</strong><br/>
  You have the freedom to work when and where you please, the freedom to structure your day as you please.
</p>




<p>
  <strong>Choose what to work on</strong><br/>
  Want to spend 50% of your time on open-source projects? Interested in building your own Web app? You have the power to make that a reality. Want to work exclusively on projects in social media? Make it happen.
</p>




<p>
  <strong>Set your rates</strong><br/>
  Value is both a reflection of how you perceive yourself and how others perceive you. Are you capable of meeting deadlines, communicating well and delivering quality code?
</p>




<p>
  If you are just starting out, charging $80 per hour will be hard; you have to earn that rate over time and with experience.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Continuous Learning]]></title>
    <link href="http://geekhmer.github.io/blog/2016/03/21/continuous-learning/"/>
    <updated>2016-03-21T14:15:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/03/21/continuous-learning</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/continuous_learning.jpg" width="600" alt="Continuous Learning" />
</p>




<p>
  <strong>WE LIVE IN INTERESTING TIMES.</strong> As development gets distributed across the globe, you learn there are lots of people capable of doing your job. <strong> You need to keep learning to stay marketable.</strong> Otherwise you&#8217;ll become a dinosaur, stuck in the same job until, one day, you&#8217;ll no longer be needed or your job get out-sourced to some cheaper resource.
</p>




<p>
  So what do you do about it? Here&#8217;s a list of ways to keep you learning. Many of these can be found on the Internet for free:
</p>




<p>
  + Read books, magazines, blogs, Twitter feeds, and websites. If you want to go deeper into a subject, consider joining a mailing list or new group.
</p>




<p>
  + If you really want to get immersed in a technology, get hand on&#8211;write some code.
</p>




<p>
  + A good way to learn something is to teach or speak about it. When people are going to listen to you and ask you questions, you&#8217;ll be highly motivated to learn. Try a lunch learn at work, a user group, or a local conference.
</p>




<p>
  + Join or start a study group or a local user group for a languages, technology, or discipline you are interested in.
</p>




<p>
  + Go to conferences. And if you can&#8217;t go, many conferences put their talks on line for free.
</p>




<p>
  + Long commute? Listen to podcasts.
</p>




<p>
  + Follow the advice of the Pragmatic Programmers and learn a new language every year.
</p>




<p>
  + Not everything you learn has to be about technology. Learn the domain you&#8217;re working in so you can better understand the requirements and help solve the business problem. Learning how to be more productive&#8211;how to work better&#8211;is another good option.
</p>




<p>
  + Go back to school.
</p>




<p>
  You don&#8217;t have to spend every waking hour learning. A little time&#8211;say, each week&#8211;is better than nothing. There is (or should be) a life outside of work.
</p>




<p>
  <strong>Technology changes fast. Don&#8217;t get left behind.</strong>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Learn To Code Movement]]></title>
    <link href="http://geekhmer.github.io/blog/2016/03/14/the-learn-to-code-movement/"/>
    <updated>2016-03-14T15:49:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/03/14/the-learn-to-code-movement</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/the_learn_to_code_movement.jpg" width="600" alt="The Learn To Code Movement" />
</p>




<p>
  I’ve started to wonder if by focusing so much on learning code, we’re losing focus on how to support one of our most important assets in the technology industry.
</p>




<p>
  Technology and languages change constantly, so what was taught in a college coding class a few years ago is now outdated.
</p>




<p>
  This is a big problem, and one that will only become more severe over time. Just think about an iOS developer who in a few years might be coding entirely in Swift , Apple’s newly launched language. This type of rapid change is absent from almost all other industries, yet remains a serious concern for us.
</p>




<p>
  Here are just a few ideas that come to mind:
</p>




<p>
  <strong>1. Encourage pair programming</strong><br/>
  In case you’re not familiar, this is where two programmers work on the same computer at the same time so they can solve problems together. Every programmer has different strengths and weaknesses, so taking time to code together with different people in the company can be a great learning experience.
</p>




<p>
  <strong>2. Make learning free</strong><br/>
  A lot of technology companies offer some pretty awesome benefits, like catered lunches, healthy snacks and gym memberships. Education should be a part of that, too. Give employees budgets to buy educational books, or offer to pay for couple technical conferences a year that they may want to attend. The easier you make it for your team to continue learning, the more likely they are to take advantage of educational resources—and that ultimately helps both them and your company.
</p>




<p>
  <strong>3. Set learning time during work hours</strong><br/>
  Some companies set aside a few hours every week for everyone to stop working and spend time doing something that makes them better. This could be taking a typing class, playing an online programming course, refactoring some old code, or even coding a side project using a new language.
</p>




<p>
  <strong>Not one way to learning but many.</strong>
</p>




<p>
  learning is a personal process and different things work for different people. Some people like books, others prefer online videos, and some just like to dig in and experiment. The best way to tackle different learning styles is by having a good mix of tools—and ways for developers to get access to them—so they continue to grow in the way that’s best for them.
</p>




<p>
  <strong>Have you successfully implemented an education program for your development team?</strong>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3 Ways to Motivate People to Work Harder Faster and Smarter]]></title>
    <link href="http://geekhmer.github.io/blog/2016/03/09/3-ways-to-motivate-people-to-work-harder-faster-and-smarter/"/>
    <updated>2016-03-09T15:32:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/03/09/3-ways-to-motivate-people-to-work-harder-faster-and-smarter</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/3_ways_to_motivate_people_to_work_harder_faster_and_smarter.png" width="600" alt="3 Ways to Motivate People to Work Harder Faster and Smarter" />
</p>




<p>
  <strong>1. Threaten them.</strong>
</p>




<p>
  <strong>2. Pay them lots of money.</strong>
</p>




<p>
  <strong>3. Make their work/work space fun.</strong>
</p>




<p>
  In today&#8217;s workplace, threatening people has not been effective. Paying them lots of money (even if you can afford it) has only shown short-term success. Only number three, making their workplace enjoyable, has a track record of effecting real change. It is time managers learned how to create an atmosphere that is challenging, creative and fun for employees as well as for themselves.
</p>




<blockquote><p>FUN IS PRODUCTIVE</p></blockquote>




<p>
  Imagine a work world where people love their work environment, and they are calm, stress-free and happy all day long. People who are in good spirits are more likely to be productive. Their mental attitude produces increased oxygen, endorphins, and blood flow to the brain, which enables them to think more clearly and creatively. They are more relaxed, more accepting of others, and more likely to share their sense of humor.
</p>




<p>
  Laughter creates a bond that brings others together; people like to be with employees who are having fun. Creativity, intuition and flexibility are key to successful operation of organizations today. In stimulating environments, employees enjoy their time at work and they will also excel at work. A fun workplace is not only more productive, but it attracts people and profits.
</p>




<p>
  So far so good take it easy&#8230; let create a Fun Workplace&#8230; :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Executing Background Tasks with Scheduler in Rails]]></title>
    <link href="http://geekhmer.github.io/blog/2016/03/04/executing-background-tasks-with-scheduler-in-rails/"/>
    <updated>2016-03-04T16:42:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/03/04/executing-background-tasks-with-scheduler-in-rails</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/happy_ruby_on_rails.jpg" width="400" alt="Executing Background Tasks with Scheduler in Rails" />
</p>




<p>
  <a href="https://rubygems.org/gems/rufus-scheduler/versions/3.2.0" target="_blank">rufus-scheduler</a> is a handy gem that allows you to perform background jobs. In this article we will show you how to use rufus-scheduler in your Rails applications. Let&#8217;s get started:
</p>




<h3>Setup</h3>




<p>
  In order to use rufus-scheduler, we must first add the rufus-scheduler gem to our Gemfile. To do this, open up your Gemfile and add in the line listed below:
</p>




<figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;rufus-scheduler&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Run a bundle install to install the gem:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Great, we need to create an initializer that will contain the jobs we wish to schedule. Create a new initializer called scheduler.rb in the <code>config/initializers</code> directory and add in the code listed below:
</p>




<figure class='code'><figcaption><span>config/initializers/scheduler.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rufus-scheduler&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">scheduler</span> <span class="o">=</span> <span class="ss">Rufus</span><span class="p">:</span><span class="ss">:Scheduler</span><span class="o">::</span><span class="n">singleton</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># jobs go below here.</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Now we are ready to schedule jobs.
</p>




<h3>Scheduling the Jobs</h3>




<p>
  rufus-scheduler provides a simple syntax for scheduling jobs. You can schedule both one time jobs and recurring jobs. One time jobs can be either scheduled at a specific time, or you can tell rufus to wait a specific amount of time before running the job (a delayed job). For recurring jobs and delayed jobs, you can either use a simple plain English (30m = 30 minutes, etc.) format or you can use the cron format for scheduling jobs. For this article we&#8217;ll focus on the English format:
</p>




<p>
  <strong>Recurring the Jobs</strong><br/>
  Scheduling recurring jobs is easy. Simply use the following format in your scheduler.rb file:
</p>




<figure class='code'><figcaption><span>config/initializers/scheduler.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scheduler</span><span class="o">.</span><span class="n">every</span> <span class="s1">&#39;5s&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># do stuff</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  The code above would perform your background task every 5 seconds. The list below will give you an idea of what time units are supported:
</p>




<p>
  <strong>s</strong> Example: 5s - seconds, specifies the number of seconds you wish to wait.<br/>
  <strong>m</strong> Example: 5m - the number of minutes you wish to wait.<br/>
  <strong>h</strong> Example: 5h - the number of hours you wish to wait.<br/>
  <strong>d</strong> Example: 5d - the number of days you wish to wait.<br/>
  <strong>w</strong> Example: 5w - the number of weeks you wish to wait.<br/>
  <strong>M</strong> Example: 5M - the number of months you wish to wait.<br/>
  <strong>y</strong> Example: 1y - the number of years you wish to wait.
</p>




<p>
  For example, the following code would tell rufus you wish to schedule a job for every 11 and a half hours:
</p>




<figure class='code'><figcaption><span>config/initializers/scheduler.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scheduler</span><span class="o">.</span><span class="n">every</span> <span class="s1">&#39;11h30m&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># do stuff</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Scheduling a delayed job is easy. The syntax is similar to the recurring syntax listed above, but we use the <code>.in</code> method instead of <code>.every</code>. For example, the following code would run a task 4 hours after the server starts:
</p>




<figure class='code'><figcaption><span>config/initializers/scheduler.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scheduler</span><span class="o">.</span><span class="n">in</span> <span class="s1">&#39;4h&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># do stuff</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  <strong>Scheduling the Jobs for Specific Dates/Times</strong><br/>
  You can also schedule a job for a specific date and time. To do this we use the at method. For example, the following code would run at 12:01am on December 1st, 2017:
</p>




<figure class='code'><figcaption><span>config/initializers/scheduler.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scheduler</span><span class="o">.</span><span class="n">at</span> <span class="s1">&#39;2017/12/01 00:01:00&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="c1"># do stuff</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<h3>Important Caveats</h3>




<p>
  1. Because rufus-scheduler runs in process, the scheduler will reset if your Rails server gets restarted. This means that the timer for your jobs will get reset, so don&#8217;t count on any monthly or yearly jobs getting called. If you need to persist jobs across server resets, use a job backend. We will show you how to do this in another article.<br/>
  2. Rufus does not work with Active Job.<br/>
  3. Some additional setup is needed for production environments (see below).
</p>




<h3>Production Setup</h3>




<p>
  Production servers require a bit of additional setup. On most production web servers, idle Ruby processes are killed. In order for rufus to work, you&#8217;ll need to stop this from happening. For Passenger/Nginx you can copy the following code below to your <code>nginx.conf</code> config file for your website after the line that says <code>passenger_enabled on;</code>.
</p>




<figure class='code'><figcaption><span>nginx.conf </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">passenger_spawn_method</span> <span class="n">direct</span><span class="p">;</span>
</span><span class='line'><span class="n">passenger_min_instances</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="n">passenger_pool_idle_time</span> <span class="mi">0</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  rufus-scheduler is a simple, easy to use scheduler that provides great functionality. It can be used for stuff like sending emails, cleaning up temp files, and much more.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[4 Startups Mark Zuckerberg Created Before Facebook]]></title>
    <link href="http://geekhmer.github.io/blog/2016/03/01/4-startups-mark-zuckerberg-created-before-facebook/"/>
    <updated>2016-03-01T14:19:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/03/01/4-startups-mark-zuckerberg-created-before-facebook</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/facebook.jpg" width="500" alt="4 Startups Mark Zuckerberg Created Before Facebook" />
</p>




<p>
  <strong>1. ZuckNet</strong><br/>
  Mark’s father – Edward Zuckerberg was a dental practitioner, who ran his clinic from the first floor of their home. This made communication between the family members a hassle, because everyone was always running up and down the stairs. To combat with this problem, 11 year old Zuckerberg came up with the idea of an intranet that allowed anyone to login from any computer in the house and send a message. This served as an instant chat system, that was exclusive just to the Zuckerberg family. Randi Zukerberg, Mark’s elder sister, later told People.com how his this was &#8220;the first example of when he started building things-and he never stopped.&#8221;
</p>




<p>
  Another interesting fact about ZuckNet is that it was quite similar to the very popular AOL instant that into existence, later the same year. To quote Randi again, Mark was &#8216;10 levels ahead&#8217; even at 11.
</p>




<p>
  <strong>2. Synapse Media Player</strong><br/>
</p>




<p>
  <img src="http://geekhmer.github.io/images/synapse.jpg" width="500" alt="4 Startups Mark Zuckerberg Created Before Facebook" />
</p>




<p>
  In high school, Zuckerberg wrote a computer program that used machine learning to determine a user&#8217;s music listening habits and recommended more music based on the genre, artist, taste, which was pretty much like what Last.fm does today. This app was built in 2000, and was featured by SlashDot and PC magazine back then with an amazing review + a rating of 3 on 5.
</p>




<p>
  Both Microsoft and AOL approached Zuckerberg for buying Synapse + a job offer, but he turned them down and posted the app online for free. He also turned down a full-time employment opportunity at the two corporate giants and went on to enroll at Harvard.
</p>




<p>
  An excerpt from the review: &#8220;This is by far the most innovative media player I have see to date the only function I find it lacking is a more advanced tag editor and the ability to group by Album.&#8221;
</p>




<p>
  <strong>3. CourseMatch</strong><br/>
  By the time Zuckerberg started classes at Harvard, he was already known as the, &#8216;Programming prodigy&#8217;. As an early project in his sophomore year, he started CourseMatch, which helped the students at Harvard in picking the courses they want, at the start of every semester. Through CourseMatch, you could see the number of students enrolled in a particular course and a list of all the people who signed up for the same course, allowing you to find out all the courses your class-mates were taking, before making a choice.
</p>




<p>
  <strong>4. FaceMash</strong><br/>
</p>




<p>
  <img src="http://geekhmer.github.io/images/facemash.jpg" width="500" alt="4 Startups Mark Zuckerberg Created Before Facebook" />
</p>




<p>
  FaceMash is by far the most talked about things that Zuckerberg created as it is said to have initiated the beginning of Facebook. FaceMash presented the user with two pictures of either male or female students at Harvard and asked them to choose the better looking one.
</p>




<p>
  Arie Hasit, Zuckerberg&#8217;s room-mate at Harvard explained that he had built the Website &#8216;just for fun&#8217;.
</p>




<p>
  The Website soon went viral after its launch over the weekend. The traffic was so overwhelming that it lead to the shutting down of one of the Harvard’s network switches making it impossible for a group of students to access the internet.
</p>




<p>
  The site was taken down by Harvard management four hours later, after multiple complaints from students stating that their pictures were used in FaceMash without prior permission.
</p>




<p>
  FaceMash also landed Zuckerberg into trouble.He was brought before the administrative board and was charged with  violation of internet privacy rules and reach of computer security. He was made to publicly apologize, while the student paper wrote articles about how &#8216;inappropriate the whole concept of FaceMash was&#8217;.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[52 Simple Things to Be Your Best Every Day]]></title>
    <link href="http://geekhmer.github.io/blog/2016/02/25/52-simple-things-to-be-your-best-every-day/"/>
    <updated>2016-02-25T14:46:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/02/25/52-simple-things-to-be-your-best-every-day</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/52_simple _things.png" width="500" alt="52 Simple Things to Be Your Best Every Day" />
</p>




<p>
  Millions of people go to work every day, but they don&#8217;t bring the best parts of themselves to the job&#8211;often because they don&#8217;t know how. They may be stuck in a rut, never quite able to feel they&#8217;re doing truly excellent work.
</p>




<p>
  If you like what you do and you want to take it to the next level, concentrate on these 52 simple things.
</p>




<p>
  <strong>1. Make people feel special:</strong> encourage and empower people at every chance.
</p>




<p>
  <strong>2. Find work you love and put your heart and soul into it:</strong> choose a job you love and you will never have to work another day in your life.
</p>




<p>
  <strong>3. Focus on the task at hand:</strong> do the best you can where you are with what you have.
</p>




<p>
  <strong>4. Treat every task as important:</strong> every job is a self-portrait of the person who does it.
</p>




<p>
  <strong>5. Always do the right thing, even when it&#8217;s hard:</strong> don&#8217;t let what you cannot do interfere with what you can.
</p>




<p>
  <strong>6. Delegate whenever you can:</strong> you get the best out of people when you believe in their talent.
</p>




<p>
  <strong>7. Take initiative:</strong> even if you&#8217;re already very good at your job, do whatever you can to push your limits.
</p>




<p>
  <strong>8. Be part of the solution:</strong> don&#8217;t be known as someone who is always complaining about something.
</p>




<p>
  <strong>9. Tell the truth:</strong> let people know they can count on you to be honest even when it creates difficulties.
</p>




<p>
  <strong>10. Help as many people as you can along the way:</strong> become someone people seek out for assistance.
</p>




<p>
  <strong>11. Avoid gossip always:</strong> it should go without saying, but turn a deaf ear to gossip and rumors.
</p>




<p>
  <strong>12. Maintain a positive attitude:</strong> a positive attitude is always contagious.
</p>




<p>
  <strong>13. Double your income by tripling your knowledge:</strong> don&#8217;t let your knowledge and skills become outdated.
</p>




<p>
  <strong>14. Mind your emotions:</strong> when you&#8217;re angry, count to 10; before you speak, count to 100.
</p>




<p>
  <strong>15. Make small daily improvements for stunning results:</strong> most of the time, success consists of a series of little daily efforts.
</p>




<p>
  <strong>16. Sharpen your skills and focus on mastering your talents:</strong> avoid boredom&#8211;and learn a new skill to keep you on top of your game.
</p>




<p>
  <strong>17. Be masterful at what you do despite the obstacles:</strong> no person fails who does their best.
</p>




<p>
  <strong>18. Don&#8217;t feed your fears:</strong> have faith that you will make it through.
</p>




<p>
  <strong>19. Always be prepared:</strong> success occurs when opportunity meets preparation.
</p>




<p>
  <strong>20. Ask for help when you need it:</strong> there is no such thing as a self-made person; you will reach your goals only with the help of others.
</p>




<p>
  <strong>21. Set goals and get results:</strong> it&#8217;s important to know where you are going, how you will get there, and what the outcome will be.
</p>




<p>
  <strong>22. Be all that you can be:</strong> don&#8217;t settle for less than your highest potential.
</p>




<p>
  <strong>23. Don&#8217;t worry about getting credit for getting things done:</strong> you can accomplish almost anything if you don&#8217;t worry about who gets the credit.
</p>




<p>
  <strong>24. Preserve your integrity:</strong> make daily choices that are consistent with your values.
</p>




<p>
  <strong>25. Be a good role model:</strong> live by your values and walk your talk.
</p>




<p>
  <strong>26. Don&#8217;t accept &#8220;good enough&#8221;:</strong> do everything with excellence.
</p>




<p>
  <strong>27. Persevere with persistence:</strong> success is largely a matter of hanging on long after others have let go.
</p>




<p>
  <strong>28. Consider leadership something that exists wherever you are:</strong> make the most of yourself in every situation.
</p>




<p>
  <strong>29. Say please and thank you:</strong> it really does matter.
</p>




<p>
  <strong>30. Show respect:</strong> the more you give, the more you receive.
</p>




<p>
  <strong>31. Accept responsibility:</strong> take full responsibility with full confidence to get the job done well.
</p>




<p>
  <strong>32. Be determined to be your best:</strong> the difference between the impossible and the possible lies in your determination.
</p>




<p>
  <strong>33. Remember you are what you think:</strong> it is important to accentuate the positive and eliminate the negative.
</p>




<p>
  <strong>34. Erase your limitations:</strong> when you can conquer your fears, it&#8217;s like lifting a hundred pounds of cement off your shoulders.
</p>




<p>
  <strong>35. Treat failure as a step toward success:</strong> failure is never fatal, but not trying is.
</p>




<p>
  <strong>36. Be trustworthy:</strong> make promises and keep your word.
</p>




<p>
  <strong>37. Become an expert:</strong> make the most of your knowledge.
</p>




<p>
  <strong>38. Respect people&#8217;s time:</strong> everyone is busy. when you have someone&#8217;s attention, be quick and succinct.
</p>




<p>
  <strong>39. Be an active listener:</strong> make sure you listen at least as much as you speak.
</p>




<p>
  <strong>40. Honor your commitments:</strong> when you make a promise, keep it.
</p>




<p>
  <strong>41. Be a great team player:</strong> maximize your contribution.
</p>




<p>
  <strong>42. Let go of restrictions:</strong> don&#8217;t be limited by the scope of your thinking. Think big and succeed big.
</p>




<p>
  <strong>43. Deliver results:</strong> when you are given a directive, get it done well and on time.
</p>




<p>
  <strong>44. Be transparent:</strong> the more transparent you are with information, the more people will understand why you do what you do.
</p>




<p>
  <strong>45. Be kind:</strong> be unfailingly kind, polite, and gracious with everyone you meet&#8211;no matter what his or her role, and no matter how you&#8217;re feeling.
</p>




<p>
  <strong>46. Manage your stress:</strong> take every action to minimize stress at work, because you don&#8217;t want it to get the best of you.
</p>




<p>
  <strong>47. Be dependable:</strong> be consistent in yourself and reliable in your performance.
</p>




<p>
  <strong>48. Communicate with heart:</strong> sincerity helps you avoid many blunders and misunderstandings.
</p>




<p>
  <strong>49. Work with purpose:</strong> bring meaning to everything you do.
</p>




<p>
  <strong>50. Be true to yourself:</strong> everything you do should represent who you are.
</p>




<p>
  <strong>51. Make every moment count:</strong> we do not count years until there is nothing else to count.
</p>




<p>
  <strong>52. Lead from within:</strong> everything you need for a successful life is within you now.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sessions Expiring]]></title>
    <link href="http://geekhmer.github.io/blog/2016/02/23/sessions-expiring/"/>
    <updated>2016-02-23T14:54:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/02/23/sessions-expiring</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/happy_ruby_on_rails.jpg" width="400" alt="Sessions Expiring" />
</p>




<p>
  To improve user security, we may wish to expire the user&#8217;s session after they are inactive for a given amount of time. In order to do this, we simply set the <code>expire_after</code> parameter when setting up our session store. For example:
</p>




<figure class='code'><figcaption><span>config/initializers/session_store.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">session_store</span> <span class="ss">:cookie_store</span><span class="p">,</span> <span class="ss">key</span><span class="p">:</span> <span class="s1">&#39;_example_session&#39;</span><span class="p">,</span> <span class="n">expire_after</span><span class="p">:</span> <span class="mi">15</span><span class="o">.</span><span class="n">minutes</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  The line above would expire the session after 15 minutes of inactivity. This means that the user&#8217;s session variables would get wiped once time reaches 15 minutes since the user last accessed the Rails application. If the user refreshes the page, the timer gets refreshed.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dynamic Programming with Ruby]]></title>
    <link href="http://geekhmer.github.io/blog/2016/02/23/dynamic-programming-with-ruby/"/>
    <updated>2016-02-23T10:32:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/02/23/dynamic-programming-with-ruby</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/happy_ruby_on_rails.jpg" width="400" alt="Dynamic Programming with Ruby" />
</p>




<p>
  I had a task to analyse the value of a cookie set by a tool on the subdomain. The value of the cookie set looked something like this:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="s2">&quot;18337|20120404|True#Q0A|18342|21-30|20120404|18344#Q1|18349|NO PARTNER|20120404|18351#Q2|18352|EMPLOYED|20120404|18353#Q4|18432|STRUGGLING|18539|WANT|20120404|18541#Q3|18358|EMPLOYED|20120404|18359#&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  My task was to try to decipher the values of set inside the cookie and how they changed depending on the progress through the application that set the values. I was told the answers to questions sat next to the ID of the question. For example, the answer to the &#8220;age&#8221; question (21-30) was related to the question 18342 and would always appear as |18342|21-30|. I started out with some tests and ended up with a method like this:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Answers</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:age</span><span class="p">,</span> <span class="ss">:employment_status</span><span class="p">,</span> <span class="ss">:has_partner</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">parse</span><span class="p">(</span><span class="n">cookie_contents</span><span class="p">)</span>
</span><span class='line'>    <span class="n">items</span> <span class="o">=</span> <span class="n">cookie_contents</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">items</span><span class="o">.</span><span class="n">each_index</span> <span class="k">do</span> <span class="o">|</span> <span class="n">i</span> <span class="o">|</span>
</span><span class='line'>       <span class="n">current</span> <span class="o">=</span> <span class="n">items</span><span class="o">[</span><span class="n">i</span><span class="o">]</span>
</span><span class='line'>       <span class="k">if</span> <span class="p">(</span><span class="n">current</span> <span class="o">==</span> <span class="s2">&quot;18342&quot;</span><span class="p">)</span>
</span><span class='line'>         <span class="vi">@age</span> <span class="o">=</span> <span class="n">items</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>       <span class="k">elsif</span> <span class="p">(</span><span class="n">current</span> <span class="o">==</span> <span class="s2">&quot;18352&quot;</span><span class="p">)</span>
</span><span class='line'>         <span class="vi">@employment_status</span> <span class="o">=</span> <span class="n">items</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>       <span class="k">elsif</span> <span class="p">(</span><span class="n">current</span> <span class="o">==</span> <span class="s2">&quot;18349&quot;</span><span class="p">)</span>
</span><span class='line'>         <span class="vi">@current_partner</span> <span class="o">=</span> <span class="n">items</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>       <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  Of course, I wanted to avoid the growing if-else statement so found a way that I could do it dynamically and focus just on the mapping from an ID to an attribute. The resulting code looked like this:
</p>




<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Answers</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:age</span><span class="p">,</span> <span class="ss">:employment_status</span><span class="p">,</span> <span class="ss">:has_partner</span>
</span><span class='line'>
</span><span class='line'>  <span class="no">Mappings</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;18342&quot;</span> <span class="o">=&gt;</span> <span class="ss">:age</span><span class="o">=</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;18352&quot;</span> <span class="o">=&gt;</span> <span class="ss">:employment_status</span><span class="o">=</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;18349&quot;</span> <span class="o">=&gt;</span> <span class="ss">:has_partner</span><span class="o">=</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">parse</span><span class="p">(</span><span class="n">cookie_contents</span><span class="p">)</span>
</span><span class='line'>    <span class="n">items</span> <span class="o">=</span> <span class="n">cookie_contents</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">items</span><span class="o">.</span><span class="n">each_index</span> <span class="k">do</span> <span class="o">|</span> <span class="n">i</span> <span class="o">|</span>
</span><span class='line'>       <span class="n">current</span> <span class="o">=</span> <span class="n">items</span><span class="o">[</span><span class="n">i</span><span class="o">]</span>
</span><span class='line'>       <span class="k">if</span> <span class="p">(</span><span class="no">Mappings</span><span class="o">.</span><span class="n">has_key?</span><span class="p">(</span><span class="n">current</span><span class="p">))</span>
</span><span class='line'>          <span class="nb">self</span><span class="o">.</span><span class="n">public_send</span><span class="p">(</span><span class="no">Mappings</span><span class="o">[</span><span class="n">current</span><span class="o">]</span><span class="p">,</span> <span class="n">items</span><span class="o">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>       <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<p>
  By the end of the analysis, I discovered that multiple IDs mapped to the same properties and all I had to do was add another entry into the map defining which ID mapped to what property on the object.
</p>




<p>
  So far so good, That&#8217;s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
</feed>
