https://cambodesign.com/online-payments-in-cambodia/


=============================================================================
https://www.digitalocean.com/community/tutorials/how-to-configure-nginx-as-a-reverse-proxy-for-apache
bundle exec rake new_post["Why Is Website Maintenance Important?"]
=============================================================================



==============================================================
http://www.bonappetit.com/drinks/non-alcoholic
===========================================================================
https://richonrails.com/articles/background-tasks-with-rufus-scheduler
===========================================================================


Stripe::Plan.all
Stripe::Plan.methods
Stripe::Plan.retrieve("plan-free")

p1 = Stripe::Plan.retrieve("plan-free")
p1 = Stripe::Plan.retrieve("plan-good")
p1 = Stripe::Plan.retrieve("plan-awesome")

Plan.create(:uuid => p1.id, :name => p1.name, :price => p1.amount, :interval => p1.interval)

====================================

bundle exec rake new_post["Online Payment Gateway in Cambodia"]


https://opensource.com/business/16/1/five-keys-project-success-github?sc_cid=701600000011jJaAAI

audited

http://betterexplained.com/articles/intermediate-rails-understanding-models-views-and-controllers/

http://www.inc.com/lolly-daskal/52-simple-ways-to-be-your-best-every-week.html
=======================================================================
http://stackoverflow.com/questions/15165260/rails-observer-alternatives-for-4-0

https://signalvnoise.com/posts/3372-put-chubby-models-on-a-diet-with-concerns

http://blog.andrewray.me/the-reactjs-controller-view-pattern/
=======================================================================
http://hectorperezarenas.com/2015/12/26/rails-5-tutorial-how-to-create-a-chat-with-action-cable/

https://github.com/carlosbrando/octopress.tmbundle/blob/master/Tests/test.markdown
================================================================================================
bundle exec rake generate
bundle exec rake preview
bundle exec rake new_post["Installation and Configuration Nginx as Reverse Proxy for Apache on Ubuntu Server"]
bundle exec rake deploy

http://derickbailey.com/email_archive/what-will-they-say-about-you/

bundle exec rake new_post["Copy to Clipboard without Flash with Clipboard.js"]
bundle exec rake new_page["52 Simple Things to Be Your Best Every Day"]

http://buildwithreact.com/tutorial/state
http://arkency.com/
================================================================================================
http://trigonakis.com/blog/2011/02/27/introduction-to-erlang-post-series/
http://www.erlang.org/doc/reference_manual/data_types.html
================================================================================================
http://learnyousomeerlang.com/recursion
http://en.wikibooks.org/wiki/Erlang_Programming/Techniques_of_Recursion
http://erlangcentral.org/wiki/index.php?title=Recursion
http://www.erlang.org/doc/reference_manual/functions.html
http://trigonakis.com/blog/2011/03/30/introduction-to-erlang-recursion-12/
https://github.com/nickmcdowall/Erlang-Examples/wiki/Hot-Code-Swapping
https://github.com/drobakowski/awesome-erlang#code-analysis

http://git-scm.com/book/en/v2/Git-on-the-Server-Setting-Up-the-Server

http://richonrails.com

http://noraesae.github.io/perfect-scrollbar/

http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/docs/examples.html

http://getawesomeness.com/get/ruby

https://hackhands.com/beginners-guide-ruby
https://github.com/bbatsov/rails-style-guide

http://codefol.io/posts/What-Hooks-does-Ruby-have-for-Metaprogramming

http://www.leighhalliday.com/categories/ruby-on-rails
================================================================================================
http://richonrails.com/articles/hashing-data-in-ruby

================================================================================================
http://richonrails.com/articles/building-a-simple-rake-task

http://adamniedzielski.github.io/blog/2015/03/22/using-message-queue-in-rails/
================================================================================================

http://richonrails.com/articles/rails-4-code-concerns-in-active-record-models
http://feed43.com/

http://richonrails.com/articles/ip-geolocation-in-ruby-on-rails
================================================================================================

https://www.airpair.com/ruby-on-rails/posts/ruby-on-rails-the-modular-way

============================================================================
https://github.com/imathis/octopress/wiki/3rd-party-plugins
============================================================================

======================================================
ReactJS
======================================================
http://ricostacruz.com/cheatsheets/react.html
https://medium.com/react-tutorials/react-properties-ef11cd55caa0
======================================================

=======================================================================

/*
 * Components
 */


var ContactForm = React.createClass({
  propTypes: {
    value: React.PropTypes.object.isRequired,
    onChange: React.PropTypes.func.isRequired,
    onSubmit: React.PropTypes.func.isRequired,
  },

  onEmailInput: function(e) {
    this.props.onChange(Object.assign({}, this.props.value, {email: e.target.value}));
  },

  onNameInput: function(e) {
    this.props.onChange(Object.assign({}, this.props.value, {name: e.target.value}));
  },

  onSubmit: function(e) {
    e.preventDefault();
    this.refs.email.focus();
    this.props.onSubmit();
  },
  
  componentDidUpdate: function(prevProps) {
    var value = this.props.value;
    var prevValue = prevProps.value;
    
    if (this.isMounted && value.errors && value.errors != prevValue.errors) {
      if (value.errors.email) {
        this.refs.email.focus();
      }
      else if (value.errors.name) {
        this.refs.name.focus();
      }
    }
  },

  render: function() {
    var errors = this.props.value.errors || {};

    return (
      React.createElement('form', {onSubmit: this.onSubmit, className: 'ContactForm', noValidate: true},
        React.createElement('input', {
          type: 'email',
          className: errors.email && 'ContactForm-error',
          placeholder: 'Email',
          onInput: this.onEmailInput,
          value: this.props.value.email,
          ref: 'email',
          autoFocus: true,
        }),
        React.createElement('input', {
          type: 'text',
          className: errors.name && 'ContactForm-error',
          placeholder: 'Name',
          onInput: this.onNameInput,
          value: this.props.value.name,
          ref: 'name',
        }),
        React.createElement('button', {type: 'submit'}, "Add Contact")
      )
    );
  },
});


var ContactItem = React.createClass({
  propTypes: {
    name: React.PropTypes.string.isRequired,
    email: React.PropTypes.string.isRequired,
  },

  render: function() {
    return (
      React.createElement('li', {className: 'ContactItem'},
        React.createElement('h2', {className: 'ContactItem-email'}, this.props.email),
        React.createElement('span', {className: 'ContactItem-name'}, this.props.name)
      )
    );
  },
});


var ContactView = React.createClass({
  propTypes: {
    contacts: React.PropTypes.array.isRequired,
    newContact: React.PropTypes.object.isRequired,
    onNewContactChange: React.PropTypes.func.isRequired,
    onNewContactSubmit: React.PropTypes.func.isRequired,
  },

  render: function() {
    var contactItemElements = this.props.contacts
      .map(function(contact) { return React.createElement(ContactItem, contact); });

    return (
      React.createElement('div', {className: 'ContactView'},
        React.createElement('h1', {className: 'ContactView-title'}, "Contacts"),
        React.createElement('ul', {className: 'ContactView-list'}, contactItemElements),
        React.createElement(ContactForm, {
          value: this.props.newContact,
          onChange: this.props.onNewContactChange,
          onSubmit: this.props.onNewContactSubmit,
        })
      )
    );
  },
});



/*
 * Constants
 */


var CONTACT_TEMPLATE = {name: "", email: "", description: "", errors: null};




/*
 * Model
 */


// The app's complete current state
var state = {};

// Make the given changes to the state and perform any required housekeeping
function setState(changes) {
  Object.assign(state, changes);
  
  ReactDOM.render(
    React.createElement(ContactView, Object.assign({}, state, {
      onNewContactChange: updateNewContact,
      onNewContactSubmit: submitNewContact,
    })),
    document.getElementById('react-app')
  );
}

// Set initial data
setState({
  contacts: [
    {key: 1, name: "James K Nelson - Front End Unicorn", email: "james@jamesknelson.com"},
    {key: 2, name: "Jim", email: "jim@example.com"},
  ],
  newContact: Object.assign({}, CONTACT_TEMPLATE),
});



/*
 * Actions
 */


function updateNewContact(contact) {
  setState({ newContact: contact });
}


function submitNewContact() {
  var contact = Object.assign({}, state.newContact, {key: state.contacts.length + 1, errors: {}});

  if (!/.+@.+\..+/.test(contact.email)) {
    contact.errors.email = ["Please enter your new contact's email"];
  }
  if (!contact.name) {
    contact.errors.name = ["Please enter your new contact's name"];
  }
  
  setState(
    Object.keys(contact.errors).length === 0
    ? {
        newContact: Object.assign({}, CONTACT_TEMPLATE),
        contacts: state.contacts.slice(0).concat(contact),
      }
    : { newContact: contact }
  );
}
======================================================================================


React.js is the breakthrough UI Framework from Facebook that is used to build composable UI components for large scale applications.

It was about time that the Facebook and Instagram teams shared their experience in building large scale web applications with the larger community. More precisely, shared the lessons they learned in production. This is the year of Facebook releasing its own dog food to the developer community in the form of a declarative, highly composable JavaScript UI framework called React.js. The most fascinating aspect of React.js is that at its core it is designed to react to underlying data changes and is aware enough to update only the changed parts. This idea is powerful for large scale applications with frequent data changes.

To get started, you can download the React.js framework starter kit from here. Once you have downloaded the framework you can start using the resources to create your React.js UI using any of your favorite editors, such as Sublime Text  or Notepad++. The framework uses the concept of virtual DOM diff for high performance and optionally supports a new XML notation for creating JS objects using HTML syntax (JSX). The first step in using the React.js framework in your application is to provide a reference to the react.js file in your HTML5 UI.

https://cloudplatform.googleblog.com/2016/05/Ruby-on-Google-App-Engine-goes-betaruntime.html


The Requirements to Applying to Study in USA at MOHARISHI UNIVERSITY OF MANAGEMENT

bundle exec rake new_post["Application Steps for Applying to Study Masters in Computer Science at MAHARISHI UNIVERSITY OF MANAGEMENT USA"]


http://www.tverka.com/job-list/15526-head-of-software-development

======================

https://www.howtoforge.com/tutorial/how-to-install-nginx-as-reverse-proxy-for-apache-on-ubuntu-15-10/
=======================

https://richonrails.com/articles/seeding-your-database-with-seed-fu