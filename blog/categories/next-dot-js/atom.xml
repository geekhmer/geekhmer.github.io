<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Next.js | GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/blog/categories/next-dot-js/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2018-04-15T21:57:32+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Serve static files sitemap.xml, robots.txt and favicon.ico with Next.js]]></title>
    <link href="http://geekhmer.github.io/blog/2018/04/07/serve-static-files-sitemap-dot-xml-robots-dot-txt-and-favicon-dot-ico-with-next-dot-js/"/>
    <updated>2018-04-07T15:22:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2018/04/07/serve-static-files-sitemap-dot-xml-robots-dot-txt-and-favicon-dot-ico-with-next-dot-js</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/nextjs.png" width="500" alt="Serve static files sitemap.xml, robots.txt and favicon.ico with Next.js" />
</p>


<p>Well, to serve static files such as sitemap.xml, robots.txt and favicon.ico with Next.js you just put those static files in <code>static</code> folder and add the below code to your server (server.js) config:</p>

<p>{% codeblock lang:ruby %}
const robotsOptions = {
  root: __dirname + &lsquo;/static/&rsquo;,
  headers: {</p>

<pre><code>'Content-Type': 'text/plain;charset=UTF-8',
</code></pre>

<p>  }
};
server.get(&lsquo;/robots.txt&rsquo;, (req, res) => (
  res.status(200).sendFile(&lsquo;robots.txt&rsquo;, robotsOptions)
));</p>

<p>const sitemapOptions = {
  root: __dirname + &lsquo;/static/&rsquo;,
  headers: {</p>

<pre><code>'Content-Type': 'text/xml;charset=UTF-8',
</code></pre>

<p>  }
};
server.get(&lsquo;/sitemap.xml&rsquo;, (req, res) => (
  res.status(200).sendFile(&lsquo;sitemap.xml&rsquo;, sitemapOptions)
));</p>

<p>const faviconOptions = {
  root: __dirname + &lsquo;/static/&rsquo;
};
server.get(&lsquo;/favicon.ico&rsquo;, (req, res) => (
  res.status(200).sendFile(&lsquo;favicon.ico&rsquo;, faviconOptions)
));
{% endcodeblock %}</p>

<p>
  So far so good, That’s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Import CSS Files into Nextjs]]></title>
    <link href="http://geekhmer.github.io/blog/2018/04/01/import-css-files-into-nextjs/"/>
    <updated>2018-04-01T21:10:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2018/04/01/import-css-files-into-nextjs</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/nextjs.png" width="500" alt="Import CSS Files into Nextjs" />
</p>




<p>
  The way to import css files into Nextjs is very simple:
</p>




<p>
  1. Create a <code>/static</code> folder at the same level of <code>/pages</code> folder.<br/>
  2. In <code>/static</code> folder put your <code>.css</code> files.<br/>
  3. In your pages components import Head and add a CSS <link />.
</p>


<p>{% codeblock lang:ruby %}
import Head from &lsquo;next/head&rsquo;</p>

<p>export default () => (
  <div></p>

<pre><code>&lt;Head&gt;
  &lt;title&gt;My styles pages&lt;/title&gt;
  &lt;link href="http://geekhmer.github.io/statics/styles.css" rel="stylesheet" /&gt;
&lt;/Head&gt;
&lt;p className="some-class-name"&gt;
  Welcome to my styles pages!
&lt;/p&gt;
</code></pre>

<p>  </div>
)
{% endcodeblock %}</p>

<p>
  This way Nextjs render the link tag in the head of the page and the browser will download the CSS and applied it.
</p>




<p>
  So far so good, That’s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Import Markdown Files and Serve Its Content in Next.js]]></title>
    <link href="http://geekhmer.github.io/blog/2018/03/29/import-markdown-files-and-serve-its-content-in-next-dot-js/"/>
    <updated>2018-03-29T22:26:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2018/03/29/import-markdown-files-and-serve-its-content-in-next-dot-js</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/nextjs.png" width="600" alt="Import Markdown Files in Next.js" />
</p>




<p>
  As <a href="https://github.com/arunoda" target="_blank">@arunoda</a> (Next.js founder) said Next.js does not support importing markdown files yet. But you can configure the Next.js webpack loaders to load <code>raw-loader</code> modules and import markdown files and return them as strings.
</p>




<p>
  Let get started!
</p>




<p>
  Open the terminal, run the command below to install <code>raw-loader</code> and <code>react-markdown</code> modules (noted: use react-markdown to renders markdown as pure React components):
</p>


<p>{% codeblock lang:ruby %}
npm install &mdash;save raw-loader</p>

<p>npm install &mdash;save react-markdown
{% endcodeblock %}</p>

<p>
  Create <code>next.config.js</code> file with content below:
</p>


<p>{% codeblock next.config.js lang:ruby %}
module.exports = {
  webpack: (config) => {</p>

<pre><code>config.module.rules.push(
  {
    test: /\.md$/,
    use: 'raw-loader'
  }
)

return config
</code></pre>

<p>  },
}
{% endcodeblock %}</p>

<p>
  Create <code>docs/about.md</code> file with content below:
</p>


<p>{% codeblock about.md lang:ruby %}</p>

<h1>About</h1>

<p>Welcome to <strong>GeeKhmer</strong>!
{% endcodeblock %}</p>

<p>
  Create <code>pages/about.js</code> file with content below:
</p>


<p>{% codeblock about.js lang:ruby %}
import React from &lsquo;react&rsquo;
import ReactMarkdown from &lsquo;react-markdown&rsquo;</p>

<p>export default class extends React.Component {
  static async getInitialProps({ req }) {</p>

<pre><code>const content = await require(`../docs/about.md`)
return { content }
</code></pre>

<p>  }</p>

<p>  render() {</p>

<pre><code>return (
  &lt;div&gt;
    &lt;ReactMarkdown source={this.props.content} /&gt;
  &lt;/div&gt;
)
</code></pre>

<p>  }
}
{% endcodeblock %}</p>

<p>
  So far so good, That’s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
</feed>
