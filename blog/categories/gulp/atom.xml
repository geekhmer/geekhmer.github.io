<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Gulp | GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/blog/categories/gulp/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2018-04-02T00:20:22+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gulp – Markdown]]></title>
    <link href="http://geekhmer.github.io/blog/2016/10/30/gulp-markdown/"/>
    <updated>2016-10-30T11:22:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/10/30/gulp-markdown</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/bunlong_gulp.jpg" width="600" alt="Gulp, Gulp – Markdown" />
</p>




<p>
  Now for someting new. We are going to use Gulp with Handlebars to create our own CMS system.
</p>




<p>
  First of all, We want to be able to process markdown files and create html files with Gulp with plugin.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">npm</span> <span class="n">install</span> <span class="n">gulp</span><span class="o">-</span><span class="n">markdown</span> <span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="n">save</span><span class="o">-</span><span class="n">dev</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  For more information about <code>gulp-markdown</code> check out <a href="https://www.npmjs.org/package/gulp-markdown" target="_blank">https://www.npmjs.org/package/gulp-markdown</a>
</p>




<p>
  We will read all the markdown files in the <code>contents/pages</code> folder and generate html files.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>gulpfile.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="n">var</span> <span class="n">markdown</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">gulp</span><span class="o">-</span><span class="n">markdown</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;);</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="n">gulp</span><span class="o">.</span><span class="n">task</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">generate_pages</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">gulp</span><span class="o">.</span><span class="n">src</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">content</span><span class="o">/</span><span class="n">pages</span><span class="o">/**.</span><span class="n">md</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;.pipe(markdown())</span>
</span><span class='line'><span class="sr">.pipe(gulp.dest(&quot;build/</span><span class="n">pages</span><span class="s2">&quot;));</span>
</span><span class='line'><span class="s2">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Lets create our first page.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>ontents/pages/first_page.md </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Yes</span><span class="p">,</span> <span class="n">it</span> <span class="n">makes</span> <span class="n">a</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">bold</span><span class="o">&lt;</span><span class="sr">/strong&gt; statement.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  When We run our <code>gulp generate_pages</code> task, We will take the markdown and convert it into html and place the files in the <code>build/pages</code> directory.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">gulp</span> <span class="n">generate_pages</span>
</span><span class='line'><span class="no">Using</span> <span class="n">gulpfile</span> <span class="o">~</span><span class="sr">/js/</span><span class="n">gulpwalkthru</span><span class="o">/</span><span class="n">gulpfile</span><span class="o">.</span><span class="n">js</span>
</span><span class='line'><span class="no">Starting</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">generate_pages</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="no">Finished</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">generate_pages</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="n">after</span> <span class="mi">22</span> <span class="n">ms</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  If We look in our <code>build/pages</code> directory, We should see our new html file.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>build/pages/first_page.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span><span class="o">&gt;</span><span class="no">Yes</span><span class="p">,</span> <span class="n">it</span> <span class="n">makes</span> <span class="n">a</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">bold</span><span class="o">&lt;</span><span class="sr">/strong&gt; statement.&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  If We visit http://localhost:8000/pages/first_page.html we should see our generated webpage.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gulp – Live Reload]]></title>
    <link href="http://geekhmer.github.io/blog/2016/10/12/gulp-live-reload/"/>
    <updated>2016-10-12T16:24:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/10/12/gulp-live-reload</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/bunlong_gulp.jpg" width="600" alt="Gulp, Gulp – Live Reload" />
</p>




<p>
  So far so good, lets link our css file in <code>index.html</code>.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/contents/index.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">!</span><span class="no">DOCTYPE</span> <span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">head</span><span class="o">&gt;&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt;Learning Gulp&amp;lt;/</span><span class="n">title</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">link</span> <span class="n">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;http://geekhmer.github.io/styles/main.min.css&quot;</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  &lt;/</span><span class="n">head</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">body</span><span class="o">&gt;&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;&amp;lt;h1&amp;gt;Hello Gulp!&amp;lt;/</span><span class="n">h1</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="sr">/body&gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">html</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Now let's turn on live reload with our <code>gulp-webserver</code>.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>gulpefile.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gulp</span><span class="o">.</span><span class="n">task</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">webserver</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">gulp</span><span class="o">.</span><span class="n">src</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">build</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;.pipe(webserver({ livereload: true }));</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  If we run <code>gulp webserver</code> in one terminator and <code>gulp watch</code> in another, we will have our webserver running and live refreshing on each build.
</p>




<p>
  terminator1:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">gulp</span> <span class="n">webserver</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  terminator2:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">gulp</span> <span class="n">watch</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Update the css file to:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/contents/styles/some_styles.css </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h1</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">color</span><span class="p">:</span> <span class="n">blue</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Go to <code>http://localhost:8000</code> to watch our webpage.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gulp – Web Server]]></title>
    <link href="http://geekhmer.github.io/blog/2016/10/12/gulp-web-server/"/>
    <updated>2016-10-12T16:12:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/10/12/gulp-web-server</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/bunlong_gulp.jpg" width="600" alt="Gulp, Gulp – Web Server" />
</p>




<p>
  We can actually serve our webpages by using a gulp plugin.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">npm</span> <span class="n">install</span> <span class="n">gulp</span><span class="o">-</span><span class="n">webserver</span> <span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="n">save</span><span class="o">-</span><span class="n">dev</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  For more information about <code>gulp-webserver</code> check out <a href="https://www.npmjs.com/package/gulp-webserver" target="_blank">https://www.npmjs.com/package/gulp-webserver</a>
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>gulpfile.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="n">var</span> <span class="n">webserver</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">gulp</span><span class="o">-</span><span class="n">webserver</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;);</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="n">gulp</span><span class="o">.</span><span class="n">task</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">webserver</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">gulp</span><span class="o">.</span><span class="n">src</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">build</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;.pipe(webserver());</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Now when we run our gulp task webserver we will have a local webserver to view our website.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">gulp</span> <span class="n">webserver</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;Using gulpfile ~/</span><span class="no">YOUR_DIRECTORY</span><span class="o">/</span><span class="n">gulpfile</span><span class="o">.</span><span class="n">js</span>
</span><span class='line'><span class="no">Starting</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">webserver</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="no">Webserver</span> <span class="n">started</span> <span class="n">at</span> <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;http://localhost:8000&quot;</span><span class="o">&gt;</span><span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="ss">localhost</span><span class="p">:</span><span class="mi">8000</span><span class="o">&lt;</span><span class="sr">/a&gt;</span>
</span><span class='line'><span class="sr">Finished &amp;lsquo;webserver&amp;rsquo; after 20 ms</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  If you go to <code>http://localhost:8000</code> in your web browser you should see our index.html page saying Hello Gulp!.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gulp – Watch]]></title>
    <link href="http://geekhmer.github.io/blog/2016/10/12/gulp-watch/"/>
    <updated>2016-10-12T16:02:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/10/12/gulp-watch</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/bunlong_gulp.jpg" width="600" alt="Gulp, Gulp – Watch" />
</p>




<p>
  Now for something super amazing. Instead of running the gulp task explicitly, lets have gulp run our tasks when the files change.
</p>




<p>
  First reorganize some of our tasks:<br/>
  - Rename default task to css.<br/>
  - Create a new default task to run css, 'javascript', and 'homepage' tasks.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>gulpfile.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="n">gulp</span><span class="o">.</span><span class="n">task</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">css</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">[&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">clean</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">]</span><span class="p">,</span> <span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">console</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Concat</span><span class="p">,</span> <span class="n">move</span><span class="p">,</span> <span class="ow">and</span> <span class="n">minify</span> <span class="n">all</span> <span class="n">the</span> <span class="n">css</span> <span class="n">files</span> <span class="k">in</span> <span class="n">styles</span> <span class="n">folder</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;);</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">gulp</span><span class="o">.</span><span class="n">src</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">contents</span><span class="o">/</span><span class="n">styles</span><span class="o">/**.</span><span class="n">css</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;.pipe(concat(&#39;main.min.css&#39;))</span>
</span><span class='line'><span class="sr">.pipe(cssmin())</span>
</span><span class='line'><span class="sr">.pipe(gulp.dest(&#39;build/s</span><span class="n">tyles</span><span class="err">&#39;</span><span class="p">));</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="p">});</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="n">gulp</span><span class="o">.</span><span class="n">task</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">default</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">[&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">css</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">homepage</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">javascript</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">]</span><span class="p">);</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Next create our file watching task. Could you guess what?... there isn’t a plugin for this. It is just part of gulp.
</p>




<p>
  We will create a gulp watch task to watch our contents folder and run our default task on file change.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>gulpfile.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="n">gulp</span><span class="o">.</span><span class="n">task</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">watch</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">[]</span><span class="p">,</span> <span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">gulp</span><span class="o">.</span><span class="n">watch</span><span class="p">(</span><span class="o">[&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">contents</span><span class="o">/**&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">]</span><span class="p">,</span> <span class="o">[&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">default</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">]</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  In the terminal type:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">gulp</span> <span class="n">watch</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;Using gulpfile ~/</span><span class="no">YOUR_DIRECTORY</span><span class="o">/</span><span class="n">gulpfile</span><span class="o">.</span><span class="n">js</span>
</span><span class='line'><span class="no">Starting</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">watch</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="no">Finished</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">watch</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="n">after</span> <span class="mi">11</span> <span class="n">ms</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  If you update any of the css files in the styles folder, you should see gulp run the default task.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Starting</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">clean</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="no">Clean</span> <span class="n">all</span> <span class="n">files</span> <span class="k">in</span> <span class="n">build</span> <span class="n">folder</span>
</span><span class='line'><span class="no">Finished</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">clean</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="n">after</span> <span class="mi">21</span> <span class="n">ms</span>
</span><span class='line'><span class="no">Starting</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">css</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="no">Concat</span><span class="p">,</span> <span class="n">move</span><span class="p">,</span> <span class="ow">and</span> <span class="n">minify</span> <span class="n">all</span> <span class="n">the</span> <span class="n">css</span> <span class="n">files</span> <span class="k">in</span> <span class="n">styles</span> <span class="n">folder</span>
</span><span class='line'><span class="no">Starting</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">homepage</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="no">Starting</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">javascript</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="no">Validate</span><span class="p">,</span> <span class="no">Concat</span><span class="p">,</span> <span class="no">Uglify</span><span class="p">,</span> <span class="ow">and</span> <span class="no">Move</span> <span class="n">all</span> <span class="n">the</span> <span class="n">javascript</span> <span class="n">files</span>
</span><span class='line'><span class="no">Finished</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">homepage</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="n">after</span> <span class="mi">77</span> <span class="n">ms</span>
</span><span class='line'><span class="no">Finished</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">javascript</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="n">after</span> <span class="mi">75</span> <span class="n">ms</span>
</span><span class='line'><span class="no">Finished</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">css</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="n">after</span> <span class="mi">84</span> <span class="n">ms</span>
</span><span class='line'><span class="no">Starting</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">default</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="no">Finished</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">default</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="n">after</span> <span class="mi">14</span> <span class="err">μ</span><span class="n">s</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gulp – Creating a Webpage]]></title>
    <link href="http://geekhmer.github.io/blog/2016/10/12/gulp-creating-a-webpage/"/>
    <updated>2016-10-12T09:16:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/10/12/gulp-creating-a-webpage</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/bunlong_gulp.jpg" width="600" alt="Gulp, Gulp – Creating a Webpage" />
</p>




<p>
  Moving CSS and JavaScript files is all well and good, but we do actually want webpages right?
</p>




<p>
  Let’s start our webpage generation by first moving the <code>index.html</code> file we created while learning more about streams.
</p>




<p>
  It should look like:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/contents/index.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">!</span><span class="no">DOCTYPE</span> <span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">head</span><span class="o">&gt;&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt;Learning Gulp&amp;lt;/</span><span class="n">title</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="sr">/head&gt;</span>
</span><span class='line'><span class="sr">  &lt;body&gt;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">h1</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="no">Hello</span> <span class="no">Gulp</span><span class="o">!&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">/</span><span class="n">h1</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="sr">/body&gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">html</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  We will then create a simple homepage task to move the index.html file to our build directory.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>gulpfile.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="n">gulp</span><span class="o">.</span><span class="n">task</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">homepage</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">gulp</span><span class="o">.</span><span class="n">src</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">contents</span><span class="o">/</span><span class="n">index</span><span class="o">.</span><span class="n">html</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;.pipe(gulp.dest(&quot;build&quot;));</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Now test the task.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>gulpfile.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">gulp</span> <span class="n">homepage</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;Using gulpfile ~/</span><span class="no">YOUR_DIRECTORY</span><span class="o">/</span><span class="n">gulpfile</span><span class="o">.</span><span class="n">js</span>
</span><span class='line'><span class="no">Starting</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">homepage</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="no">Finished</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">homepage</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="n">after</span> <span class="mi">15</span> <span class="n">ms</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  It would be nice to be able to preview our website as we generate the content. Let’s do that next.
</p>

]]></content>
  </entry>
  
</feed>
