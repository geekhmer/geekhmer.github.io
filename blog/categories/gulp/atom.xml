<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Gulp | GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/blog/categories/gulp/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2016-09-23T10:33:08+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gulp – Concat: Combining multiple files into one]]></title>
    <link href="http://geekhmer.github.io/blog/2016/09/13/gulp-concat-combining-multiple-files-into-one/"/>
    <updated>2016-09-13T09:35:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/09/13/gulp-concat-combining-multiple-files-into-one</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/gulp.jpg" width="600" alt="Gulp, Gulp – Concat: Combining multiple files into one" />
</p>




<p>
  Printing Hello and moving files is rather boring. Let’s do something productive.
</p>




<p>
  When we create websites, we are always trying to deliver the best experience possible.
  This includes having our webpages displaying fast. Back in the day, this meant having
  all our styles in one css file.
</p>




<p>
  While this made our webpages load faster, it made maintaining the css file a night-mare!
</p>




<p>
  These days we can use multiple css files for better organization and then concat (meaning merge or combine) the files together into one large file.
</p>




<p>
  We left our project looking like:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/build</span>
</span><span class='line'><span class="sr">  /s</span><span class="n">tyles</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;some_styles.css</span>
</span><span class='line'><span class="sr">more_styles.css</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;/no</span><span class="n">de_modules</span>
</span><span class='line'><span class="sr">/contents</span>
</span><span class='line'><span class="sr">  /s</span><span class="n">tyles</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;some_styles.css</span>
</span><span class='line'><span class="sr">more_styles.css</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;gulpfile.js</span>
</span><span class='line'><span class="sr">package.json</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Right now, we have two separate css files in our build/styles folder. We are going to use a gulp plugin to concat all our css files in the styles folder.
</p>




<p>
  Gulp contains some basic tasks, but the power of gulp is the customization you can bring into your build process by using plugins.
</p>




<p>
  For a list of all the gulp plugins available, go to <a href="http://gulpjs.com/plugins/" target="_blank">http://gulpjs.com/plugins/</a>
</p>




<p>
  To concat the files together, we will need to install one of these plugins.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="n">install</span> <span class="n">gulp</span><span class="o">-</span><span class="n">concat</span> <span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="n">save</span><span class="o">-</span><span class="n">dev</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  We can then update our default gulp task to concat the files.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>gulpfile.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">var</span> <span class="n">gulp</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">gulp</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;);</span>
</span><span class='line'><span class="n">var</span> <span class="n">concat</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">gulp</span><span class="o">-</span><span class="n">concat</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;gulp.task(&amp;lsquo;default&amp;rsquo;, [], function() {</span>
</span><span class='line'><span class="sr">  console.log(&amp;ldquo;Concating and moving all the css files in styles folder&amp;rdquo;);</span>
</span><span class='line'><span class="sr">  gulp.src(&amp;ldquo;contents/s</span><span class="n">tyles</span><span class="o">/**.</span><span class="n">css</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;.pipe(concat(&#39;main.css&#39;))</span>
</span><span class='line'><span class="sr">.pipe(gulp.dest(&#39;build/s</span><span class="n">tyles</span><span class="err">&#39;</span><span class="p">));</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Couple of things have changed, can you spot them? First, we had to reference the gulp plugin with:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">var</span> <span class="n">concat</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">gulp</span><span class="o">-</span><span class="n">concat</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  We chose to label this <code>concat</code>. Obviously we could call it anything we want, but concat communicates what the plugin does to those reading our build script.
</p>




<p>
  Second, we added another step to our task. In between the <code>src</code> and the <code>pipe(gulp.dest...)</code> steps, we added <code>pipe(concat(...))</code>.
</p>




<p>
  Gulp works by streaming files from one process to another. This allows us to create complex build tasks out of small, simple steps. Composition == winning.
</p>




<p>
  Now run our gulp task:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">gulp</span>
</span><span class='line'><span class="no">Using</span> <span class="n">gulpfile</span> <span class="o">~</span><span class="sr">/YOUR_DIRECTORY/</span><span class="n">gulpfile</span><span class="o">.</span><span class="n">js</span>
</span><span class='line'><span class="no">Starting</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">default</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="no">Moving</span> <span class="n">all</span> <span class="n">the</span> <span class="n">css</span> <span class="n">files</span> <span class="k">in</span> <span class="n">styles</span> <span class="n">folder</span>
</span><span class='line'><span class="no">Finished</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">default</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="n">after</span> <span class="mi">6</span><span class="o">.</span><span class="mi">09</span> <span class="n">ms</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Our task will read all the css files in the <code>styles</code> folder, combine them into one <code>main.css</code> file, and then place that file in the <code>build/styles</code> folder.
</p>




<p>
  Our project should now look like:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/build</span>
</span><span class='line'><span class="sr">  /s</span><span class="n">tyles</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;main.css</span>
</span><span class='line'><span class="sr">more_styles.css</span>
</span><span class='line'><span class="sr">some_styles.css</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;/no</span><span class="n">de_modules</span>
</span><span class='line'><span class="sr">/styles</span>
</span><span class='line'><span class="sr">  more_styles.css</span>
</span><span class='line'><span class="sr">  some_styles.css</span>
</span><span class='line'><span class="sr">gulpfile.js</span>
</span><span class='line'><span class="sr">package.json</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Notice the more_styles.css and some_styles.css files are still in our build folder. :(
</p>




<p>
  We don’t want those chumps there anymore. In the next chapter we will learn how to
  get rid of those files.
</p>




<p>
  So far so good, That’s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gulp – Moving Files]]></title>
    <link href="http://geekhmer.github.io/blog/2016/08/28/gulp-moving-files/"/>
    <updated>2016-08-28T18:35:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/08/28/gulp-moving-files</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/gulp.jpg" width="600" alt="Gulp – Moving Files" />
</p>




<p>
  The first thing we will learn to do with gulp is to move files.
</p>




<p>
  Let’s create simple styles files some_styles.css and more_styles.css.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/contents/styles/some_styles.css </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">h1</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">color</span><span class="p">:</span> <span class="n">red</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>/contents/styles/more_styles.css </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">p</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">font</span><span class="o">-</span><span class="ss">size</span><span class="p">:</span> <span class="mi">30</span><span class="n">px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Our project structure should now look like:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/node_modules</span>
</span><span class='line'><span class="sr">/</span><span class="n">contents</span>
</span><span class='line'>  <span class="sr">/styles&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">more_styles</span><span class="o">.</span><span class="n">css</span>
</span><span class='line'><span class="n">some_styles</span><span class="o">.</span><span class="n">css</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">gulpfile</span><span class="o">.</span><span class="n">js</span>
</span><span class='line'><span class="n">package</span><span class="o">.</span><span class="n">json</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Update our <code>gulpfile.js</code> from the previous section and instruct gulp to move all the files found in the styles folder to our <code>build/styles</code> folder.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>gulpfile.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">var</span> <span class="n">gulp</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">gulp</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;gulp.task(&amp;lsquo;default&amp;rsquo;, [], function() {</span>
</span><span class='line'><span class="sr">  console.log(&amp;ldquo;Moving all files in styles folder&amp;rdquo;);</span>
</span><span class='line'><span class="sr">  gulp.src(&amp;ldquo;contents/s</span><span class="n">tyles</span><span class="o">/&lt;</span><span class="n">em</span><span class="o">&gt;*.</span><span class="n">&lt;</span><span class="sr">/em&gt;&amp;rdquo;)&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;.</span><span class="n">pipe</span><span class="p">(</span><span class="n">gulp</span><span class="o">.</span><span class="n">dest</span><span class="p">(</span><span class="s1">&#39;build/styles&#39;</span><span class="p">));</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Well, What do we expect will happen when we run gulp? If you guessed the files will be copied and moved to the <code>build/styles</code> folder, then give yourself a cookie.
</p>




<p>
  When we run gulp , we should see:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">gulp</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;Using gulpfile ~/</span><span class="no">YOUR_DIRECTORY</span><span class="o">/</span><span class="n">gulpfile</span><span class="o">.</span><span class="n">js</span>
</span><span class='line'><span class="no">Starting</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">default</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="no">Moving</span> <span class="n">all</span> <span class="n">files</span> <span class="k">in</span> <span class="n">styles</span> <span class="n">folder</span>
</span><span class='line'><span class="no">Finished</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">default</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="n">after</span> <span class="mi">7</span><span class="o">.</span><span class="mi">27</span> <span class="n">ms</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Our project should now look like:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/build</span>
</span><span class='line'><span class="sr">  /s</span><span class="n">tyles</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;some_styles.css</span>
</span><span class='line'><span class="sr">more_styles.css</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;/no</span><span class="n">de_modules</span>
</span><span class='line'><span class="sr">/contents</span>
</span><span class='line'><span class="sr">  /s</span><span class="n">tyles</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;some_styles.css</span>
</span><span class='line'><span class="sr">more_styles.css</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;gulpfile.js</span>
</span><span class='line'><span class="sr">package.json</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  So far so good, That’s it!!! See ya!!! :)
</p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gulp – Hello World]]></title>
    <link href="http://geekhmer.github.io/blog/2016/08/28/gulp-hello-world/"/>
    <updated>2016-08-28T17:54:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/08/28/gulp-hello-world</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/gulp.jpg" width="600" alt="Gulp – Hello World" />
</p>




<p>
  Let’s start a new node project in our folder and add a package.json by using command below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="n">init</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Time to install gulp using npm. First globally to access the gulp command and then locally for our package.json .
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="n">install</span> <span class="n">gulp</span> <span class="o">-</span><span class="n">g</span>
</span><span class='line'><span class="n">npm</span> <span class="n">install</span> <span class="n">gulp</span> <span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="n">save</span><span class="o">-</span><span class="n">dev</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  By default gulp looks for a <code>gulpfile.js</code> to run. Let’s create a simple gulpfile.js.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>gulpfile.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">var</span> <span class="n">gulp</span> <span class="o">=</span> <span class="nb">require</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">gulp</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;gulp.task(&amp;lsquo;default&amp;rsquo;, [], function() {</span>
</span><span class='line'><span class="sr">  console.log(&amp;ldquo;Hellow World&amp;rdquo;);</span>
</span><span class='line'><span class="sr">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  In your terminator run the gulp command below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gulp</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  You should see:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Hello</span> <span class="no">Gulp</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;Using gulpfile ~/</span><span class="no">YOUR_DIRECTORY</span><span class="o">/</span><span class="n">gulpfile</span><span class="o">.</span><span class="n">js</span>
</span><span class='line'><span class="no">Starting</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">default</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span><span class='line'><span class="no">Hello</span> <span class="no">Gulp</span><span class="o">!</span> <span class="no">You</span> <span class="n">are</span> <span class="n">mighty</span> <span class="n">fine</span><span class="o">.</span>
</span><span class='line'><span class="no">Finished</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">default</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="n">after</span> <span class="o">&amp;</span><span class="n">hellip</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Congratulations creating your first gulp build script. So far so good, That’s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gulp – Installation]]></title>
    <link href="http://geekhmer.github.io/blog/2016/08/28/gulp-installation/"/>
    <updated>2016-08-28T14:06:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/08/28/gulp-installation</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/gulp.jpg" width="600" alt="Gulp – Installation" />
</p>




<p>
  This article provides a step-by-step procedure of Gulp installation.
</p>




<p>
  <strong>Node.js Installation</strong><br/>
  Run the setup to install the Node.js on your computer <a href="https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-16-04" target="_blank">here</a>.<br/>
  Then open up the terminator in your system and enter the following command. It will display the installed Node.js version. 
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">node</span> <span class="o">-</span><span class="n">v</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  In the terminator, enter the following command to display the version of npm (Node.js package manager) which is used to install modules. It will display the installed Node.js version.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="o">-</span><span class="n">v</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Gulp Installation</strong><br/>
  In the terminator, enter the following command to install Gulp. Adding “-g” flag ensures that the Gulp is globally available for any project.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gulp</span> <span class="o">-</span><span class="n">v</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  So far so good, That’s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is Gulp?]]></title>
    <link href="http://geekhmer.github.io/blog/2016/08/09/what-is-gulp/"/>
    <updated>2016-08-09T13:51:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/08/09/what-is-gulp</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/what_is_gulpjs.jpg" width="400" alt="What is Gulp?" />
</p>




<p>
  <strong>What is Gulp?</strong><br/>
  Gulp is a task runner that uses Node.js as a platform. Gulp purely uses the JavaScript code and helps to run front-end tasks and large-scale web applications. It builds system automated tasks like CSS and HTML minification, concatenating library files, and compiling the SASS files. These tasks can be run using Shell or Bash scripts on the command line.
</p>




<p>
  <strong>Why Use Gulp?</strong><br/>
  - It is shorter, simpler and faster as compared to other task runner.<br/>
  - Uses SASS and LESS as CSS preprocessor.<br/>
  - Automatically refreshes page after editing the source files.<br/>
  - Easy to understand and build the Gulpfile.js because, it uses pure JavaScript code to build the task.
</p>




<p>
  <strong>Features</strong><br/>
  - Provides minification and concatenation.<br/>
  - Uses pure JavaScript code.<br/>
  - Converts LESS or SASS to CSS compilation.<br/>
  - Manages file manipulation in the memory and enhances speed by using the Node.js
platform.
</p>




<p>
  <strong>Advantages</strong><br/>
  - Huge speed advantage over any other task runner.<br/>
  - Easy to code and understand.<br/>
  - Easy to test the web applications.<br/>
  - Plugins are simple to use and they are designed to do one thing at a time.<br/>
  - Performs repetitive tasks repeatedly such as minifying stylesheets, compressing images, etc.
</p>




<p>
  <strong>Disadvantages</strong><br/>
  - More number of dependencies and is a newcomer compared to Grunt.<br/>
  - Using Gulp plugins, you cannot perform multiple tasks.<br/>
  - Configuration is not as clean as Grunt.
</p>

]]></content>
  </entry>
  
</feed>
