<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby on Rails | GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/blog/categories/ruby-on-rails/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2015-03-10T22:57:28+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Versioning with PaperTrail on Rails]]></title>
    <link href="http://geekhmer.github.io/blog/2015/03/03/versioning-with-papertrail-on-rails/"/>
    <updated>2015-03-03T21:28:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/03/03/versioning-with-papertrail-on-rails</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Versioning with PaperTrail on Rails" />
</p>




<p>
  Imagine the situation, You open your website’s admin page to do some clean up, find some old data that hasn’t been viewed by anyone for ages, and delete it. Deletion succeeds and everything is okay, but after a second "No!!! That data contained VERY IMPORTANT INFORMATION that could possibly change the world!", you realize. But, it’s gone and the world remains unchanged (well, there is still a chance for recovery if you have a backup of the Database).
</p>




<p>
  Can we prevent this situation in our Rails application? Yes, for sure we can. Well, in this article, we are going to talk about how to implement a "History" page and an "undo" button (as well as "redo") with the help of the <code>paper_trail</code> gem.
</p>




<p>
  We are going to build a simple blog that allows to add, update, and destroy posts. And would be able to undo every action related to the posts (for example, undoing an unintentional delete). We will also provide a "History" page displaying a list of actions (and some other info) that users performed while working with posts.
</p>




<p>
  <strong>Create Rails Project</strong><br/>
  Run command below to create a new Rails application:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">blog</span> <span class="o">-</span><span class="n">d</span> <span class="n">mysql</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Add Gems</strong><br/>
  We will add a gems to our Gemfile. paper_trail, it will help us to create both the “History” page and an “undo” button:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">paper_trail</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">~&gt;</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  The blog app has one controller (apart from the ApplicationController), PostsController, that will be used to manage our posts. Initially, it has seven default methods: index, new, create, destroy, edit and update, along with a number of views related to them. I will not go into the details on how to create these methods and views, because they are really basic (you can create them using rails g scaffold Posts).
</p>




<p>
  The blog contains a model: Post. The posts table have the following columns: id, title, body, created_at, updated_at.
</p>




<p>
  And routes file will looks like:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">posts</span><span class="c1">#index&amp;rsquo;</span>
</span><span class='line'><span class="n">resources</span> <span class="ss">:posts</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  At this point, we are ready to setup paper_trail. First of all, create a special table to store the versions (it’s a cool feature of paper_trail – if we want to clear old versions later, we would need only to access one table).
</p>




<p>
  Run command below to generate and migrate paper_trail:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rails</span> <span class="n">generate</span> <span class="n">paper_trail</span><span class="ss">:install</span>
</span><span class='line'><span class="n">bundle</span> <span class="nb">exec</span> <span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Create and apply the required migration. Add the following line to your Post model (app/models/post.rb):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>post.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_paper_trail</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Well! Now, all changes to the posts table will be audited automatically. How cool is that?
</p>




<p>
  You can also specify which changes should not be tracked. For example, if posts had a view_count column in and we did not want to track changes to it, the modification looks like in (app/models/post.rb):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>post.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_paper_trail</span> <span class="ss">ignore</span><span class="p">:</span> <span class="o">[</span><span class="ss">:view_count</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Some fields can be skipped, they will neither be tracked nor included in the serialized version of the object (app/models/post.rb):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>post.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_paper_trail</span> <span class="ss">skip</span><span class="p">:</span> <span class="o">[</span><span class="ss">:view_count</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Or can specified as well (app/models/post.rb):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>post.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_paper_trail</span> <span class="ss">on</span><span class="p">:</span> <span class="o">[</span><span class="ss">:update</span><span class="p">,</span> <span class="ss">:create</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Or provide conditions on whether to track the event:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>post.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_paper_trail</span> <span class="k">if</span><span class="p">:</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="p">{</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span> <span class="n">t</span><span class="o">.</span><span class="n">title</span><span class="o">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">10</span> <span class="p">},</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;            unless: Proc.new { |t| t.body.blank? }</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Display the Log</strong><br/>
  Now, you probably want to display the audited versions, It’s easy, just, add the following route:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">posts</span><span class="c1">#index&amp;rsquo;</span>
</span><span class='line'><span class="n">resources</span> <span class="ss">:posts</span>
</span><span class='line'><span class="n">get</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">/</span><span class="n">posts</span><span class="o">/</span><span class="n">history</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="ss">to</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">posts</span><span class="c1">#history&amp;rsquo;, as: :posts_history</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  To the history page for Posts. If your app has many models that are being audited, it’s a good idea to create a separate VersionsController and place all versions-related methods there. However, in our case, only the Post model is being audited, so let’s stick with one controller.
</p>




<p>
  Add a history method to the controller (app/controllers/posts_controller.rb):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">history</span>
</span><span class='line'>  <span class="vi">@versions</span> <span class="o">=</span> <span class="ss">PaperTrail</span><span class="p">:</span><span class="ss">:Version</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">created_at</span> <span class="no">DESC</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Note that we have to use PaperTrail::Version, not just Version. This line of code extracts all the recorded events from the versions table that we have created earlier and sorts them by the creation date. In a real app, paginating these events by using will_paginate or kaminari gem is advisable.
</p>




<p>
  Rendering the view history (app/views/posts/history.html.erb):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>history.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;div class=&quot;container&quot;&gt;</span>
</span><span class='line'><span class="sr">  &lt;h1&gt;History&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">% @versions.each </span><span class="k">do</span> <span class="o">|</span><span class="n">version</span><span class="o">|</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">      &lt;li&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="sx">%= l(version.created_at, format: &quot;%-d.%m.%Y %H:%M:%S %Z&quot;) %&gt;&lt;br/&gt;</span>
</span><span class='line'><span class="sx">        Event ID: &lt;%=</span> <span class="n">version</span><span class="o">.</span><span class="n">id</span> <span class="sx">%&gt;&lt;br/&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="n">b</span><span class="o">&gt;</span><span class="ss">Target</span><span class="p">:</span><span class="o">&lt;</span><span class="sr">/b&gt; &lt;%= version.item_type %&gt;</span>
</span><span class='line'><span class="sr">        &lt;small&gt;(id: &lt;%= version.item_id %&gt;)&lt;/sm</span><span class="n">all</span><span class="o">&gt;</span><span class="p">;</span> <span class="o">&lt;</span><span class="n">b</span><span class="o">&gt;</span><span class="n">action</span><span class="o">&lt;</span><span class="sr">/b&gt; &lt;%= version.event %&gt;;&lt;br/</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class='line'>          <span class="no">More</span> <span class="ss">info</span><span class="p">:</span>
</span><span class='line'>          <span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;%=</span> <span class="n">version</span><span class="o">.</span><span class="n">object</span> <span class="sx">%&gt;&lt;/pre&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'><span class="sr">      &lt;/</span><span class="n">li</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx">  &lt;/ul&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Here is the data being displayed:
</p>


<table>
<thead>
<tr>
<th>Data </th>
<th> Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>version.created_at </td>
<td> When this event took place.</td>
</tr>
<tr>
<td>version.id </td>
<td> ID of this event.</td>
</tr>
<tr>
<td>version.item_type </td>
<td> Model name for the event. In our case, it’s Post.</td>
</tr>
<tr>
<td>version.item_id </td>
<td> ID of the resource (Post) that was changed.</td>
</tr>
<tr>
<td>version.event </td>
<td> The action applied to the resource (create, update, destroy).version.object, Full dump of the resource that was changed.</td>
</tr>
</tbody>
</table>


<p>
  <br/>
  There are some things that could be improved. For example, which fields were changed (especially for the update action)? Well, that is very easy to implement.
</p>




<p>
  Run command below to create and apply migration:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">migration</span> <span class="n">add_object_changes_to_versions</span> <span class="n">object_changes</span><span class="ss">:text</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  This can also be done when setting up paper_trail. You just need to provide an appropriate option to the generator below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">generate</span> <span class="n">paper_trail</span><span class="ss">:install</span> <span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="n">with</span><span class="o">-</span><span class="n">changes</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  No further action is required, paper_trail will automatically diff the versions.
</p>




<p>
  Now, we can add a new div with version.changeset block to our view (app/views/posts/history.html.erb):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>history.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">]&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;div&gt;</span>
</span><span class='line'><span class="sr">  Changeset:</span>
</span><span class='line'><span class="sr">  &lt;pre&gt;&lt;%= version.changeset %&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;[&amp;hellip;]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  It will display attribute values before and after the event (if an attribute remained unchanged it will not be displayed).
</p>




<p>
  <strong>Track User-Specific Information</strong><br/>
  Okay, now we know when of our precious blog post deletion. But, we don’t know who, High time to fix this issue.
</p>




<p>
  Let’s track an IP address of the user responsible for the action. Of course, an IP address can be forged, but the main point here is to explain how to store metadata alongside with the event’s data. Go on and create a new migration below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">migration</span> <span class="n">add_ip_to_versions</span> <span class="ss">ip</span><span class="p">:</span><span class="n">string</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  paper_trail will not store anything in the ip column, by default, so we need to help it out a bit. Add this method to the ApplicationController (app/controllers/application_controller.rb):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>application_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">info_for_paper_trail</span>
</span><span class='line'>  <span class="p">{</span> <span class="ss">ip</span><span class="p">:</span> <span class="n">request</span><span class="o">.</span><span class="n">remote_ip</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  paper_trail will use this method to fetch some additional info and store it as metadata. If you are using Rails 3 or protected_attributes with Rails 4, you will also need to create an initializer (initializers/paper_trail.rb):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>paper_trail.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">PaperTrail</span>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Version</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;attr_accessible :ip</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Metadata can also be provided in the model (app/models/post.rb) like this (presuming we have a timestamp column):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>post.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">has_paper_trail</span> <span class="ss">meta</span><span class="p">:</span> <span class="p">{</span> <span class="ss">timestamp</span><span class="p">:</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  The last thing to do is add a line into view (app/views/posts/history.html.erb):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>history.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">]</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">b</span><span class="o">&gt;</span><span class="no">Remote</span> <span class="ss">address</span><span class="p">:</span><span class="o">&lt;</span><span class="sr">/b&gt; &amp;lt;%= version.ip %&gt;&lt;br/</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">[&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Undo an Action</strong><br/>
  Let’s move on, allowing the user to undo their actions. Create undo method in posts controller (app/controllers/posts_controller.rb) that will undo the requested action:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">undo</span>
</span><span class='line'>  <span class="vi">@post_version</span> <span class="o">=</span> <span class="ss">PaperTrail</span><span class="p">:</span><span class="ss">:Version</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  begin&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">if</span> <span class="vi">@post_version</span><span class="o">.</span><span class="n">reify</span>
</span><span class='line'>  <span class="vi">@post_version</span><span class="o">.</span><span class="n">reify</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="vi">@post_version</span><span class="o">.</span><span class="n">item</span><span class="o">.</span><span class="n">destroy</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;Undid that...&quot;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">rescue</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;flash[:alert] = &quot;Failed undoing the action...&quot;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  ensure&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">redirect_to</span> <span class="n">root_path</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  The above code, find a version by id and then check if there are previous versions available for the resource using the reify method, this method will return nil if the resource was just created in the current version (obviously, if the resource was just created it does not have any previous versions.) Either rollback to the previous version using @post_version.reify.save or destroy the newly created resource using @post_version.item.destroy (the @post_version.item returns the actual resource).
</p>




<p>
  And routes file will looks like:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">posts</span><span class="c1">#index&amp;rsquo;</span>
</span><span class='line'><span class="n">resources</span> <span class="ss">:posts</span>
</span><span class='line'><span class="n">get</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">/</span><span class="n">posts</span><span class="o">/</span><span class="n">history</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="ss">to</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">posts</span><span class="c1">#history&amp;rsquo;, as: :posts_history</span>
</span><span class='line'><span class="n">post</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">/</span><span class="n">posts</span><span class="o">/</span><span class="ss">:id</span><span class="o">/</span><span class="n">undo</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="ss">to</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">posts</span><span class="c1">#undo&amp;rsquo;, as: :undo</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then put this undo link into the flash message, so make sure to render it somewhere in your layout (app/views/layouts/application.html.erb):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>application.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;div class=&quot;container&quot;&gt;</span>
</span><span class='line'><span class="sr">  &lt;% flash.each do |key, value| %&gt;</span>
</span><span class='line'><span class="sr">    &lt;div class=&quot;alert alert-&lt;%= key %&gt;&quot;&gt;</span>
</span><span class='line'><span class="sr">      &lt;button type=&quot;button&quot; class=&quot;close&quot; data-dismiss=&quot;alert&quot;&gt;&amp;times;&lt;/</span><span class="n">button</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="o">&lt;%=</span> <span class="n">value</span><span class="o">.</span><span class="n">html_safe</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">    &lt;/div&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then create a private method in the PostsController that generates an undo link:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">]</span>
</span><span class='line'><span class="kp">private</span>
</span><span class='line'><span class="k">def</span> <span class="nf">make_undo_link</span>
</span><span class='line'><span class="err">  </span><span class="n">view_context</span><span class="o">.</span><span class="n">link_to</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Undo</span> <span class="n">that</span> <span class="n">plz!</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="n">undo_path</span><span class="p">(</span><span class="vi">@post</span><span class="o">.</span><span class="n">versions</span><span class="o">.</span><span class="n">last</span><span class="p">),</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:post</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  We cannot use link_to inside the controller, so the reference to view_context points to the actual view. @post.versions fetches all the versions for the Post resource and @post.versions.last gets the latest one. This method can be used like this in PostsController (app/controllers/posts_controller.rb):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">]</span>
</span><span class='line'><span class="k">def</span> <span class="nf">update</span>
</span><span class='line'>  <span class="vi">@post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="vi">@post</span><span class="o">.</span><span class="n">update_attributes</span><span class="p">(</span><span class="n">post_params</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;flash[:success] = &quot;Post was updated! </span><span class="si">#{</span><span class="n">make_undo_link</span><span class="si">}</span><span class="sr">&quot;</span>
</span><span class='line'><span class="sr">redirect_to post_path(@post)</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  else&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">render</span> <span class="s1">&#39;edit&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">[&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Make sure to add it to the create and destroy methods as well.
</p>




<p>
  Okay, I have undone an action… but now I want to redo it. Here, we should introduce a redo link that reverts the undo. There are only few modifications needed.
</p>




<p>
  Then create another private method in PostsController (app/controllers/posts_controller.rb):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">]</span>
</span><span class='line'><span class="kp">private</span>
</span><span class='line'><span class="k">def</span> <span class="nf">make_redo_link</span>
</span><span class='line'>  <span class="n">params</span><span class="o">[</span><span class="ss">:redo</span><span class="o">]</span> <span class="o">==</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="kp">true</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="p">?</span> <span class="n">link</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Undo</span> <span class="n">that</span> <span class="n">plz!</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="p">:</span> <span class="n">link</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Redo</span> <span class="n">that</span> <span class="n">plz!</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">view_context</span><span class="o">.</span><span class="n">link_to</span> <span class="n">link</span><span class="p">,</span> <span class="n">undo_path</span><span class="p">(</span><span class="vi">@post_version</span><span class="o">.</span><span class="n">next</span><span class="p">,</span> <span class="k">redo</span><span class="p">:</span> <span class="o">!</span><span class="n">params</span><span class="o">[</span><span class="ss">:redo</span><span class="o">]</span><span class="p">),</span> <span class="nb">method</span><span class="p">:</span> <span class="ss">:post</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">[&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  This method is very similar to make_undo_link. The main difference is the params[:redo] which is true of false. Based on this parameter, change the text of the link – the URL actually remains unchanged. This is because redoing basically means reverting to the previous version, which is absolutely the same as the undo action.
</p>




<p>
  Then alter the flash message inside the undo method in PostsController:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">]</span>
</span><span class='line'><span class="k">def</span> <span class="nf">undo</span>
</span><span class='line'><span class="o">[&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">flash</span><span class="o">[</span><span class="ss">:success</span><span class="o">]</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Undid</span> <span class="n">that!</span> <span class="c1">#{make_redo_link}&amp;rdquo;</span>
</span><span class='line'><span class="o">[&amp;</span><span class="n">hellip</span><span class="p">;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  That’s it, users can undo and redo their actions as many times and they want, every time being recorded by paper_trail.
</p>




<p>
  The only one problem is that the versions table can become fat very quickly. This should probably be handled with some background process to remove old entries. The job would use something like:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">PaperTrail</span><span class="p">:</span><span class="ss">:Version</span><span class="o">.</span><span class="n">delete_all</span> <span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">created_at</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="p">?</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="mi">1</span><span class="o">.</span><span class="n">week</span><span class="o">.</span><span class="n">ago</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  You also can limit the number of created versions per object by adding this line into an initializer:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">PaperTrail</span><span class="o">.</span><span class="n">config</span><span class="o">.</span><span class="n">version_limit</span> <span class="o">=</span> <span class="mi">3</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  So far so good, That's it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Passing Optional Locals to Partials]]></title>
    <link href="http://geekhmer.github.io/blog/2015/03/02/ruby-on-rails-passing-optional-locals-to-partials/"/>
    <updated>2015-03-02T23:32:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/03/02/ruby-on-rails-passing-optional-locals-to-partials</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails Passing Optional Locals to Partials" />
</p>




<p>
  When passing locals to Rails partials, you might run into cases where you need to pass optional locals in some places, but don’t want to pass it in every other place where you use the partial.
</p>




<p>
  As an example, you have a <code>_post</code> partial which you render like this:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%=</span> <span class="n">render</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">post</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="ss">post</span><span class="p">:</span> <span class="n">post</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  And now you want to render the same partial from another view, but this time you want to pass a boolean flag to tell the partial to render the author bio as well:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%=</span> <span class="n">render</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">post</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="ss">post</span><span class="p">:</span> <span class="n">post</span><span class="p">,</span> <span class="n">show_author_bio</span><span class="p">:</span> <span class="kp">true</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  If we used the <code>show_author_bio</code> local in the partial, it would break the other view which does not know this local. To use it safely, we can use the <code>local_assigns</code> hash:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;&lt;%= post.title %&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%</span> <span class="k">if</span> <span class="n">local_assigns</span><span class="o">[</span><span class="ss">:show_author_bio</span><span class="o">]</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &amp;lt;%= render &amp;lsquo;author_bio&amp;rsquo;, author: post.author %&gt;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%</span> <span class="k">end</span> <span class="sx">%&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%=</span> <span class="n">post</span><span class="o">.</span><span class="n">body</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  We’re using it for passing a boolean value here, we could pass in any other object as well. For instance, we could pass in an optional author object:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%</span> <span class="k">if</span> <span class="n">local_assigns</span><span class="o">.</span><span class="n">has_key?</span><span class="p">(</span><span class="ss">:author</span><span class="p">)</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &amp;lt;%= render &amp;lsquo;author_bio&amp;rsquo;, author: author %&gt;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%</span> <span class="k">end</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  DHH (David Heinemeier Hansson) opened an issue (<a href="https://github.com/rails/rails/issues/18962" target="_blank">#18962</a>) about this as well, and had an interesting comment to make about this feature.
</p>




<p>
  So far so good, That's it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Debug a Ruby on Rails Application]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/27/how-to-debug-a-ruby-on-rails-application/"/>
    <updated>2015-02-27T00:35:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/27/how-to-debug-a-ruby-on-rails-application</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="How to Debug a Ruby on Rails Application" />
</p>




<p>
  This article I will show you how you can easily debug your Ruby on Rails application.
</p>




<p>
  <strong>Setup</strong><br/>
  If you’re using the default Rails Rack server, Webrick – the best debugging tool I’ve been able to find out there is <code>pry</code>. First you need to add the pry gem to your Gemfile. Since this is used for development purposes. Open up your Gemfile file so that it looks sometings like:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">pry</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then run <code>bundle install</code> to install it:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Usage</strong><br/>
  Basically, Whenever one of your actions crashes and you can’t figure out straight away what caused it to crash. What you need to do is invoke <code>binding.pry</code> somewhere in your code, which will create a Pry session at the point it’s called. This will pretty much open a 'developer console' where you can play around with all the objects that have been defined up until you called <code>binding.pry</code>. Then you can then easily debug your action, like you’d regularly do in an irb console. When you’re done with the Pry session the program will resume.
</p>




<p>
  Here’s how this would work in a regular create action from Users controller:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>users_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">create</span>
</span><span class='line'>  <span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="n">user_params</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">binding</span><span class="o">.</span><span class="n">pry</span> <span class="c1"># Start a pry session to see if the new user looks the way we want</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">user</span><span class="o">.</span><span class="n">save</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt; flash.now[:success] = &quot;User saved successfully&quot;</span>
</span><span class='line'><span class="sr"> sign_in user</span>
</span><span class='line'><span class="sr"> redirect_to user</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  else&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">flash</span><span class="o">.</span><span class="n">now</span><span class="o">[</span><span class="ss">:error</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;Something went wrong: </span><span class="si">#{</span><span class="n">user</span><span class="o">.</span><span class="n">errors</span><span class="o">.</span><span class="n">full_messages</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'> <span class="n">render</span> <span class="s1">&#39;new&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Well, after you run the create action – you should view the Pry session in the console, where your rails server is running.
</p>




<p>
  So far so good, That's it!!! See yar!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActionPack Variants on Rails]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/23/actionpack-variants-on-rails/"/>
    <updated>2015-02-23T21:48:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/23/actionpack-variants-on-rails</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="ActionPack Variants on Rails" />
</p>




<p>
  Rails 4.1 released a little while ago and came out with a fantastic new feature I think a lot of responsive web developers are going to flex. It's called Variants. ActionPack Variants.
</p>




<p>
  <strong>What does it do?</strong><br/>
  It allows you to create different views for different device formats - such as mobile 
  phones, tablets and desktops.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;/</span><span class="n">app</span><span class="o">/</span><span class="n">views</span><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">index</span><span class="o">.</span><span class="n">html</span><span class="o">.</span><span class="n">erb</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;/</span><span class="n">app</span><span class="o">/</span><span class="n">views</span><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">index</span><span class="o">.</span><span class="n">html</span><span class="o">+</span><span class="n">phone</span><span class="o">.</span><span class="n">erb</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;/</span><span class="n">app</span><span class="o">/</span><span class="n">views</span><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">index</span><span class="o">.</span><span class="n">html</span><span class="o">+</span><span class="n">tablet</span><span class="o">.</span><span class="n">erb</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Why is this useful?</strong><br/>
  This is tremendously useful because you can now serve a much slimmer version of your view to mobile devices, instead of just hiding the elements using CSS using media queries.
</p>




<p>
  Hidden elements still load and need to come down 'the wire' - using Variants it's much easier than before to serve up lean and mean views to mobile devices.
</p>




<p>
  <strong>Setup</strong><br/>
  Create a homes controller that will enable you to play around with ActionPack Variants, run the commands below to create the home controller:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="n">homes</span> <span class="n">show</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then apply a few simple routes to your application to finish setting things up. Open up your routes file (<code>config/routes.rb</code>).
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">homes</span><span class="c1">#show&amp;rdquo;</span>
</span><span class='line'><span class="n">resource</span> <span class="ss">:home</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:show</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Well, Now we are ready to play around with ActionPack Variants. ActionPack Variants works by using a <code>before_action</code> in your application controller. Open up your Application Controller (<code>app/controllers/application_controller.rb</code>) and modify so that it looks sometings like:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>application_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActionController</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="c1"># Prevent CSRF attacks by raising an exception.</span>
</span><span class='line'>  <span class="c1"># For APIs, you may want to use :null_session instead.</span>
</span><span class='line'>  <span class="n">protect_from_forgery</span> <span class="ss">with</span><span class="p">:</span> <span class="ss">:exception</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  before_action :detect_browser&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="kp">private</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;def detect_browser</span>
</span><span class='line'><span class="sr">  case request.user_agent</span>
</span><span class='line'><span class="sr">    when /i</span><span class="no">Pad</span><span class="o">/</span><span class="n">i</span>
</span><span class='line'>      <span class="n">request</span><span class="o">.</span><span class="n">variant</span> <span class="o">=</span> <span class="ss">:tablet</span>
</span><span class='line'>    <span class="k">when</span> <span class="sr">/iPhone/i</span>
</span><span class='line'>      <span class="n">request</span><span class="o">.</span><span class="n">variant</span> <span class="o">=</span> <span class="ss">:phone</span>
</span><span class='line'>    <span class="k">when</span> <span class="sr">/Android/i</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="sr">/mobile/i</span>
</span><span class='line'>      <span class="n">request</span><span class="o">.</span><span class="n">variant</span> <span class="o">=</span> <span class="ss">:phone</span>
</span><span class='line'>    <span class="k">when</span> <span class="sr">/Android/i</span>
</span><span class='line'>      <span class="n">request</span><span class="o">.</span><span class="n">variant</span> <span class="o">=</span> <span class="ss">:tablet</span>
</span><span class='line'>    <span class="k">when</span> <span class="sr">/Windows Phone/i</span>
</span><span class='line'>      <span class="n">request</span><span class="o">.</span><span class="n">variant</span> <span class="o">=</span> <span class="ss">:phone</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="n">request</span><span class="o">.</span><span class="n">variant</span> <span class="o">=</span> <span class="ss">:desktop</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  How does it work? Before an action is called, The <code>detect_browser</code> is called and the <code>request.variant</code> is set to whatever you want it to be. In the above example I use it determine whether we are running a mobile, tablet, or desktop device.
</p>




<p>
  Then create a view called show.html+phone.erb (<code>app/views/homes/show.html+phone.erb</code>) for your homes controller and add in the code listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>show.html+phone.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Phone&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="no">You</span> <span class="n">are</span> <span class="n">running</span> <span class="n">on</span> <span class="n">a</span> <span class="n">smart</span> <span class="n">phone</span><span class="o">.</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then create a view for our tablet users. Create a new view called show.html+tablet.erb (<code>app/views/homes/show.html+tablet.erb</code>) and add in the code listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>show.html+tablet.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Tablet&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="no">You</span> <span class="n">are</span> <span class="n">running</span> <span class="n">on</span> <span class="n">a</span> <span class="n">tablet</span><span class="o">.</span>  <span class="no">Whoohoo</span><span class="o">!</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then modify your default show.html.erb (<code>app/views/homes/show.html.erb</code>) view. Open it up now and modify it so that it looks something like:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>show.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Desktop&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="no">All</span> <span class="n">other</span> <span class="n">users</span> <span class="n">get</span> <span class="n">redirected</span> <span class="n">here</span><span class="o">.</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
   There are still a few pieces of the puzzle left. What if you need to detect the device type prior to rendering the view? For example, setting paging size/options for our queries. Fortunately, this is pretty easy. Open up your homes controller (<code>app/views/controllers/homes_controller.rb</code>) and modify it so that it looks like the code listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>homes_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">HomesController</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">show</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;@device = &quot;others&quot;</span>
</span><span class='line'><span class="sr">respond_to do |format|</span>
</span><span class='line'>
</span><span class='line'><span class="sr">    format.html.phone do # phone variant</span>
</span><span class='line'><span class="sr">      # add code here for phones</span>
</span><span class='line'><span class="sr">    end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">    format.html.tablet do # tablet variant</span>
</span><span class='line'><span class="sr">      # add code here for tablets</span>
</span><span class='line'><span class="sr">    end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">    format.html.desktop do </span>
</span><span class='line'><span class="sr">      # add code here for desktops and other devices</span>
</span><span class='line'><span class="sr">    end</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  There is one more thing to do. What happens if you need to detect the variant in your view? Fortunately this is very easy and be shown,open up your application layout (<code>app/views/layouts/application.html.erb</code>) and modify it so that it looks like the code listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>application.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">!</span><span class="no">DOCTYPE</span> <span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">head</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">title</span><span class="o">&gt;</span><span class="no">ActionPackVariantsExample</span><span class="o">&lt;</span><span class="sr">/title&gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;%= stylesheet_link_tag    &amp;lsquo;application&amp;rsquo;, media: &amp;lsquo;all&amp;rsquo;, &amp;lsquo;data-turbolinks-track&amp;rsquo; =&gt; true %&gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;%= javascript_include_tag &amp;lsquo;application&amp;rsquo;, &amp;lsquo;data-turbolinks-track&amp;rsquo; =&gt; true %&gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;%= csrf_meta_tags %&gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">head</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">body</span><span class="o">&gt;&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&amp;lt;%= yield %&gt;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%</span> <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">variant</span><span class="o">.</span><span class="n">include?</span> <span class="ss">:tablet</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;small&gt;</span><span class="no">Welcome</span> <span class="no">Tablet</span> <span class="no">User</span><span class="o">&lt;</span><span class="sr">/small&gt;</span>
</span><span class='line'><span class="sr">&amp;lt;% elsif request.variant.include? :phone %&gt;</span>
</span><span class='line'><span class="sr">  &lt;small&gt;Welcome Phone User&lt;/sm</span><span class="n">all</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%</span> <span class="k">end</span> <span class="sx">%&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&lt;</span><span class="sr">/body&gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">html</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Note the if statement starting with <code>if request.variant.include? :tablet</code>. Why do we use <code>.include?</code> The <code>request.variant</code> is actually an array. Therefore it is necessary to use .include?.
</p>




<p>
  So far so good, That's it! See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Slim on Rails]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/23/slim-on-rails/"/>
    <updated>2015-02-23T00:12:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/23/slim-on-rails</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Slim on Rails" />
</p>




<p>
  The first thing you need to do is add a couple gems to the Gemfile. The slim gem tells Rails how to parse the Slim syntax. The slim-rails gem overrides the Rails generators for ERB and replaces them with Slim generators. Add these gems to your Gemfile as below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">slim</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">~&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">slim</span><span class="o">-</span><span class="n">rails</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">~&gt;</span> <span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then run <code>bundle install</code> to install the gems:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then generate a Homes controller with a show action by running the command below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="no">Homes</span> <span class="n">show</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Notice that the generated view ends in .slim, Rails has generated a slim file for us, courtesy of the slim-rails gem. Now let's modify our routes file to set up a resource and add a root path. Open up your routes file (<code>config/routes.rb</code>) and modify it so that it looks somethings like:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">homes</span><span class="c1">#show&amp;rdquo;</span>
</span><span class='line'><span class="n">resource</span> <span class="ss">:home</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:show</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Now you are ready to play with Slim. Open up the show view for homes (<code>app/views/homes/show.html.slim</code>) and modify it so that it looks somethings like:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>show.html.slim </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">javascript</span><span class="p">:</span>
</span><span class='line'>  <span class="n">alert</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">HELLO</span><span class="o">!!!!!&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span><span class='line'><span class="n">h1</span> <span class="no">Welcome</span> <span class="n">to</span> <span class="n">my</span> <span class="n">site</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">b</span><span class="o">&gt;</span><span class="n">inline</span> <span class="n">html</span> <span class="n">is</span> <span class="n">supported</span><span class="o">&lt;</span><span class="sr">/b&gt;</span>
</span><span class='line'><span class="sr">p</span>
</span><span class='line'><span class="sr">  | The time is </span><span class="si">#{</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span> <span class="si">}</span><span class="sr">,&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">I</span> <span class="no">Like</span> <span class="n">to</span> <span class="n">program</span> <span class="k">in</span> <span class="no">Ruby</span> <span class="n">on</span> <span class="no">Rails</span><span class="o">.</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">hashtag</span> <span class="n">I</span> <span class="n">threw</span> <span class="n">a</span> <span class="n">hashtag</span> <span class="k">in</span> <span class="n">here!</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;classy I&amp;rsquo;m classy!&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="nb">p</span> <span class="o">=</span> <span class="no">Random</span><span class="o">.</span><span class="n">rand</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;ul&gt;</span>
</span><span class='line'><span class="sr">&lt;li&gt;if Random.rand(6) == 1</span>
</span><span class='line'><span class="sr">|Lucky number 1!  You win!</span>
</span><span class='line'><span class="sr">br</span>
</span><span class='line'><span class="sr">br</span>
</span><span class='line'><span class="sr">small Goodbye!</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></li>
</ul>


<p>
  Which translates to:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;script type=&quot;text/</span><span class="n">javascript</span><span class="s2">&quot;&gt;</span>
</span><span class='line'><span class="s2">  alert(&quot;</span><span class="no">HELLO</span><span class="o">!!!!!</span><span class="s2">&quot;)</span>
</span><span class='line'><span class="s2">&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;h1&gt;Welcome to my site&lt;/h1&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;&lt;b&gt;inline html is supported&lt;/b&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;The time is 2015-02-22 00:24:59 - 0400, I Like to program in Ruby on Rails.&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;div id=&quot;</span><span class="n">hashtag</span><span class="s2">&quot;&gt;</span>
</span><span class='line'><span class="s2">  I threw a hashtag in here!</span>
</span><span class='line'><span class="s2">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;div id=&quot;</span><span class="n">classy</span><span class="s2">&quot;&gt;</span>
</span><span class='line'><span class="s2">  I&#39;m classy!</span>
</span><span class='line'><span class="s2">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;2&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;br&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;br&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;&lt;small&gt;Goodbye!&lt;/small&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  So far so good, That's it! See ya! :)
</p>

]]></content>
  </entry>
  
</feed>
