<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2015-02-15T20:39:50+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails with Endless Scrolling]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/12/ruby-on-rails-with-endless-scrolling/"/>
    <updated>2015-02-12T23:20:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/12/ruby-on-rails-with-endless-scrolling</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails with Endless Scrolling" />
</p>




<p>
  Endless scrolling allows a website to let users avoid having to click page links or pagination in order to load additional pages of content. It is used by a number of sites such as Pinterest in order to enhanced the user experience. This article will show you how to implement endless scrolling in your Rails application. Letâ€™s run through this with me.
</p>




<p>
  <strong>Create Rails Project</strong><br/>
  To create a Rails project; open up your terminal and type commands below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">endless_scrolling</span> <span class="o">-</span><span class="n">d</span> <span class="n">mysql</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Setting up</strong><br/>
  Ruby on Rails endless scrolling uses the will_paginate gem to manage paging. This has a couple of advantages.
</p>




<p>
  First, if your endless scrolling code doesn't work properly or is disabled, the pagination links themselves will still be present and allow the user to page.
</p>




<p>
  Second, the will_paginate gem provides us with the pagination functionality itself so that we do not need to reinvent the wheel.
</p>




<p>
  To get started, add the will_paginate gem to your <code>Gemfile</code> file.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">will_paginate</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">~&gt;</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">7</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then run a <code>bundle install</code> to install the gem:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  we will create a simple Post model with the fields title, and body. In addition, we will create a simple Posts controller with an index method. Run the commands below to create these items:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="no">Post</span> <span class="n">title</span> <span class="ss">body</span><span class="p">:</span><span class="n">text</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="no">Posts</span> <span class="n">index</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then open up your routes (<code>config/routes.rb</code>) file and modify it so that it looks like the code listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">posts</span><span class="c1">#index&amp;rdquo;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then we need some seed data to play with. Open up your seeds.rb file and add in the code listed below. This code will create 100 posts for us to play with:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>seeds.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">100</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="no">Post</span><span class="o">.</span><span class="n">create!</span><span class="p">(</span><span class="ss">title</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Lipsum</span> <span class="no">Post</span> <span class="c1">#{i}&amp;rdquo;, body: %{&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="no">Lorem</span> <span class="n">ipsum</span> <span class="n">dolor</span> <span class="n">sit</span> <span class="n">amet</span><span class="p">,</span> <span class="n">consectetur</span> <span class="n">adipiscing</span> <span class="n">elit</span><span class="o">.</span> <span class="no">In</span> <span class="n">feugiat</span> <span class="n">purus</span> <span class="n">dapibus</span> <span class="n">fermentum</span> <span class="n">sagittis</span><span class="o">.</span> <span class="no">Fusce</span> <span class="k">in</span> <span class="n">tempus</span> <span class="n">felis</span><span class="o">.</span> <span class="no">Phasellus</span> <span class="n">a</span> <span class="n">erat</span> <span class="n">ut</span> <span class="n">lorem</span> <span class="n">lacinia</span> <span class="n">bibendum</span><span class="o">.</span> <span class="no">Vivamus</span> <span class="n">viverra</span> <span class="n">facilisis</span> <span class="n">neque</span><span class="p">,</span> <span class="k">in</span> <span class="n">scelerisque</span> <span class="n">urna</span> <span class="n">pharetra</span> <span class="n">vel</span><span class="o">.</span> <span class="no">Donec</span> <span class="n">a</span> <span class="n">est</span> <span class="n">mauris</span><span class="o">.</span> <span class="nb">Integer</span> <span class="n">eget</span> <span class="n">metus</span> <span class="n">quis</span> <span class="n">eros</span> <span class="n">egestas</span> <span class="n">elementum</span><span class="o">.</span> <span class="nb">Integer</span> <span class="n">bibendum</span> <span class="n">risus</span> <span class="n">hendrerit</span> <span class="n">dapibus</span> <span class="n">tempor</span><span class="o">.</span> <span class="no">Fusce</span> <span class="n">placerat</span> <span class="k">in</span> <span class="n">orci</span> <span class="n">vitae</span> <span class="n">tincidunt</span><span class="o">.</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">})</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then run rake db:seed to create the seed data:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">seed</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then open up your Posts controller (<code>app/controllers/posts_controller.rb</code>) and modify it so that it looks like the code listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PostsController</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;@posts = Post.paginate(:page =&amp;gt; params[:page], :per_page =&amp;gt; 20)</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Now modify the index view for your Posts controller so that it looks like the code listed below.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>posts_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PostsController</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;@posts = Post.paginate(:page =&amp;gt; params[:page], :per_page =&amp;gt; 20)</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then modify the index (<code>app/views/posts/index.html.erb</code>) view for your Posts controller so that it looks like the code listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>index.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;div id=&quot;posts&quot;&gt;</span>
</span><span class='line'><span class="sr">  &lt;h1&gt;Posts&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">%= render @posts %&gt;</span>
</span><span class='line'><span class="sx">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="sx">&lt;p&gt;&amp;lt;%=</span> <span class="n">will_paginate</span> <span class="vi">@posts</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then let's create the post partial. Create a file called _post.html.erb (<code>app/views/posts/_post.html.erb</code>) for your Posts controller and add in the code listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>_post.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;div class=&quot;post&quot;&gt;</span>
</span><span class='line'><span class="sr">  &lt;h2&gt;&lt;%= post.title %&gt;&lt;/</span><span class="n">h2</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&lt;%=</span> <span class="n">post</span><span class="o">.</span><span class="n">body</span> <span class="sx">%&gt;&lt;/p&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  If you were to start a rails server at this point, you'd see a typical paginated list of posts. Now it's time to add in the javascript that will make endless scrolling work. Open up your application.js (<code>app/assets/javascripts/application.js</code>) file and add in the code listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>application.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span><span class="p">(</span><span class="n">document</span><span class="p">)</span><span class="o">.</span><span class="n">ready</span><span class="p">(</span><span class="n">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="err">$</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">.</span><span class="n">pagination</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span><span class="o">.</span><span class="n">length</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;$(window).scroll(function() {</span>
</span><span class='line'><span class="sr">  var url = $(&#39;.pagination .next_page&#39;).attr(&#39;href&#39;);</span>
</span><span class='line'><span class="sr">  if (url &amp;amp;&amp;amp; $(window).scrollTop() &amp;gt; $(document).height() - $(window).height() - 50) {</span>
</span><span class='line'><span class="sr">    $(&#39;.pagination&#39;).text(&quot;Please Wait...&quot;);</span>
</span><span class='line'><span class="sr">    return $.getScript(url);</span>
</span><span class='line'><span class="sr">  }</span>
</span><span class='line'><span class="sr">});</span>
</span><span class='line'><span class="sr">return $(window).scroll();</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  }</span>
</span><span class='line'><span class="sr">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then create a file called index.js.erb (<code>app/views/posts/index.js.erb</code>) for your Posts controller and add in the code listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>index.js.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="c1">#posts&amp;rsquo;).append(&amp;lsquo;&amp;lt;%= escape_javascript render(@posts) %&gt;&amp;rsquo;);</span>
</span><span class='line'><span class="err">$</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">.</span><span class="n">pagination</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span><span class="o">.</span><span class="n">replaceWith</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%=</span> <span class="n">escape_javascript</span> <span class="n">will_paginate</span><span class="p">(</span><span class="vi">@posts</span><span class="p">)</span> <span class="o">%&gt;&amp;</span><span class="n">rsquo</span><span class="p">;);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  The code works by watching the window's scroll event. When the user scrolls past the specified threshold, more posts are loaded using AJAX. That's it, thank you!. See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Generate Random Data]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/11/ruby-on-rails-generate-random-data/"/>
    <updated>2015-02-11T19:21:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/11/ruby-on-rails-generate-random-data</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails Generate Random Data" />
</p>




<p>
  Sometimes we need to programmatically generate text in Ruby on Rails. We may not have any data available to play with or we may need text in order to mock up the user interface. In this article I will cover 2 different methods of generating random text. Letâ€™s run through this with me.
</p>




<p>
  <strong>Random Letters</strong><br/>
  If you just need fill text, you can add this helper to your application helper (<code>app/helpers/application_helper.rb</code>):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>application_helper.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">ApplicationHelper</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">random_string</span><span class="p">(</span><span class="n">length</span><span class="p">,</span> <span class="n">include_uppercase</span> <span class="o">=</span> <span class="kp">true</span><span class="p">,</span> <span class="n">include_lowercase</span> <span class="o">=</span> <span class="kp">true</span><span class="p">,</span> <span class="n">include_numbers</span> <span class="o">=</span> <span class="kp">false</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;l = []</span>
</span><span class='line'><span class="sr">l.push (&#39;a&#39;..&#39;z&#39;) if include_uppercase</span>
</span><span class='line'><span class="sr">l.push (&#39;A&#39;..&#39;Z&#39;) if include_lowercase</span>
</span><span class='line'>
</span><span class='line'><span class="sr">l.push (0..9) if include_numbers</span>
</span><span class='line'><span class="sr">l = l.map { |i| i.to_a }.flatten</span>
</span><span class='line'><span class="sr">string = (0...length).map { l[rand(l.length)] }.join</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  The helper has 1 required argument is length, which determines the length of the string. To generate a random string of 200 characters, call the helper like below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%=</span> <span class="n">random_string</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Forgery Gem</strong><br/>
  The <a href="https://github.com/sevenwire/forgery" target="_blank">forgery</a> gem provides a great way to generate random data. Not only can forgery generate random words (based off lorem ipsum), but it can also generate random email addresses, and much more. To use forgery, just include the forgery gem in your gemfile:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">forgery</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="mi">0</span><span class="o">.</span><span class="mi">6</span><span class="o">.</span><span class="mi">0</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then run <code>bundle install</code> to install the Gem.
</p>




<p>
  After installing the Gem, you are ready to go to generate words:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%=</span> <span class="no">Forgery</span><span class="p">(</span><span class="ss">:lorem_ipsum</span><span class="p">)</span><span class="o">.</span><span class="n">words</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  To generate a random email address:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%=</span> <span class="no">Forgery</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">internet</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span><span class="o">.</span><span class="n">email_address</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  So far so good, I hope all you guys enjoy it. See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Uploads Multiple Files with DropzoneJS and Paperclip Gem]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/10/ruby-on-rails-uploads-multiple-files-with-dropzonejs-and-paperclip-gem/"/>
    <updated>2015-02-10T21:37:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/10/ruby-on-rails-uploads-multiple-files-with-dropzonejs-and-paperclip-gem</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails Uploads Multiple Files with DropzoneJS and Paperclip Gem" />
</p>




<p>
  <a href="http://www.dropzonejs.com/" target="_blank">DropzoneJS</a> is a javascript library for allowing multiple file uploads via AJAX. It features drag and drop support, folder support, and much more on browsers that support these features.
</p>




<p>
  In this article I will show you how to implement multiple images files uploads directly to paperclip using DropzoneJS. Letâ€™s run through this with me.
</p>




<p>
  <strong>Create Rails Project</strong><br/>
  To create a Rails project; open up your terminal and type commands below: 
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">dropzone</span> <span class="o">-</span><span class="n">d</span> <span class="n">mysql</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Add Gems</strong><br/>
  We will add two gems to our Gemfile. <code>dropzonejs-rails</code> gem is a helper gem that integrates DropzoneJS into our Rails app. <code>paperclip</code> for processing image uploads.
</p>




<p>
  Open up your <code>Gemfile</code> and add in the lines listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">paperclip</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">~&gt;</span> <span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">dropzonejs</span><span class="o">-</span><span class="n">rails</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Now let's run a bundle install to install the gems:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Create a Image Model</strong><br/>
  Now we will create a model to store our image information for Paperclip. Run the command below to create the image model and migrate the database:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">model</span> <span class="n">image</span> <span class="ss">avatar</span><span class="p">:</span><span class="n">attachment</span>
</span><span class='line'><span class="n">rake</span> <span class="ss">db</span><span class="p">:</span><span class="n">migrate</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then add some code to Image model to tell paperclip we want to have an attachment attached. Open up your image model (<code>app/models/image.rb:</code>) and add the code listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>image.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Image</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">has_attached_file</span> <span class="ss">:avatar</span><span class="p">,</span> <span class="ss">:styles</span> <span class="o">=&gt;</span> <span class="p">{</span> <span class="ss">:medium</span> <span class="o">=&gt;</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">300</span><span class="n">x300</span><span class="o">&gt;&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="ss">:thumb</span> <span class="o">=&gt;</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="mi">100</span><span class="n">x100</span><span class="o">&gt;&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="p">},</span> <span class="ss">:default_url</span> <span class="o">=&gt;</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">/</span><span class="n">images</span><span class="o">/</span><span class="ss">:style</span><span class="o">/</span><span class="n">missing</span><span class="o">.</span><span class="n">png</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">validates_attachment_content_type</span> <span class="ss">:avatar</span><span class="p">,</span> <span class="ss">:content_type</span> <span class="o">=&gt;</span> <span class="sr">/\Aimage\/.*\Z/</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Create a Images Controller</strong><br/>
  Then create an Images controller which will be used to display and allow the upload of our images. Run the command below to create this controller:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">g</span> <span class="n">controller</span> <span class="n">images</span> <span class="n">index</span> <span class="n">create</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then update our routes file to set up the routes for our images controller. Open up the routes file (<code>config/routes.rb</code>) and modify it:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>routes.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">resources</span> <span class="ss">:images</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span><span class="ss">:index</span><span class="p">,</span> <span class="ss">:create</span><span class="o">]</span>
</span><span class='line'>  <span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">images</span><span class="c1">#index&amp;rdquo;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then modify our Images controller to add logic to handle the file upload as well as listing each of the images. Open up the Images controller (<code>app/controllers/images_controller.rb</code>) and modify it:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>images_controller.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ImagesController</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">index</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;@images = Image.all</span>
</span><span class='line'><span class="sr">@image = Image.new</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">def</span> <span class="nf">create</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;@image = Image.new(image_params)</span>
</span><span class='line'>
</span><span class='line'><span class="sr">if @image.save</span>
</span><span class='line'><span class="sr">  render json: { message: &quot;success&quot;, fileID: @image.id }, status: 200</span>
</span><span class='line'><span class="sr">else</span>
</span><span class='line'><span class="sr">  render json: { error: @image.errors.full_messages.join(&#39;,&#39;)}, status: 400</span>
</span><span class='line'><span class="sr">end     </span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="kp">private</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">image_params</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;params.require(:image).permit(:avatar)</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  DropzoneJS expects a json return, so the create method returns a JSON success or failure based on whether the image was uploaded successfully or not.
</p>




<p>
  Then add Bootstrap to our application. Open up your application layout (<code>app/views/layouts/application.html.erb</code>)and modify it:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>application.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">!</span><span class="no">DOCTYPE</span> <span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">head</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="n">title</span><span class="o">&gt;</span><span class="no">DropzoneJS</span><span class="o">&lt;</span><span class="sr">/title&gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;%= stylesheet_link_tag    &amp;lsquo;application&amp;rsquo;, media: &amp;lsquo;all&amp;rsquo;, &amp;lsquo;data-turbolinks-track&amp;rsquo; =&gt; true %&gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;%= javascript_include_tag &amp;lsquo;application&amp;rsquo;, &amp;lsquo;data-turbolinks-track&amp;rsquo; =&gt; true %&gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;%= stylesheet_link_tag    &amp;lsquo;&lt;a href=&quot;http:/</span><span class="o">/</span><span class="n">yandex</span><span class="o">.</span><span class="n">st</span><span class="o">/</span><span class="n">bootstrap</span><span class="o">/</span><span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">/</span><span class="n">css</span><span class="o">/</span><span class="n">bootstrap</span><span class="o">.</span><span class="n">min</span><span class="o">.</span><span class="n">css</span><span class="s2">&quot;&gt;http://yandex.st/bootstrap/3.1.1/css/bootstrap.min.css&lt;/a&gt;&amp;rsquo;, media: &amp;lsquo;all&amp;rsquo;, &amp;lsquo;data-turbolinks-track&amp;rsquo; =&gt; true %&gt;</span>
</span><span class='line'><span class="s2">  &amp;lt;%= javascript_include_tag &amp;lsquo;&lt;a href=&quot;</span><span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="n">yandex</span><span class="o">.</span><span class="n">st</span><span class="o">/</span><span class="n">bootstrap</span><span class="o">/</span><span class="mi">3</span><span class="o">.</span><span class="mi">1</span><span class="o">.</span><span class="mi">1</span><span class="o">/</span><span class="n">js</span><span class="o">/</span><span class="n">bootstrap</span><span class="o">.</span><span class="n">min</span><span class="o">.</span><span class="n">js</span><span class="s2">&quot;&gt;http://yandex.st/bootstrap/3.1.1/js/bootstrap.min.js&lt;/a&gt;&amp;rsquo;, &amp;lsquo;data-turbolinks-track&amp;rsquo; =&gt; true %&gt;</span>
</span><span class='line'><span class="s2">  &amp;lt;%= csrf_meta_tags %&gt;</span>
</span><span class='line'><span class="s2">&lt;/head&gt;</span>
</span><span class='line'><span class="s2">&lt;body&gt;</span>
</span><span class='line'><span class="s2">  &amp;lt;%= yield %&gt;</span>
</span><span class='line'><span class="s2">&lt;/body&gt;</span>
</span><span class='line'><span class="s2">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Well, then create our views. First let's create the index view (<code>app/views/images/index.html.erb</code>). Open up your index view for the images controller and modify it:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>index.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;My Images&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="p">;</span><span class="sx">%= form_for(Image.new, html: { multipart: true, class: &amp;ldquo;dropzone&amp;rdquo;}) do |f|  %&gt;</span>
</span><span class='line'><span class="sx">  &lt;div class=</span><span class="s2">&quot;fallback&quot;</span><span class="o">&gt;&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;&amp;lt;%= f.file_field :avatar %&amp;gt;&amp;lt;br&amp;gt;</span>
</span><span class='line'><span class="sr">&amp;lt;%= f.submit &quot;Upload my Avatar&quot; %&amp;gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  &lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%</span> <span class="k">end</span> <span class="sx">%&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">div</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;index&quot;</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="o">&lt;%=</span> <span class="n">render</span> <span class="s2">&quot;index&quot;</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">&lt;/div&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then we need to add some JavaScript to tell Rails how to handle the remote ajax file processing that we will do using dropzone. Create a view called <code>app/views/images/index.js.erb</code> for your images controller and add the code listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>index.js.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.</span><span class="n">index</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">.</span><span class="n">html</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%=</span> <span class="n">escape_javascript</span><span class="p">(</span><span class="n">render</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">index</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;))</span> <span class="o">%&gt;&amp;</span><span class="n">rdquo</span><span class="p">;)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then create the partial that we reference in the previous code. Create a new partial called <code>app/views/images/_index.html.erb</code> for your images controller and add the code listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>_index.html.erb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%</span> <span class="vi">@images</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">image</span><span class="o">|</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;div class=&quot;img-thumbnail&quot;&gt;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;&amp;lt;%= image_tag image.avatar.url(:thumb), alt: image.avatar.url(:thumb) %&amp;gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  &lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">%</span> <span class="k">end</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then modify our application.css and add the dropzone css require. Open up your <code>app/assets/stylesheets/application.css</code> file and modify it:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>application.css </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/&lt;em&gt;</span>
</span><span class='line'><span class="sr"> &lt;/em</span><span class="o">&gt;=</span> <span class="n">require_tree</span> <span class="o">.</span>
</span><span class='line'> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;=</span> <span class="nb">require</span> <span class="n">dropzone</span><span class="o">/</span><span class="n">dropzone</span>
</span><span class='line'> <span class="o">&lt;</span><span class="sr">/em&gt;= require_self</span>
</span><span class='line'><span class="sr"> */</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then modify our application.js and add the dropzone js require. Open up your <code>app/assets/javascripts/application.js</code> file and modify it:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>application.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/= require dropzone</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then add a bit more JavaScript to finish things up. Open up your <code>app/assets/javascripts/images.js</code> file and add in the code listed below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>images.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span><span class="p">(</span><span class="n">document</span><span class="p">)</span><span class="o">.</span><span class="n">ready</span><span class="p">(</span><span class="n">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="sr">//</span> <span class="n">disable</span> <span class="n">auto</span> <span class="n">discover</span>
</span><span class='line'>  <span class="no">Dropzone</span><span class="o">.</span><span class="n">autoDiscover</span> <span class="o">=</span> <span class="kp">false</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  var dropzone = new Dropzone (&amp;ldquo;.dropzone&amp;rdquo;, {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">maxFilesize</span><span class="p">:</span> <span class="mi">256</span><span class="p">,</span> <span class="sr">//</span> <span class="n">set</span> <span class="n">the</span> <span class="n">maximum</span> <span class="n">file</span> <span class="n">size</span> <span class="n">to</span> <span class="mi">256</span> <span class="no">MB</span>
</span><span class='line'><span class="ss">paramName</span><span class="p">:</span> <span class="s2">&quot;image[avatar]&quot;</span><span class="p">,</span> <span class="sr">//</span> <span class="no">Rails</span> <span class="n">expects</span> <span class="n">the</span> <span class="n">file</span> <span class="n">upload</span> <span class="n">to</span> <span class="n">be</span> <span class="n">something</span> <span class="n">like</span> <span class="n">model</span><span class="o">[</span><span class="n">field_name</span><span class="o">]</span>
</span><span class='line'><span class="ss">addRemoveLinks</span><span class="p">:</span> <span class="kp">false</span> <span class="sr">//</span> <span class="n">don</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">show</span> <span class="n">remove</span> <span class="n">links</span> <span class="n">on</span> <span class="n">dropzone</span> <span class="n">itself</span><span class="o">.</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">});</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  dropzone.on(&amp;ldquo;success&amp;rdquo;, function(file) {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">this</span><span class="o">.</span><span class="n">removeFile</span><span class="p">(</span><span class="n">file</span><span class="p">);</span>
</span><span class='line'><span class="vg">$.</span><span class="n">getScript</span><span class="p">(</span><span class="s2">&quot;/images&quot;</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">})</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  So far so good, if you start your Rails server and navigate to http://localhost:3000 you will notice that you can drag and drop images onto the app. On certain browsers, such as Google Chrome, you can even drag and drop one or more folders of images onto the dropzone placeholder and have them upload. In addition you can also click the dropzone and select a file via the file selection screen. That's it! See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails connect to Multiple Databases And Migrations]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/07/ruby-on-rails-connect-to-multiple-databases-and-migrations/"/>
    <updated>2015-02-07T23:32:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/07/ruby-on-rails-connect-to-multiple-databases-and-migrations</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" alt="Ruby on Rails connect to Multiple Databases And Migrations" />
</p>




<p>
  Ruby on Rails connect to Multiple Databases and using ActiveRecord with multiple databases, itâ€™s really simple take it easy. Letâ€™s run through this.
</p>




<p>
  <strong>Rake Tasks</strong><br/>
   Well, I want to handle migrations for two databases, so I need two separate Rake tasks to handle that:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">desc</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Migrate</span> <span class="n">the</span> <span class="n">database</span> <span class="n">through</span> <span class="n">scripts</span> <span class="k">in</span> <span class="n">db</span><span class="o">/</span><span class="n">migrate</span> <span class="n">directory</span><span class="o">.</span><span class="n">&amp;rdquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;namespace :db do</span>
</span><span class='line'><span class="sr">  task :migrate do&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">Rake</span><span class="p">:</span><span class="ss">:Task</span><span class="o">[</span><span class="s2">&quot;db:migrate_db1&quot;</span><span class="o">].</span><span class="n">invoke</span>
</span><span class='line'><span class="ss">Rake</span><span class="p">:</span><span class="ss">:Task</span><span class="o">[</span><span class="s2">&quot;db:migrate_db2&quot;</span><span class="o">].</span><span class="n">invoke</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  task :migrate_db1 do&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span> <span class="no">DB1_CONF</span>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migrator</span><span class="o">.</span><span class="n">migrate</span><span class="p">(</span><span class="s2">&quot;db/migrate/db1/&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  task :migrate_db2 do&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span><span class="o">.</span><span class="n">establish_connection</span> <span class="no">DB2_CONF</span>
</span><span class='line'><span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Migrator</span><span class="o">.</span><span class="n">migrate</span><span class="p">(</span><span class="s2">&quot;db/migrate/db2/&quot;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  My first task is <code>db:migrate</code> that delegates out to <code>db:migrate_db1</code> & <code>db:migrate_db2</code>.
</p>




<p>
  Each of those establish a connection to the database and then runs the migrations from their own separate folders. This allows you to store migrations in separate folders so you can easily manage them.
</p>




<p>
  The migrations are exactly the same as normal.
</p>




<p>
  <strong>Database Connections</strong><br/>
  In order to get those migrations to work, I need to configure the database connections. I'm going to define everything in the <code>database.yml</code> just like normal, but with a different naming convention:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>database.yml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">defaults</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">defaults</span>
</span><span class='line'>  <span class="ss">username</span><span class="p">:</span> <span class="n">root</span>
</span><span class='line'>  <span class="ss">password</span><span class="p">:</span> <span class="mi">1234567</span>
</span><span class='line'>  <span class="ss">adapter</span><span class="p">:</span> <span class="n">mysql2</span>
</span><span class='line'>  <span class="ss">encoding</span><span class="p">:</span> <span class="n">utf8</span>
</span><span class='line'>  <span class="ss">collation</span><span class="p">:</span> <span class="n">utf8_unicode_ci</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;db1:</span>
</span><span class='line'><span class="sr">  development:&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">database</span><span class="p">:</span> <span class="n">db1_development</span>
</span><span class='line'><span class="ss">host</span><span class="p">:</span> <span class="n">localhost</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;:</span> <span class="o">*</span><span class="n">defaults</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="nb">test</span><span class="p">:</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;database: db1_test</span>
</span><span class='line'><span class="sr">host: localhost</span>
</span><span class='line'><span class="sr">&amp;lt;&amp;lt;: *defaults</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  staging:&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">database</span><span class="p">:</span> <span class="n">db1_staging</span>
</span><span class='line'><span class="ss">host</span><span class="p">:</span> <span class="n">localhost</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;:</span> <span class="o">*</span><span class="n">defaults</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="ss">production</span><span class="p">:</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;database: db1_production</span>
</span><span class='line'><span class="sr">host: localhost</span>
</span><span class='line'><span class="sr">&amp;lt;&amp;lt;: *defaults</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;db2:</span>
</span><span class='line'><span class="sr">  development:&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">database</span><span class="p">:</span> <span class="n">db2_development</span>
</span><span class='line'><span class="ss">host</span><span class="p">:</span> <span class="n">localhost</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;:</span> <span class="o">*</span><span class="n">defaults</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="nb">test</span><span class="p">:</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;database: db2_test</span>
</span><span class='line'><span class="sr">host: localhost</span>
</span><span class='line'><span class="sr">&amp;lt;&amp;lt;: *defaults</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  staging:&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">database</span><span class="p">:</span> <span class="n">db2_staging</span>
</span><span class='line'><span class="ss">host</span><span class="p">:</span> <span class="n">localhost</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;:</span> <span class="o">*</span><span class="n">defaults</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="ss">production</span><span class="p">:</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;database: db2_production</span>
</span><span class='line'><span class="sr">host: localhost</span>
</span><span class='line'><span class="sr">&amp;lt;&amp;lt;: *defaults</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  I configure two separate databases db1 & db2.
</p>




<p>
  Then I need to configure the app to load these now. I open <code>application.rb</code> or environment file(s):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>application.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">ENV</span><span class="o">[&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">ENV</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">]</span> <span class="o">||=</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">development</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;db_conf = YAML::load(File.open(File.join(APP_PATH,&amp;lsquo;config&amp;rsquo;,&amp;lsquo;database.yml&amp;rsquo;)))&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">DB1_CONF</span> <span class="o">=</span> <span class="n">db_conf</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">db1</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">][</span><span class="no">ENV</span><span class="o">[&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">ENV</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">]]</span>
</span><span class='line'><span class="no">DB2_CONF</span> <span class="o">=</span> <span class="n">db_conf</span><span class="o">[&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">db2</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">][</span><span class="no">ENV</span><span class="o">[&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">ENV</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">]]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Take a look at what's going on:<br/>
  - I set the database configuration to use. You can just use Rails.env here instead of ENV['ENV'].<br/>
  - I load up the database.yml config and parse it with YAML.<br/>
  - I grab the configuration from the file for each db and the correct environment that I'm running in.<br/>
</p>




<p>
  <strong>Connecting Models</strong><br/>
  When I'm working with multiple databases, I like to explicitly setup the connections inside the models themselves instead of inheriting from ActiveRecord::Base and using subclasses.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>user.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">establish_connection</span> <span class="no">DB1_CONF</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>product.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Product</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">establish_connection</span> <span class="no">DB2_CONF</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Well, All you really need to do is load the configurations, establish the database connections, and setup the migrations to load from a specific directory for each database.
</p>




<p>
  So far so good, See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Develop Your Own Gem and Gemify Your Own Assets Using Rails Engine]]></title>
    <link href="http://geekhmer.github.io/blog/2015/01/02/develop-your-own-gem-and-gemify-your-own-assets-using-rails-engine/"/>
    <updated>2015-01-02T23:32:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/01/02/develop-your-own-gem-and-gemify-your-own-assets-using-rails-engine</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/rubygems_logo.png" alt="Develop Your Own Gem and Gemify Your Own Assets Using Rails Engine" />
</p>




<p>
  The Rails asset pipeline, powered by sprockets, compiles (sass, coffeescript, others), aggregates (combines multiple source files into one file for performance purposes), and post-processes (minimization, gzipâ€™ing) your assets. And which make it easy to include versioned external assets as application dependencies as well.
</p>




<p>
  External assets are made available in Rails via Rails engines. When the engine is loaded into your Rails application, the engine's asset paths are added to your application's load paths. This makes them available for require in your manifest files. An asset gem is just an absurdly simple engine.
</p>




<p>
  You will find almost any JS or CSS library you want, already Gemified, but, if it is not the case, you can Gemify those libraries by your own, and I can help you with it. So, let's do it!
</p>




<p>
  <strong>Create a bare-bones Gem:</strong><br/>
  Bundler makes it simple to create the files and directories necessary for creating a gem. Run the following command to create and initialize a Git repository along with several template files for the gem:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">gem</span> <span class="n">timeago</span><span class="o">-</span><span class="n">rails</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  This command will create basically the following tree:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">â”œâ”€â”€</span> <span class="no">Gemfile</span>
</span><span class='line'><span class="err">â”œâ”€â”€</span> <span class="n">lib</span>
</span><span class='line'><span class="err">â”‚</span>   <span class="err">â”œâ”€â”€</span> <span class="n">timeago</span>
</span><span class='line'><span class="err">â”‚</span>   <span class="err">â”‚</span>   <span class="err">â””â”€â”€</span> <span class="n">rails</span>
</span><span class='line'><span class="err">â”‚</span>   <span class="err">â”‚</span>           <span class="err">â””â”€â”€</span> <span class="n">version</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="err">â”‚</span>   <span class="err">â””â”€â”€</span> <span class="n">rails</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="err">â”œâ”€â”€</span> <span class="no">LICENSE</span><span class="o">.</span><span class="n">txt</span>
</span><span class='line'><span class="err">â”œâ”€â”€</span> <span class="no">Rakefile</span>
</span><span class='line'><span class="err">â”œâ”€â”€</span> <span class="no">README</span><span class="o">.</span><span class="n">md</span>
</span><span class='line'><span class="err">â””â”€â”€</span> <span class="n">timeago</span><span class="o">-</span><span class="n">rails</span><span class="o">.</span><span class="n">gemspec</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Versioning</strong><br/>
  timeago-rails is a gem packaged version of the timeago.js library. Its version should track the version of JavaScript library. Open /lib/timeago/rails/version.rb and set the version:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>version.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">Timeago</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Rails</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;VERSION = &quot;1.4.1&quot;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Turn the Gem into an Engine</strong><br/>
  Bundler created the gem as a standard Ruby module, but we want it to be a Rails Engine.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">timeago</span><span class="o">/</span><span class="n">rails</span><span class="o">/</span><span class="n">version</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module Timeago</span>
</span><span class='line'><span class="sr">  module Rails&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">Engine</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="o">::</span><span class="ss">Rails</span><span class="p">:</span><span class="ss">:Engine</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Well, the module is empty. All we're doing here is declaring the gem as a Rails Engine. This will cause Rails to add its directories to the load path when the Gem is required.
</p>




<p>
  <strong>Add the Assets (Javascript library, CSS, Image) in the Gem</strong><br/>
  We're going to create the directory /vendor/images/, /vendor/javascripts/, vendor/stylesheets/ and place the source for the timeago.js plugin there:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">â”œâ”€â”€</span> <span class="no">Gemfile</span>
</span><span class='line'><span class="err">â”œâ”€â”€</span> <span class="n">lib</span>
</span><span class='line'><span class="err">â”‚</span>   <span class="err">â”œâ”€â”€</span> <span class="n">timeago</span>
</span><span class='line'><span class="err">â”‚</span>   <span class="err">â”‚</span>   <span class="err">â””â”€â”€</span> <span class="n">rails</span>
</span><span class='line'><span class="err">â”‚</span>   <span class="err">â”‚</span>           <span class="err">â””â”€â”€</span> <span class="n">version</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="err">â”‚</span>   <span class="err">â””â”€â”€</span> <span class="n">rails</span><span class="o">.</span><span class="n">rb</span>
</span><span class='line'><span class="err">â”œâ”€â”€</span> <span class="no">LICENSE</span><span class="o">.</span><span class="n">txt</span>
</span><span class='line'><span class="err">â”œâ”€â”€</span> <span class="no">Rakefile</span>
</span><span class='line'><span class="err">â”œâ”€â”€</span> <span class="no">README</span><span class="o">.</span><span class="n">md</span>
</span><span class='line'><span class="err">â”œâ”€â”€</span> <span class="n">timeago</span><span class="o">-</span><span class="n">rails</span><span class="o">.</span><span class="n">gemspec</span>
</span><span class='line'><span class="err">â””â”€â”€</span> <span class="n">vendor</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;     â””â”€â”€ assets</span>
</span><span class='line'><span class="sr">              â”œâ”€â”€ images</span>
</span><span class='line'><span class="sr">              â”œâ”€â”€ javascripts                </span>
</span><span class='line'><span class="sr">              â”‚             â””â”€â”€ timeago.js</span>
</span><span class='line'><span class="sr">              â””â”€â”€ stylesheets</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Test</strong><br/>
  Moving to a sample Rails application, we can include the gem in our host application by adding it to the Gemfile using the path option:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">timeago</span><span class="o">-</span><span class="n">rails</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="ss">path</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">.</span><span class="n">.</span><span class="o">/</span><span class="n">timeago</span><span class="o">-</span><span class="n">rails</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Since we included an asset that needs to be included in the Rails assets, we have to take one more step and instruct the user to add the following to their app/assets/javascripts/application.js file:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>application.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">//</span><span class="o">=</span> <span class="nb">require</span> <span class="n">timeago</span><span class="o">-</span><span class="n">rails</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  This directive actually refers to the app/assets/javascripts/timeago.js file we included in our gem.
</p>




<p>
  Type command below to make sure timeago.js is included in sample Rails application:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">curl</span> <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;http://localhost:3000/assets/timeago.js&quot;</span><span class="o">&gt;</span><span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="ss">localhost</span><span class="p">:</span><span class="mi">3000</span><span class="o">/</span><span class="n">assets</span><span class="o">/</span><span class="n">timeago</span><span class="o">.</span><span class="n">js</span><span class="o">&lt;</span><span class="sr">/a&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  The curl command should return the contents of the timeago.js file if everything is correctly.
</p>




<p>
  <strong>README.md</strong><br/>
  Make a simple readme file with the Gem as documentation.
</p>




<p>
  <strong>Push to GitHub & RubyGems</strong><br/>
  Create a GitHub repository for the Gem, stage all of your commits, commit, and push the code to GitHub.
</p>




<p>
  If you've never published a gem on RubyGems before, you'll need to sign up for an account there. Your account settings will contain an API key that should be copied to ~/.gem/credentials.
</p>




<p>
  Publishing your gem is as simple as:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="n">release</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  So far so good, hope you enjoyed the article. see ya! :)
</p>

]]></content>
  </entry>
  
</feed>
