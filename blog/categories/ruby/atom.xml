<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ruby | GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2014-08-07T18:17:24+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Test Models With RSpec in Ruby on Rails]]></title>
    <link href="http://geekhmer.github.io/blog/2014/08/07/test-models-with-rspec-in-ruby-on-rails/"/>
    <updated>2014-08-07T09:40:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/08/07/test-models-with-rspec-in-ruby-on-rails</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" />
</p>




<p>
  Testing is a good pratice. You should be doing it. It will make you a better programmer and save you a great deal of headache as your web app grows up. It is especially important when working alongside other programmers. Testing is not perfect though so don't try to be perfect. Just get started, and you will improve as time goes on.
</p>




<p>
  <strong>How should I be testing?</strong><br/>
  - Using RSpec & factorygirl<br/>
  - Testing your Models
</p>




<p>
  <strong>Installation</strong><br/>
  Add rspec-rails and factorygirl to both the :development and :test groups in the Gemfile:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Gemfile </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">factory_girl_rails</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="mi">4</span><span class="o">.</span><span class="mi">2</span><span class="o">.</span><span class="mi">1</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'>  <span class="n">gem</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">rspec</span><span class="o">-</span><span class="n">rails</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">~&gt;</span> <span class="mi">3</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Download and install by running:<br>
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Initialize the spec/ directory (where specs will reside) with:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">generate</span> <span class="ss">rspec</span><span class="p">:</span><span class="n">install</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  This adds the following files which are used for configuration:<br/>
  - .rspec<br/>
  - spec/spec_helper.rb<br/>
  - spec/rails_helper.rb
</p>




<p>
  <strong>Generators</strong><br/>
  Once installed, RSpec and factorygirl will generate spec files instead of Test::Unit test files when commands like: <code>rails generate model</code> and <code>rails generate controller</code> are used.
</p>




<p>
  Example:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="n">generate</span> <span class="n">model</span> <span class="no">Post</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  After you run the command above this adds the following directory and file:<br/>
  - spec/models/posts.rb<br/>
  - spec/factories/posts.rb
</p>




<p>
  <strong>Let's get started Model testing</strong>
</p>




<p>
  Assume we have three Models such as post.rb, category.rb, categorization.rb:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>post.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="ss">maximum</span><span class="p">:</span> <span class="mi">100</span> <span class="p">},</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">uniqueness</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:body</span><span class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span> <span class="ss">maximum</span><span class="p">:</span> <span class="mi">200</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:status</span><span class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="ss">maximum</span><span class="p">:</span> <span class="mi">20</span> <span class="p">},</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:category_id</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  has_many :categorizations</span>
</span><span class='line'><span class="sr">  has_many :categories, through: :categorizations&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">scope</span> <span class="ss">:search_by_title</span><span class="p">,</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">title</span><span class="o">|</span> <span class="n">where</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;(</span><span class="n">title</span> <span class="n">like</span> <span class="sc">?)</span> <span class="no">OR</span> <span class="n">title</span> <span class="k">in</span> <span class="p">(</span><span class="sc">?)</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">%</span><span class="c1">#{title}%&amp;rdquo;, title.split) }</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>category.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Category</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="ss">maximum</span><span class="p">:</span> <span class="mi">50</span> <span class="p">},</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">uniqueness</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:short_name</span><span class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="ss">maximum</span><span class="p">:</span> <span class="mi">50</span> <span class="p">},</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">uniqueness</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:description</span><span class="p">,</span> <span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span class="mi">200</span> <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  has_many :categorizations</span>
</span><span class='line'><span class="sr">  has_many :posts, through: :categorizations</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>categorization.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Categorization</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:category_id</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">validates</span> <span class="ss">:post_id</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  belongs_to :category</span>
</span><span class='line'><span class="sr">  belongs_to :post</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Next, we define default factorygirl object for each models in spec/factories/:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>posts.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">FactoryGirl</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">factory</span> <span class="ss">:post</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;title &#39;Ruby on Rails&#39;</span>
</span><span class='line'><span class="sr">body &#39;Ruby on Rails is good&#39;</span>
</span><span class='line'><span class="sr">status &#39;open&#39;</span>
</span><span class='line'><span class="sr">category_id 1</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>categories.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">FactoryGirl</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">factory</span> <span class="ss">:category</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;id 1</span>
</span><span class='line'><span class="sr">name &#39;programming&#39;</span>
</span><span class='line'><span class="sr">short_name &#39;programming&#39;</span>
</span><span class='line'><span class="sr">description &#39;computer programming&#39;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>categorizations.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">FactoryGirl</span><span class="o">.</span><span class="n">define</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">factory</span> <span class="ss">:categorization</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;category_id &#39;1&#39;</span>
</span><span class='line'><span class="sr">post_id &#39;1&#39;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Here, how we test each models in spec/models/:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>post.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">spec_helper</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;describe Post, &amp;lsquo;validation&amp;rsquo; do</span>
</span><span class='line'><span class="sr">  it { should ensure_length_of(:title).is_at_least(10) }</span>
</span><span class='line'><span class="sr">  it { should ensure_length_of(:title).is_at_most(100) }</span>
</span><span class='line'><span class="sr">  it { should validate_presence_of(:title) }</span>
</span><span class='line'><span class="sr">  it { should validate_uniqueness_of(:title) }&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">ensure_length_of</span><span class="p">(</span><span class="ss">:body</span><span class="p">)</span><span class="o">.</span><span class="n">is_at_least</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">ensure_length_of</span><span class="p">(</span><span class="ss">:body</span><span class="p">)</span><span class="o">.</span><span class="n">is_at_most</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span> <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  it { should ensure_length_of(:status).is_at_least(2) }</span>
</span><span class='line'><span class="sr">  it { should ensure_length_of(:status).is_at_most(20) }</span>
</span><span class='line'><span class="sr">  it { should validate_presence_of(:status) }&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">validate_presence_of</span><span class="p">(</span><span class="ss">:category_id</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;describe Post, &amp;lsquo;association&amp;rsquo; do</span>
</span><span class='line'><span class="sr">  it { should have_many(:categorizations) }</span>
</span><span class='line'><span class="sr">  it { should have_many(:categories).through(:categorizations) }</span>
</span><span class='line'><span class="sr">end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">describe</span> <span class="no">Post</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">column_specification</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_db_column</span><span class="p">(</span><span class="ss">:title</span><span class="p">)</span><span class="o">.</span><span class="n">of_type</span><span class="p">(</span><span class="ss">:string</span><span class="p">)</span><span class="o">.</span><span class="n">with_options</span><span class="p">(</span><span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="ss">maximum</span><span class="p">:</span> <span class="mi">100</span> <span class="p">},</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">uniqueness</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_db_column</span><span class="p">(</span><span class="ss">:body</span><span class="p">)</span><span class="o">.</span><span class="n">of_type</span><span class="p">(</span><span class="ss">:text</span><span class="p">)</span><span class="o">.</span><span class="n">with_options</span><span class="p">(</span><span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span> <span class="ss">maximum</span><span class="p">:</span> <span class="mi">200</span> <span class="p">})</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_db_column</span><span class="p">(</span><span class="ss">:status</span><span class="p">)</span><span class="o">.</span><span class="n">of_type</span><span class="p">(</span><span class="ss">:string</span><span class="p">)</span><span class="o">.</span><span class="n">with_options</span><span class="p">(</span><span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="ss">maximum</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span> <span class="p">})</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_db_column</span><span class="p">(</span><span class="ss">:category_id</span><span class="p">)</span><span class="o">.</span><span class="n">of_type</span><span class="p">(</span><span class="ss">:integer</span><span class="p">)</span> <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  it { should have_db_index(:title).unique(true) }</span>
</span><span class='line'><span class="sr">end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">describe</span> <span class="no">Post</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">.</span><span class="n">search_by_name</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">before</span><span class="p">(</span><span class="ss">:each</span><span class="p">)</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;FactoryGirl.create(:post, title: &#39;Ruby on Rails&#39;)</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">it</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">returns</span> <span class="n">post</span> <span class="n">that</span> <span class="n">match</span> <span class="n">with</span> <span class="n">title</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;Post.search_by_title(&#39;Ruby on Rails&#39;).count.should eql 1</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">it</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">returns</span> <span class="n">post</span> <span class="n">that</span> <span class="n">like</span> <span class="n">title</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;Post.search_by_title(&#39;ruby on rails&#39;).count.should eql 1</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">it</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">returns</span> <span class="n">post</span> <span class="k">when</span> <span class="n">title</span> <span class="n">is</span> <span class="n">blank</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;Post.search_by_title(&#39;&#39;).count.should eql 1</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">it</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">returns</span> <span class="n">empty</span> <span class="k">when</span> <span class="n">title</span> <span class="n">is</span> <span class="ow">not</span> <span class="n">match</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;Post.search_by_title(&#39;not match&#39;).count.should eql 0</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>category.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">spec_helper</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;describe Category, &amp;lsquo;validation&amp;rsquo; do</span>
</span><span class='line'><span class="sr">  it { should ensure_length_of(:name).is_at_least(10) }</span>
</span><span class='line'><span class="sr">  it { should ensure_length_of(:name).is_at_most(50) }</span>
</span><span class='line'><span class="sr">  it { should validate_presence_of(:name) }</span>
</span><span class='line'><span class="sr">  it { should validate_uniqueness_of(:name) }&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">ensure_length_of</span><span class="p">(</span><span class="ss">:short_name</span><span class="p">)</span><span class="o">.</span><span class="n">is_at_least</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">ensure_length_of</span><span class="p">(</span><span class="ss">:short_name</span><span class="p">)</span><span class="o">.</span><span class="n">is_at_most</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">validate_presence_of</span><span class="p">(</span><span class="ss">:short_name</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">validate_uniqueness_of</span><span class="p">(</span><span class="ss">:short_name</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;describe Category, &amp;lsquo;association&amp;rsquo; do</span>
</span><span class='line'><span class="sr">  it { should have_many(:categorizations) }</span>
</span><span class='line'><span class="sr">  it { should have_many(:posts).through(:categorizations) }</span>
</span><span class='line'><span class="sr">end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">describe</span> <span class="no">Category</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">column_specification</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_db_column</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span><span class="o">.</span><span class="n">of_type</span><span class="p">(</span><span class="ss">:string</span><span class="p">)</span><span class="o">.</span><span class="n">with_options</span><span class="p">(</span><span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="ss">maximum</span><span class="p">:</span> <span class="mi">50</span> <span class="p">},</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">uniqueness</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_db_column</span><span class="p">(</span><span class="ss">:short_name</span><span class="p">)</span><span class="o">.</span><span class="n">of_type</span><span class="p">(</span><span class="ss">:string</span><span class="p">)</span><span class="o">.</span><span class="n">with_options</span><span class="p">(</span><span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="ss">maximum</span><span class="p">:</span> <span class="mi">50</span> <span class="p">},</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span> <span class="ss">uniqueness</span><span class="p">:</span> <span class="kp">true</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">have_db_column</span><span class="p">(</span><span class="ss">:description</span><span class="p">)</span><span class="o">.</span><span class="n">of_type</span><span class="p">(</span><span class="ss">:text</span><span class="p">)</span><span class="o">.</span><span class="n">with_options</span><span class="p">(</span><span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">maximum</span><span class="p">:</span> <span class="mi">200</span> <span class="p">})</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>categorization.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">spec_helper</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;describe Categorization, &amp;lsquo;validation&amp;rsquo; do</span>
</span><span class='line'><span class="sr">  it { should validate_presence_of(:category_id) }</span>
</span><span class='line'><span class="sr">  it { should validate_presence_of(:post_id) }</span>
</span><span class='line'><span class="sr">end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">describe</span> <span class="no">Categorization</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">association</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">belong_to</span><span class="p">(</span><span class="ss">:category</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="n">it</span> <span class="p">{</span> <span class="n">should</span> <span class="n">belong_to</span><span class="p">(</span><span class="ss">:post</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;describe Categorization, &amp;lsquo;column_specification&amp;rsquo; do</span>
</span><span class='line'><span class="sr">  it { should have_db_column(:category_id).of_type(:integer).with_options(presence: true) }</span>
</span><span class='line'><span class="sr">  it { should have_db_column(:post_id).of_type(:integer).with_options(presence: true) }</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  To run models specs use the following command:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rspec</span> <span class="n">spec</span><span class="o">/</span><span class="n">models</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  You should get back the response something like:
</p>




<p>
  <a class="fancybox" href="http://geekhmer.github.io/images/model_testing.png" width="500"><img src="http://geekhmer.github.io/images/model_testing.png" /></a>
</p>




<p>
  For more detail about <a href="https://github.com/rspec/rspec-rails" target="_blank">RSpec</a>, <a href="https://github.com/thoughtbot/factory_girl" target="_blank">FactoryGirl</a>.<br/>
  So far so good, We've already created 40 models specs to test model. :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Good Rails3 ActiveRecord Finder Vs Very Good Rails4 ActiveRecord Finder]]></title>
    <link href="http://geekhmer.github.io/blog/2014/08/05/good-rails3-activerecord-finder-vs-very-good-rails4-activerecord-finder/"/>
    <updated>2014-08-05T23:39:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/08/05/good-rails3-activerecord-finder-vs-very-good-rails4-activerecord-finder</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/what_is_new_in_rails4.png" width="500" />
</p>




<p>
  Well, previouse article I had talked about <a href="http://geekhmer.github.io/blog/2014/08/02/keyword-arguments-feature-in-ruby-2-dot-0/">Keyword Arguments Feature in Ruby 2.0</a>. now we can apply keyword arguments in Rails4.
</p>




<p>
  <strong>FINDERS</strong>
</p>




<p>  
  <strong>old-style finders are deprecated</strong><br/>
  - Rails3: 
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Rails3 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="ss">:all</span><span class="p">,</span> <span class="ss">conditions</span><span class="p">:</span> <span class="p">{</span> <span class="ss">author</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">admin</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Warning: Calling #find(:all) is deprecated. Please call #all directly instead. You have also used finder options. Please build s scope instead of using finder options.
</p>




<p>
  - Rails4:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Rails4 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">author</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">admin</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Dynamic finder that return collections are deprecated</strong><br/>
  - Rails3:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Rails3 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_all_by_title</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Rails</span> <span class="mi">4</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_last_by_author</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">admin</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Warning: This dynamic method is deprecated. Please use e.g Post.where(...).all instead.
</p>




<p>
  - Rails4:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Rails4 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">title</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Rails</span> <span class="mi">4</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">author</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">admin</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span><span class="o">.</span><span class="n">last</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>FIND_BY</strong>
</p>




<p>
- Rails3:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Rails3 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_by_title</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Rails</span> <span class="mi">4</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span> <span class="c1"># Dynamic find_by finders that take a single argument are not deprecated.</span>
</span><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_by_title</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Rails</span> <span class="mi">4</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="ss">conditions</span><span class="p">:</span> <span class="p">{</span> <span class="ss">author</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">admin</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="p">})</span> <span class="c1"># Dynamic find_by finders with conditions are deprecated.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  - Rails4:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Rails4 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">title</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Rails</span> <span class="mi">4</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">title</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Rails</span> <span class="mi">4</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="ss">author</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">admin</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>FIND_BY WITH HASH</strong>
</p>




<p>
  <strong>allows dynamic input more easily</strong><br/>
  - Rails4:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Rails4 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">post_params</span> <span class="o">=</span> <span class="p">{</span> <span class="ss">title</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Rails</span> <span class="mi">4</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="ss">author</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">admin</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="p">}</span>
</span><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="n">post_params</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;Post.find_by(&amp;ldquo;published_on &amp;lt; ?&amp;rdquo;, 2.weeks.ago)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>FIND_OR_*</strong>
</p>




<p>
  <strong>dynamic finders that create new objects are deprecated</strong><br/>
  - Rails3:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Rails3 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_or_initialize_by_title</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Rails</span> <span class="mi">4</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_or_create_by_title</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Rails</span> <span class="mi">4</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Warning: This dinamic method is deprecated. Please use e.g Post.find_or_initialize_by(name: 'foo') instead.<br/>
  Warning: This dinamic method is deprecated. Please use e.g Post.find_or_create_by(name: 'foo') instead.
</p>




<p>
  - Rails4:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>Rails4 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_or_initialize_by</span><span class="p">(</span><span class="ss">title</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Rails</span> <span class="mi">4</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_or_create_by</span><span class="p">(</span><span class="ss">title</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Rails</span> <span class="mi">4</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  So far so good, let upgrade to Rails4 then refactor ActiveRecord Finder together. :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What We Should Test with RSpec in Rails]]></title>
    <link href="http://geekhmer.github.io/blog/2014/08/04/what-we-should-test-with-rspec-in-rails/"/>
    <updated>2014-08-04T22:27:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/08/04/what-we-should-test-with-rspec-in-rails</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" width="400" />
</p>




<p>
  Well, what is takes to begin testing Rails applications. The hardest part of being a beginner is that you often don't know what you should test with RSpec in Rails.
</p>




<p>
  Here is the most important thing is that you are testing: Feature specs, Model specs, Controller specs, View specs, Route specs.
</p>




<p>
  <strong>Feature specs</strong><br/>
  Feature specs is a kind of acceptance test, the tests that walk through your entire application ensuring that each of the components work together.<br/>
  They are written from the perspective of a user clicking around the application and filling in forms on the page.<br/>
  While Feature specs are great for testing high level functionality, keep in mind that feature specs is slow to run.
</p>




<p>
  <strong>Model specs</strong><br/>
  Model specs are similar to unit tests in that they are used to test smaller parts of the system, such as classes or methods, and they interact with the database too.
</p>




<p>
  <strong>Controller specs</strong><br/>
  When testing multiple paths through a controller is necessary, we favor using controller specs over feature specs, as they are faster to run and often easier to write.
</p>




<p>
  <strong>View specs</strong><br/>
  View specs is great for testing the conditional display of information in the templates. Most developers forget about these tests and use feature specs instead.<br/>
  While you can cover each view conditional with a feature specs, I prefer to user view specs.
</p>




<p>
  <strong>Route specs</strong><br/>
  Most Ruby on Rails developers don’t test their routes, If you ever need to test an abstract base controller independently from any subclass, you will like need to add route specs for your testing.
</p>




<p>
  So far so good, this was just an overview of what we should get started testing Rails. :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keyword Arguments Feature in Ruby 2.0]]></title>
    <link href="http://geekhmer.github.io/blog/2014/08/02/keyword-arguments-feature-in-ruby-2-dot-0/"/>
    <updated>2014-08-02T09:27:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/08/02/keyword-arguments-feature-in-ruby-2-dot-0</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/rights_and_wrongsof_ruby.jpg" width="400" />
</p>




<p>
  One of the new features of Ruby 2.0 is keyword arguments. keyword arguments make it easier create method that take optional named arguments.
</p>




<p>
  keyword arguments in the method definition must be symbols given in the new-style hash syntax.<br/>
  Assume we have a method:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">print</span><span class="p">(</span><span class="ss">message</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Hello</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">message</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;print #=&gt; Hello&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="nb">print</span><span class="p">(</span><span class="ss">message</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Hi</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span> <span class="c1">#=&gt; Hi&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="nb">print</span><span class="p">({</span> <span class="ss">message</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Hi</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="p">})</span> <span class="c1">#=&gt; Hi</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Ruby 2.0 blocks can also be defined with keyword arguments:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">define_method</span><span class="p">(</span><span class="ss">:print</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="ss">message</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Hello</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">message</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;print #=&gt; Hello&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="nb">print</span><span class="p">(</span><span class="ss">message</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Hi</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span> <span class="c1">#=&gt; Hi&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="nb">print</span><span class="p">({</span> <span class="ss">message</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="no">Hi</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="p">})</span> <span class="c1">#=&gt; Hi</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Keyword arguments vs Positional arguments</strong><br/>
  Assume we have a method with positional arguments:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">total</span><span class="p">(</span><span class="n">subtotal</span><span class="p">,</span> <span class="n">tax</span><span class="p">,</span> <span class="n">discount</span><span class="p">)</span>
</span><span class='line'>  <span class="n">subtotal</span> <span class="o">+</span> <span class="n">tax</span> <span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="n">discount</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;total(100, 10, 5) # =&gt; 105</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  This method does its job, but as a reader of the code using the total method, I have no idea what those arguments mean without looking up the implementation of the method.
</p>




<p>
  By using keyword arguments, we know what the arguments mean without looking up the implementation of the called method:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">obvious_total</span><span class="p">(</span><span class="ss">subtotal</span><span class="p">:,</span> <span class="ss">tax</span><span class="p">:,</span> <span class="ss">discount</span><span class="p">:)</span>
</span><span class='line'>  <span class="n">subtotal</span> <span class="o">+</span> <span class="n">tax</span> <span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="n">discount</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;obvious_total(subtotal: 100, tax: 10, discount: 5) # =&gt; 105&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">obvious_total</span><span class="p">({</span> <span class="ss">subtotal</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="ss">tax</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="ss">discount</span><span class="p">:</span> <span class="mi">5</span> <span class="p">})</span> <span class="c1"># =&gt; 105</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Keyword arguments allow us to switch the order of the arguments, without affecting the behavior of the method:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">obvious_total</span><span class="p">(</span><span class="ss">subtotal</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="ss">discount</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="ss">tax</span><span class="p">:</span> <span class="mi">10</span><span class="p">)</span> <span class="c1"># =&gt; 105&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">obvious_total</span><span class="p">({</span> <span class="ss">subtotal</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span> <span class="ss">discount</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="ss">tax</span><span class="p">:</span> <span class="mi">10</span> <span class="p">})</span> <span class="c1"># =&gt; 105</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby 'unless' Goes Mainstream]]></title>
    <link href="http://geekhmer.github.io/blog/2014/07/31/ruby-unless-goes-mainstream/"/>
    <updated>2014-07-31T23:44:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/07/31/ruby-unless-goes-mainstream</id>
    <content type="html"><![CDATA[<p>
  I don't like or not a fan of Ruby's 'unless' keyword. I mean its nice but it take time to get used to.
</p>




<p>
  Sample 'unless' statements like this:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="n">product</span><span class="o">.</span><span class="n">name</span> <span class="k">unless</span> <span class="n">product</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">nil?</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  The code statement above is nice and easy. I'd say that in english "Print the product's name unless the product doesn't have a name".
</p>




<p>
  Why do we need unless? Let replace it with something else:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Object</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">not_nil?</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;!nil?</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then we can code:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="n">product</span><span class="o">.</span><span class="n">name</span> <span class="k">if</span> <span class="n">product</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">not_nil?</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  So far so good, that's much better, 'unless' never made it into mainstream language.<br/>
  OO scripting languages like Ruby can make new keyword. :)
</p>

]]></content>
  </entry>
  
</feed>
