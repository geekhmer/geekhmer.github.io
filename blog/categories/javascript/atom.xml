<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Javascript | GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2018-04-16T16:12:14+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[react-chartjsx simple yet flexible react chart components for designers &amp; developer]]></title>
    <link href="http://geekhmer.github.io/blog/2018/04/16/react-chartjsx-simple-yet-flexible-react-chart-components-for-designers-and-developer/"/>
    <updated>2018-04-16T11:37:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2018/04/16/react-chartjsx-simple-yet-flexible-react-chart-components-for-designers-and-developer</id>
    <content type="html"><![CDATA[<p>
  People normally don't want to go through a large amount of data presented to them in form of text or tables. Mostly that's because it is boring, but more importantly, it's a little harder to process raw numbers. 
</p>




<p>
  Here is a table of the ten most populous countries in the world:
</p>




<p>
  <img src="http://geekhmer.github.io/images/table-chart.png" width="700" alt="react-chartjsx" />
</p>




<p>
  With only five countries in this table, there is still a very good chance that you and other will skip over the table entirely. Normally, people only look at one or two countries that interest them. If the same data had been presented in the form of a bar chart, it would have taken very little time for someone to get a rough idea of the population in these countries. 
</p>




<p>
  Moreover, it will be a lot easier to figure out trends or facts, for example, Asia is twice as populated as Africa, and Asia has about ten times more people than Latin America by looking at the length of bars in the chart.
</p>




<p>
  <img src="http://geekhmer.github.io/images/bar-chart.png" width="700" alt="Bar chart" />
</p>




<h3>react-chartjsx</h3>




<p>  
  <img src="http://geekhmer.github.io/images/react-chartjsx.png" width="700" alt="react-chartjsx" />
</p>




<p>
  The official React chart.js components. A simple yet flexible react chart components for designers & developer that you can use to create different kinds of charts is <a href="https://github.com/codefacebook/react-chartjsx" target="_blank">react-chartjsx</a>. In this series, you will be learning about all the important aspects of this react chart components. It can be used to create fancy, responsive charts on HTML5 Canvas.
</p>




<p>
  <a href="https://github.com/codefacebook/react-chartjsx" target="_blank">react-chartjsx</a> allows you to mix different chart types and plot data on date time, logarithmic, or custom scales with ease. The library also sports out-of-the-box animations that can be applied when changing data or updating colors.
</p>




<p>
  Let's get started with the installation, and then we'll move on to configuration options and other aspects.
</p>




<h3>Installation</h3>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="n">install</span> <span class="n">react</span><span class="o">-</span><span class="n">chartjsx</span> <span class="n">chart</span><span class="o">.</span><span class="n">js</span> <span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="n">save</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Usage</h3>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">import</span> <span class="p">{</span> <span class="no">Bar</span><span class="p">,</span> <span class="no">Line</span> <span class="p">}</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">react</span><span class="o">-</span><span class="n">chartjsx</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&amp;lt;Bar data={this.state.barChartData}&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'> <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'> <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&amp;lt;Line data={this.state.lineChartData}&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'>  <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span>
</span><span class='line'>  <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Properties</strong><br/>
  - data: PropTypes.object.isRequired<br/>
  - width: PropTypes.number<br/>
  - height: PropTypes.number<br/>
  - options: PropTypes.object<br/>
  - redraw: PropTypes.bool<br/>
  - getDatasetAtEvent: PropTypes.func<br/>
  - getElementAtEvent: PropTypes.func<br/>
  - getElementsAtEvent: PropTypes.func<br/>
  - getChart: PropTypes.func<br/>
  - getCanvas: PropTypes.func
</p>




<p>
  <strong>Redraw</strong><br/>
  If you want the chart destroyed and redrawn on every change, pass in <code>redraw</code> as <code>true</code>.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">import</span> <span class="p">{</span> <span class="no">Bar</span> <span class="p">}</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">react</span><span class="o">-</span><span class="n">chartjsx</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&amp;lt;Bar data={this.state.barChartData}&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'> <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'> <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span>
</span><span class='line'> <span class="n">redraw</span><span class="o">=</span><span class="p">{</span><span class="kp">true</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Custom size</strong><br/>
  To custom size you need to set <code>responsive</code> to <code>false</code>.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&amp;lt;Bar data={this.state.chartDataBar}&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'> <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'> <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Events</h3>




<p>
  <strong>getDatasetAtEvent</strong><br/>
  Looks for the element under the event point, then returns all elements from that dataset. This is used internally for 'dataset' mode highlighting.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&amp;lt;Bar data={this.state.barChartData}&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'> <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'> <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span>
</span><span class='line'> <span class="n">getDatasetAtEvent</span><span class="o">=</span><span class="p">{(</span><span class="n">dataset</span><span class="p">,</span> <span class="n">event</span><span class="p">)</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="p">{</span><span class="n">console</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">dataset</span><span class="p">)}}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>getElementAtEvent</strong><br/>
  Calling getElementAtEvent(event) on your Chart instance passing an argument of an event, will return the single element at the event position. If there are multiple items within range, only the first is returned.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&amp;lt;Bar data={this.state.barChartData}&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'> <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'> <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span>
</span><span class='line'> <span class="n">getElementAtEvent</span><span class="o">=</span><span class="p">{(</span><span class="n">elems</span><span class="p">,</span> <span class="n">event</span><span class="p">)</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="p">{</span><span class="n">console</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">elems</span><span class="p">)}}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>getElementsAtEvent</strong><br/>
  A function to be called when mouse clicked on chart elememts, will return all element at that point as an array.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&amp;lt;Bar data={this.state.barChartData}&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'> <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'> <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span>
</span><span class='line'> <span class="n">getElementsAtEvent</span><span class="o">=</span><span class="p">{(</span><span class="n">elems</span><span class="p">,</span> <span class="n">event</span><span class="p">)</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="p">{</span><span class="n">console</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">elems</span><span class="p">)}}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>getChart</strong><br/>
  A function to be called for getting chartjs object.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&amp;lt;Bar data={this.state.barChartData}&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'> <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'> <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span>
</span><span class='line'> <span class="n">getChart</span><span class="o">=</span><span class="p">{(</span><span class="n">chart</span><span class="p">)</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="p">{</span><span class="n">console</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">chart</span><span class="p">)}}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>getCanvas</strong><br/>
  A function to be called for getting canvas element.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&amp;lt;Bar data={this.state.barChartData}&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'> <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'> <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span>
</span><span class='line'> <span class="n">getCanvas</span><span class="o">=</span><span class="p">{(</span><span class="n">canvas</span><span class="p">)</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="p">{</span><span class="n">console</span><span class="o">.</span><span class="n">log</span><span class="p">(</span><span class="n">canvas</span><span class="p">)}}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Sample</h3>




<p>
  <strong>Bar chart</strong>
</p>




<p>
  <img src="http://geekhmer.github.io/images/bar-chart.png" width="700" alt="Bar chart" />
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">import</span> <span class="p">{</span> <span class="no">Bar</span> <span class="p">}</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">react</span><span class="o">-</span><span class="n">chartjsx</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;export default class App extends Component {</span>
</span><span class='line'><span class="sr">  state = {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">barChartData</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">labels</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;Africa&quot;</span><span class="p">,</span> <span class="s2">&quot;Asia&quot;</span><span class="p">,</span> <span class="s2">&quot;Europe&quot;</span><span class="p">,</span> <span class="s2">&quot;Latin America&quot;</span><span class="p">,</span> <span class="s2">&quot;North America&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">datasets</span><span class="p">:</span> <span class="o">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Population (millions)&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">backgroundColor</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;#3e95cd&quot;</span><span class="p">,</span> <span class="s2">&quot;#8e5ea2&quot;</span><span class="p">,</span><span class="s2">&quot;#3cba9f&quot;</span><span class="p">,</span><span class="s2">&quot;#e8c3b9&quot;</span><span class="p">,</span><span class="s2">&quot;#c45850&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">2478</span><span class="p">,</span><span class="mi">5267</span><span class="p">,</span><span class="mi">734</span><span class="p">,</span><span class="mi">784</span><span class="p">,</span><span class="mi">433</span><span class="o">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  constructor(props) {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">super</span><span class="p">(</span><span class="n">props</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  render() {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="p">(</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="no">Bar</span> <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="n">this</span><span class="o">.</span><span class="n">state</span><span class="o">.</span><span class="n">barChartData</span><span class="p">}</span>
</span><span class='line'>         <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'>         <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'>         <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;/</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Line chart</strong>
</p>




<p>
  <img src="http://geekhmer.github.io/images/line-chart.png" width="700" alt="Line chart" />
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">import</span> <span class="p">{</span> <span class="no">Line</span> <span class="p">}</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">react</span><span class="o">-</span><span class="n">chartjsx</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;export default class App extends Component {</span>
</span><span class='line'><span class="sr">  state = {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">lineChartData</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">labels</span><span class="p">:</span> <span class="o">[</span><span class="mi">1500</span><span class="p">,</span><span class="mi">1600</span><span class="p">,</span><span class="mi">1700</span><span class="p">,</span><span class="mi">1750</span><span class="p">,</span><span class="mi">1800</span><span class="p">,</span><span class="mi">1850</span><span class="p">,</span><span class="mi">1900</span><span class="p">,</span><span class="mi">1950</span><span class="p">,</span><span class="mi">1999</span><span class="p">,</span><span class="mi">2050</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">datasets</span><span class="p">:</span> <span class="o">[</span><span class="p">{</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">86</span><span class="p">,</span><span class="mi">114</span><span class="p">,</span><span class="mi">106</span><span class="p">,</span><span class="mi">106</span><span class="p">,</span><span class="mi">107</span><span class="p">,</span><span class="mi">111</span><span class="p">,</span><span class="mi">133</span><span class="p">,</span><span class="mi">221</span><span class="p">,</span><span class="mi">783</span><span class="p">,</span><span class="mi">2478</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Africa&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">borderColor</span><span class="p">:</span> <span class="s2">&quot;#3e95cd&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">fill</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">282</span><span class="p">,</span><span class="mi">350</span><span class="p">,</span><span class="mi">411</span><span class="p">,</span><span class="mi">502</span><span class="p">,</span><span class="mi">635</span><span class="p">,</span><span class="mi">809</span><span class="p">,</span><span class="mi">947</span><span class="p">,</span><span class="mi">1402</span><span class="p">,</span><span class="mi">3700</span><span class="p">,</span><span class="mi">5267</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Asia&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">borderColor</span><span class="p">:</span> <span class="s2">&quot;#8e5ea2&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">fill</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">168</span><span class="p">,</span><span class="mi">170</span><span class="p">,</span><span class="mi">178</span><span class="p">,</span><span class="mi">190</span><span class="p">,</span><span class="mi">203</span><span class="p">,</span><span class="mi">276</span><span class="p">,</span><span class="mi">408</span><span class="p">,</span><span class="mi">547</span><span class="p">,</span><span class="mi">675</span><span class="p">,</span><span class="mi">734</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Europe&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">borderColor</span><span class="p">:</span> <span class="s2">&quot;#3cba9f&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">fill</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">40</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">24</span><span class="p">,</span><span class="mi">38</span><span class="p">,</span><span class="mi">74</span><span class="p">,</span><span class="mi">167</span><span class="p">,</span><span class="mi">508</span><span class="p">,</span><span class="mi">784</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Latin America&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">borderColor</span><span class="p">:</span> <span class="s2">&quot;#e8c3b9&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">fill</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">6</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">26</span><span class="p">,</span><span class="mi">82</span><span class="p">,</span><span class="mi">172</span><span class="p">,</span><span class="mi">312</span><span class="p">,</span><span class="mi">433</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;North America&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">borderColor</span><span class="p">:</span> <span class="s2">&quot;#c45850&quot;</span><span class="p">,</span>
</span><span class='line'>
</span><span class='line'>      <span class="ss">fill</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  constructor(props) {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">super</span><span class="p">(</span><span class="n">props</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  render() {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="p">(</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="no">Line</span> <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="n">this</span><span class="o">.</span><span class="n">state</span><span class="o">.</span><span class="n">lineChartData</span><span class="p">}</span>
</span><span class='line'>          <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'>          <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'>          <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;/</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Pie chart</strong>
</p>




<p>
  <img src="http://geekhmer.github.io/images/pie-chart.png" width="700" alt="Pie chart" />
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">import</span> <span class="p">{</span> <span class="no">Pie</span> <span class="p">}</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">react</span><span class="o">-</span><span class="n">chartjsx</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;export default class App extends Component {</span>
</span><span class='line'><span class="sr">  state = {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">pieChartData</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">labels</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;Africa&quot;</span><span class="p">,</span> <span class="s2">&quot;Asia&quot;</span><span class="p">,</span> <span class="s2">&quot;Europe&quot;</span><span class="p">,</span> <span class="s2">&quot;Latin America&quot;</span><span class="p">,</span> <span class="s2">&quot;North America&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">datasets</span><span class="p">:</span> <span class="o">[</span><span class="p">{</span>
</span><span class='line'>    <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Population (millions)&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">backgroundColor</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;#3e95cd&quot;</span><span class="p">,</span> <span class="s2">&quot;#8e5ea2&quot;</span><span class="p">,</span><span class="s2">&quot;#3cba9f&quot;</span><span class="p">,</span><span class="s2">&quot;#e8c3b9&quot;</span><span class="p">,</span><span class="s2">&quot;#c45850&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">2478</span><span class="p">,</span><span class="mi">5267</span><span class="p">,</span><span class="mi">734</span><span class="p">,</span><span class="mi">784</span><span class="p">,</span><span class="mi">433</span><span class="o">]</span>
</span><span class='line'>  <span class="p">}</span><span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  constructor(props) {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">super</span><span class="p">(</span><span class="n">props</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  render() {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="p">(</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="no">Pie</span> <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="n">this</span><span class="o">.</span><span class="n">state</span><span class="o">.</span><span class="n">pieChartData</span><span class="p">}</span>
</span><span class='line'>         <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'>         <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'>         <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;/</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Radar chart</strong>
</p>




<p>
  <img src="http://geekhmer.github.io/images/radar-chart.png" width="700" alt="Radar chart" />
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">import</span> <span class="p">{</span> <span class="no">Radar</span> <span class="p">}</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">react</span><span class="o">-</span><span class="n">chartjsx</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;export default class App extends Component {</span>
</span><span class='line'><span class="sr">  state = {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">radarChartData</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">labels</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;Africa&quot;</span><span class="p">,</span> <span class="s2">&quot;Asia&quot;</span><span class="p">,</span> <span class="s2">&quot;Europe&quot;</span><span class="p">,</span> <span class="s2">&quot;Latin America&quot;</span><span class="p">,</span> <span class="s2">&quot;North America&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">datasets</span><span class="p">:</span> <span class="o">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;1950&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">fill</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">backgroundColor</span><span class="p">:</span> <span class="s2">&quot;rgba(179,181,198,0.2)&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">borderColor</span><span class="p">:</span> <span class="s2">&quot;rgba(179,181,198,1)&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">pointBorderColor</span><span class="p">:</span> <span class="s2">&quot;#fff&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">pointBackgroundColor</span><span class="p">:</span> <span class="s2">&quot;rgba(179,181,198,1)&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">8</span><span class="o">.</span><span class="mi">77</span><span class="p">,</span><span class="mi">55</span><span class="o">.</span><span class="mi">61</span><span class="p">,</span><span class="mi">21</span><span class="o">.</span><span class="mi">69</span><span class="p">,</span><span class="mi">6</span><span class="o">.</span><span class="mi">62</span><span class="p">,</span><span class="mi">6</span><span class="o">.</span><span class="mi">82</span><span class="o">]</span>
</span><span class='line'>    <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;2050&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">fill</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">backgroundColor</span><span class="p">:</span> <span class="s2">&quot;rgba(255,99,132,0.2)&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">borderColor</span><span class="p">:</span> <span class="s2">&quot;rgba(255,99,132,1)&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">pointBorderColor</span><span class="p">:</span> <span class="s2">&quot;#fff&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">pointBackgroundColor</span><span class="p">:</span> <span class="s2">&quot;rgba(255,99,132,1)&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">pointBorderColor</span><span class="p">:</span> <span class="s2">&quot;#fff&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">25</span><span class="o">.</span><span class="mi">48</span><span class="p">,</span><span class="mi">54</span><span class="o">.</span><span class="mi">16</span><span class="p">,</span><span class="mi">7</span><span class="o">.</span><span class="mi">61</span><span class="p">,</span><span class="mi">8</span><span class="o">.</span><span class="mo">06</span><span class="p">,</span><span class="mi">4</span><span class="o">.</span><span class="mi">45</span><span class="o">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  constructor(props) {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">super</span><span class="p">(</span><span class="n">props</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  render() {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="p">(</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="no">Radar</span> <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="n">this</span><span class="o">.</span><span class="n">state</span><span class="o">.</span><span class="n">radarChartData</span><span class="p">}</span>
</span><span class='line'>           <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'>           <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'>           <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;/</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Polar area chart</strong>
</p>




<p>
  <img src="http://geekhmer.github.io/images/polar-area-chart.png" width="700" alt="Polar area chart" />
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">import</span> <span class="p">{</span> <span class="no">PolarArea</span> <span class="p">}</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">react</span><span class="o">-</span><span class="n">chartjsx</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;export default class App extends Component {</span>
</span><span class='line'><span class="sr">  state = {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">polarAreaChartData</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">labels</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;Africa&quot;</span><span class="p">,</span> <span class="s2">&quot;Asia&quot;</span><span class="p">,</span> <span class="s2">&quot;Europe&quot;</span><span class="p">,</span> <span class="s2">&quot;Latin America&quot;</span><span class="p">,</span> <span class="s2">&quot;North America&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">datasets</span><span class="p">:</span> <span class="o">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Population (millions)&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">backgroundColor</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;#3e95cd&quot;</span><span class="p">,</span> <span class="s2">&quot;#8e5ea2&quot;</span><span class="p">,</span><span class="s2">&quot;#3cba9f&quot;</span><span class="p">,</span><span class="s2">&quot;#e8c3b9&quot;</span><span class="p">,</span><span class="s2">&quot;#c45850&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">2478</span><span class="p">,</span><span class="mi">5267</span><span class="p">,</span><span class="mi">734</span><span class="p">,</span><span class="mi">784</span><span class="p">,</span><span class="mi">433</span><span class="o">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  constructor(props) {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">super</span><span class="p">(</span><span class="n">props</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  render() {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="p">(</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="no">PolarArea</span> <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="n">this</span><span class="o">.</span><span class="n">state</span><span class="o">.</span><span class="n">polarAreaChartData</span><span class="p">}</span>
</span><span class='line'>               <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'>               <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'>               <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;/</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Doughnut chart</strong>
</p>




<p>
  <img src="http://geekhmer.github.io/images/doughnut-chart.png" width="700" alt="Doughnut chart" />
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">import</span> <span class="p">{</span> <span class="no">Doughnut</span> <span class="p">}</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">react</span><span class="o">-</span><span class="n">chartjsx</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;export default class App extends Component {</span>
</span><span class='line'><span class="sr">  state = {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">doughnutChartData</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">labels</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;Africa&quot;</span><span class="p">,</span> <span class="s2">&quot;Asia&quot;</span><span class="p">,</span> <span class="s2">&quot;Europe&quot;</span><span class="p">,</span> <span class="s2">&quot;Latin America&quot;</span><span class="p">,</span> <span class="s2">&quot;North America&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">datasets</span><span class="p">:</span> <span class="o">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Population (millions)&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">backgroundColor</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;#3e95cd&quot;</span><span class="p">,</span> <span class="s2">&quot;#8e5ea2&quot;</span><span class="p">,</span><span class="s2">&quot;#3cba9f&quot;</span><span class="p">,</span><span class="s2">&quot;#e8c3b9&quot;</span><span class="p">,</span><span class="s2">&quot;#c45850&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">2478</span><span class="p">,</span><span class="mi">5267</span><span class="p">,</span><span class="mi">734</span><span class="p">,</span><span class="mi">784</span><span class="p">,</span><span class="mi">433</span><span class="o">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  constructor(props) {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">super</span><span class="p">(</span><span class="n">props</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  render() {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="p">(</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="no">Doughnut</span> <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="n">this</span><span class="o">.</span><span class="n">state</span><span class="o">.</span><span class="n">doughnutChartData</span><span class="p">}</span>
</span><span class='line'>              <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'>              <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'>              <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;/</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Horizontal bars chart</strong>
</p>




<p>
  <img src="http://geekhmer.github.io/images/horizontal-bar-chart.png" width="700" alt="Horizontal bars chart" />
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">import</span> <span class="p">{</span> <span class="no">HorizontalBar</span> <span class="p">}</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">react</span><span class="o">-</span><span class="n">chartjsx</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;export default class App extends Component {</span>
</span><span class='line'><span class="sr">  state = {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">horizontalBarsChartData</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">labels</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;Africa&quot;</span><span class="p">,</span> <span class="s2">&quot;Asia&quot;</span><span class="p">,</span> <span class="s2">&quot;Europe&quot;</span><span class="p">,</span> <span class="s2">&quot;Latin America&quot;</span><span class="p">,</span> <span class="s2">&quot;North America&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">datasets</span><span class="p">:</span> <span class="o">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Population (millions)&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">backgroundColor</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;#3e95cd&quot;</span><span class="p">,</span> <span class="s2">&quot;#8e5ea2&quot;</span><span class="p">,</span><span class="s2">&quot;#3cba9f&quot;</span><span class="p">,</span><span class="s2">&quot;#e8c3b9&quot;</span><span class="p">,</span><span class="s2">&quot;#c45850&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">2478</span><span class="p">,</span><span class="mi">5267</span><span class="p">,</span><span class="mi">734</span><span class="p">,</span><span class="mi">784</span><span class="p">,</span><span class="mi">433</span><span class="o">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  constructor(props) {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">super</span><span class="p">(</span><span class="n">props</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  render() {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="p">(</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="no">HorizontalBar</span> <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="n">this</span><span class="o">.</span><span class="n">state</span><span class="o">.</span><span class="n">horizontalBarsChartData</span><span class="p">}</span>
</span><span class='line'>                   <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'>                   <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'>                   <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;/</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Grouped bars chart</strong>
</p>




<p>
  <img src="http://geekhmer.github.io/images/grouped-bar-chart.png" width="700" alt="Grouped bars chart" />
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">import</span> <span class="p">{</span> <span class="no">Bar</span> <span class="p">}</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">react</span><span class="o">-</span><span class="n">chartjsx</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;export default class App extends Component {</span>
</span><span class='line'><span class="sr">  state = {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">groupedBarsChartData</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">labels</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;1900&quot;</span><span class="p">,</span> <span class="s2">&quot;1950&quot;</span><span class="p">,</span> <span class="s2">&quot;1999&quot;</span><span class="p">,</span> <span class="s2">&quot;2050&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">datasets</span><span class="p">:</span> <span class="o">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Africa&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">backgroundColor</span><span class="p">:</span> <span class="s2">&quot;#3e95cd&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">133</span><span class="p">,</span><span class="mi">221</span><span class="p">,</span><span class="mi">783</span><span class="p">,</span><span class="mi">2478</span><span class="o">]</span>
</span><span class='line'>    <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Europe&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">backgroundColor</span><span class="p">:</span> <span class="s2">&quot;#8e5ea2&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">408</span><span class="p">,</span><span class="mi">547</span><span class="p">,</span><span class="mi">675</span><span class="p">,</span><span class="mi">734</span><span class="o">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  constructor(props) {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">super</span><span class="p">(</span><span class="n">props</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  render() {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="p">(</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="no">Bar</span> <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="n">this</span><span class="o">.</span><span class="n">state</span><span class="o">.</span><span class="n">groupedBarsChartData</span><span class="p">}</span>
</span><span class='line'>         <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'>         <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'>         <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;/</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Mixed charts</strong>
</p>




<p>
  <img src="http://geekhmer.github.io/images/mixed-chart.png" width="700" alt="Mixed charts" />
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">import</span> <span class="p">{</span> <span class="no">Bar</span> <span class="p">}</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">react</span><span class="o">-</span><span class="n">chartjsx</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;export default class App extends Component {</span>
</span><span class='line'><span class="sr">  state = {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">mixedChartsData</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">labels</span><span class="p">:</span> <span class="o">[</span><span class="s2">&quot;1900&quot;</span><span class="p">,</span> <span class="s2">&quot;1950&quot;</span><span class="p">,</span> <span class="s2">&quot;1999&quot;</span><span class="p">,</span> <span class="s2">&quot;2050&quot;</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">datasets</span><span class="p">:</span> <span class="o">[</span><span class="p">{</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Europe&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">type</span><span class="p">:</span> <span class="s2">&quot;line&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">borderColor</span><span class="p">:</span> <span class="s2">&quot;#8e5ea2&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">408</span><span class="p">,</span><span class="mi">547</span><span class="p">,</span><span class="mi">675</span><span class="p">,</span><span class="mi">734</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">fill</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Africa&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">type</span><span class="p">:</span> <span class="s2">&quot;line&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">borderColor</span><span class="p">:</span> <span class="s2">&quot;#3e95cd&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">133</span><span class="p">,</span><span class="mi">221</span><span class="p">,</span><span class="mi">783</span><span class="p">,</span><span class="mi">2478</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">fill</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'>    <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Europe&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">type</span><span class="p">:</span> <span class="s2">&quot;bar&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">backgroundColor</span><span class="p">:</span> <span class="s2">&quot;rgba(0,0,0,0.2)&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">408</span><span class="p">,</span><span class="mi">547</span><span class="p">,</span><span class="mi">675</span><span class="p">,</span><span class="mi">734</span><span class="o">]</span><span class="p">,</span>
</span><span class='line'>    <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s2">&quot;Africa&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">type</span><span class="p">:</span> <span class="s2">&quot;bar&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">backgroundColor</span><span class="p">:</span> <span class="s2">&quot;rgba(0,0,0,0.2)&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">backgroundColorHover</span><span class="p">:</span> <span class="s2">&quot;#3e95cd&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span><span class="mi">133</span><span class="p">,</span><span class="mi">221</span><span class="p">,</span><span class="mi">783</span><span class="p">,</span><span class="mi">2478</span><span class="o">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  constructor(props) {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">super</span><span class="p">(</span><span class="n">props</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  render() {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="p">(</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="no">Bar</span> <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="n">this</span><span class="o">.</span><span class="n">state</span><span class="o">.</span><span class="n">mixedChartsData</span><span class="p">}</span>
</span><span class='line'>         <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'>         <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'>         <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;/</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Bubble chart</strong>
</p>




<p>
  <img src="http://geekhmer.github.io/images/scatter-chart.png" width="700" alt="Bubble chart" />
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">import</span> <span class="p">{</span> <span class="no">Scatter</span> <span class="p">}</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">react</span><span class="o">-</span><span class="n">chartjsx</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;export default class App extends Component {</span>
</span><span class='line'><span class="sr">  state = {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="ss">scatterChartData</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">datasets</span><span class="p">:</span> <span class="o">[</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s1">&#39;Latin America&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">borderColor</span><span class="p">:</span> <span class="s2">&quot;#3e95cd&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>          <span class="ss">x</span><span class="p">:</span> <span class="o">-</span><span class="mi">10</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">y</span><span class="p">:</span> <span class="mi">0</span>
</span><span class='line'>        <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>          <span class="ss">x</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">y</span><span class="p">:</span> <span class="mi">10</span>
</span><span class='line'>        <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>          <span class="ss">x</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">y</span><span class="p">:</span> <span class="mi">5</span>
</span><span class='line'>        <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>          <span class="ss">x</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">y</span><span class="p">:</span> <span class="mi">6</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="o">]</span>
</span><span class='line'>    <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>      <span class="ss">label</span><span class="p">:</span> <span class="s1">&#39;Asia&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">borderColor</span><span class="p">:</span> <span class="s2">&quot;#8e5ea2&quot;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">data</span><span class="p">:</span> <span class="o">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>          <span class="ss">x</span><span class="p">:</span> <span class="o">-</span><span class="mi">11</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">y</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>        <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>          <span class="ss">x</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">y</span><span class="p">:</span> <span class="mi">11</span>
</span><span class='line'>        <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>          <span class="ss">x</span><span class="p">:</span> <span class="mi">11</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">y</span><span class="p">:</span> <span class="mi">6</span>
</span><span class='line'>        <span class="p">},</span> <span class="p">{</span>
</span><span class='line'>          <span class="ss">x</span><span class="p">:</span> <span class="mi">21</span><span class="p">,</span>
</span><span class='line'>          <span class="ss">y</span><span class="p">:</span> <span class="mi">7</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="o">]</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="o">]</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  constructor(props) {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">super</span><span class="p">(</span><span class="n">props</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  render() {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">const</span> <span class="n">chartOptions</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">responsive</span><span class="p">:</span> <span class="kp">false</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="p">(</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="no">Scatter</span> <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="n">this</span><span class="o">.</span><span class="n">state</span><span class="o">.</span><span class="n">scatterChartData</span><span class="p">}</span>
</span><span class='line'>             <span class="n">options</span><span class="o">=</span><span class="p">{</span><span class="n">chartOptions</span><span class="p">}</span>
</span><span class='line'>             <span class="n">width</span><span class="o">=</span><span class="p">{</span><span class="mi">800</span><span class="p">}</span>
</span><span class='line'>             <span class="n">height</span><span class="o">=</span><span class="p">{</span><span class="mi">400</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;/</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Well, You can read all details on the project's <a href="https://github.com/codefacebook/react-chartjsx" target="_blank">GitHub repo</a>.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Progressive &amp; Lazy Loading Image with lazy-load-images.js]]></title>
    <link href="http://geekhmer.github.io/blog/2018/04/15/progressive-and-lazy-loading-image-with-lazy-load-images-dot-js/"/>
    <updated>2018-04-15T18:08:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2018/04/15/progressive-and-lazy-loading-image-with-lazy-load-images-dot-js</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/lazy-load-images.png" width="700" alt="Lazy load images" />
</p>




<p>
  With images making up a whopping 65% of all web content, page load time on websites can easily become an issue.
</p>




<p>
  Images can weight quite a bit. This can have a negative impact on the time visitors have to wait before they can access content on your website. they will get navigate somewhere else, unless you come up with a solution to image loading.
</p>




<p>
  <strong>What is lazy loading?</strong><br/>
  Lazy loading images means loading images on websites asynchronously that is, after the content is fully loaded, or even conditionally, only when they appear in the browser’s viewport. This means that if users don’t scroll all the way down, images placed at the bottom of the page won't be loaded.
</p>




<p>
  <strong>What reason you should care of lazy loading images?</strong><br/>
  There are many reasons you should consider of lazy loading images for your website:
</p>




<p>
  If your website uses JavaScript to display content or provide some functionality to users, loading the DOM quickly becomes critical. It’s common for scripts to wait until the DOM has completely loaded before they start running. On a site with a number of images, lazy loading or loading images asynchronously could make the difference between users staying or leaving your website.
</p>




<p>
  Since most lazy loading solutions work by loading images only if the user has scrolled to the location where images would be visible inside the viewport, those images will never be loaded if users never get to that point. This means considerable savings in bandwidth, for which most users, especially those accessing the web on mobile devices and slow-connections.
</p>




<p>
  Lazy loading images helps with website performance, but what’s the best way to go about it?
</p>




<p>
  Well, <a href="https://github.com/codefacebook/lazy-load-images.js" target="_blank">lazy-load-images.js</a> is a javascript library which could help you with the website performance.
</p>




<p>
  <strong>lazy-load-images.js is loading with blurred image effect</strong><br/>
  If you are a Medium reader, you have certainly noticed how the site loads the main image inside a post.
</p>




<p>
  The first thing you see is a blurred, low-resolution copy of the image, while its high-resversion is being lazy loaded:
</p>




<p>
  Blurred placeholder image on <a href="https://lazyloadimages.github.io/" target="_blank">lazy-load-images.js</a> website:
</p>




<p>
  <img src="http://geekhmer.github.io/images/lazy-load-images-tiny.png" width="700" alt="Lazy load images" />
</p>




<p>
  High-res, lazy loaded image on <a href="https://lazyloadimages.github.io/" target="_blank">lazy-load-images.js</a> website:
</p>




<p>
  <img src="http://geekhmer.github.io/images/lazy-load-images-full.png" width="700" alt="Lazy load images" />
</p>




<p>
  You can lazy load images with this interesting blurring effect in a number of ways.
</p>




<p>
  My favorite technique/library is using <a href="https://github.com/codefacebook/lazy-load-images.js" target="_blank">lazy-load-images.js</a>. Here’s all the features/goodness:<br/>
  - Fast loading<br/>
  - High performance<br/>
  - Supports all images type<br/>
  - Responsive images<br/>
  - Supports all modern browsers Chrome, Firefox, Safari, (IE10+), ... etc.
</p>




<p>
  You can read all details and download the lazy-load-images.js library on the project's <a href="https://github.com/codefacebook/lazy-load-images.js" target="_blank">GitHub repo</a>.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Way to Develop React App with Create React App (No Build Configuration)]]></title>
    <link href="http://geekhmer.github.io/blog/2017/05/22/new-way-to-develop-react-app-with-create-react-app-no-build-configuration/"/>
    <updated>2017-05-22T00:10:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2017/05/22/new-way-to-develop-react-app-with-create-react-app-no-build-configuration</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/create_react_app.png" width="600" alt="New Way to Develop React App with Create React App (No Build Configuration)" />
</p>




<p>
  Setting up Gulp, Webpack, Browserify, Babel, JSX, ES6, ES6 modules, hot reloading, ... etc. manually - forget about it and no more fuss with it. 
</p>




<p>
  Inspired by the cohesive developer experience provided by Ember.js Facebook wanted to provide an easy way to develop React apps, they created <a href="https://github.com/facebookincubator/create-react-app" target="_blank">create-react-app</a> with the targets zero configuration.
</p>




<p>
  <strong>Installation</strong><br/>
  You may need <a href="https://nodejs.org/en/download/" target="_blank">NPM</a> installed and you can use <a href="https://github.com/creationix/nvm#usage" target="_blank">NVM</a> to easily switch Node versions between different projects.
</p>




<p>
  The Node installation is only required for Create React App itself.
</p>




<p>
  To install create-react-app module, run:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="n">install</span> <span class="o">-</span><span class="n">g</span> <span class="n">create</span><span class="o">-</span><span class="n">react</span><span class="o">-</span><span class="n">app</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Creating an App</strong><br/>
  To create a new app, run:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">create</span><span class="o">-</span><span class="n">react</span><span class="o">-</span><span class="n">app</span> <span class="n">geekhmer</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  It will create a directory called geekhmer inside the current folder. And inside that directory, it will generate the initial project structure and install the transitive dependencies:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">geekhmer</span><span class="o">/</span>
</span><span class='line'>  <span class="no">README</span><span class="o">.</span><span class="n">md</span>
</span><span class='line'>  <span class="n">node_modules</span><span class="o">/</span>
</span><span class='line'>  <span class="n">package</span><span class="o">.</span><span class="n">json</span>
</span><span class='line'>  <span class="o">.</span><span class="n">gitignore</span>
</span><span class='line'>  <span class="kp">public</span><span class="o">/&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;favicon.ico</span>
</span><span class='line'><span class="sr">index.html</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  src/</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;App.css</span>
</span><span class='line'><span class="sr">App.js</span>
</span><span class='line'><span class="sr">App.test.js</span>
</span><span class='line'><span class="sr">index.css</span>
</span><span class='line'><span class="sr">index.js</span>
</span><span class='line'><span class="sr">logo.svg</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  No configuration or complicated folder structures, just the files you need to build your app.
</p>




<p>
  <strong>Run the App</strong><br/>
  Runs the app in development mode:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="n">start</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Open http://localhost:3000 to view it in the browser.
</p>




<p>
  <strong>Run the Test</strong><br/>
  Runs the test watcher in an interactive mode:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="nb">test</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <a href="https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#running-tests" target="_blank">Read more about testing.</a>
</p>




<p>
  <strong>Builds the App for Production</strong><br/>
  Builds the app for production to the build folder. It correctly bundles React in production mode and optimizes the build for the best performance.
</p>




<p>
  The build is minified and the filenames include the hashes. By default, it also <a href="https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#making-a-progressive-web-app" target="_blank">includes a service worker</a> so that your app loads from local cache on future visits.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="n">run</span> <span class="n">build</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Your app is ready to be deployed. So far so good, That's it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Copy to Clipboard without Flash with Clipboard.js]]></title>
    <link href="http://geekhmer.github.io/blog/2017/03/19/copy-to-clipboard-without-flash-with-clipboard-dot-js/"/>
    <updated>2017-03-19T23:34:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2017/03/19/copy-to-clipboard-without-flash-with-clipboard-dot-js</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/clipboardjs.png" width="400" alt="Copy to Clipboard without Flash with Clipboard.js" />
</p>




<p>
  Well, in this article I gonna show you how to easily implement the ability to copy data to the <a href="https://clipboardjs.com/" target="_blank">clipboard</a>. In order to implement it I will clipboard.js javascript library, let get started with me:
</p>




<h3>Installation</h3>




<p>
  The first thing I need to do is include the clipboard.js library file in head tag of the application: 
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;script src=&quot;https:/</span><span class="o">/</span><span class="n">cdn</span><span class="o">.</span><span class="n">jsdelivr</span><span class="o">.</span><span class="n">net</span><span class="o">/</span><span class="n">clipboard</span><span class="o">.</span><span class="n">js</span><span class="o">/</span><span class="mi">1</span><span class="o">.</span><span class="mi">5</span><span class="o">.</span><span class="mi">12</span><span class="o">/</span><span class="n">clipboard</span><span class="o">.</span><span class="n">min</span><span class="o">.</span><span class="n">js</span><span class="s2">&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  If you don't wish to use a CDN, you can download the clipboard in other ways:<br/>
  - Using npm, by running <code>npm install clipboard --save</code><br/>
  - Using bower, by running <code>bower install clipboard --save</code><br/>
  - By downloading a zip file from the <a href="https://github.com/zenorocha/clipboard.js/archive/master.zip" target="_blank">clipboard.js github page</a> and referencing it in your HTML.
</p>




<h3>Usage</h3>




<p>
  <strong>Copy text from another element:</strong> A pretty common use case is to copy content from another element. You can do that by adding a <code>data-clipboard-target</code> attribute in your trigger element. The value you include on this attribute needs to match another's element selector.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;!-- Target --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&lt;input id=&quot;foo&quot; value=&quot;https:/</span><span class="o">/</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">zenorocha</span><span class="o">/</span><span class="n">clipboard</span><span class="o">.</span><span class="n">js</span><span class="o">.</span><span class="n">git</span><span class="s2">&quot;&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;!-- Trigger --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;&lt;button class=&quot;</span><span class="n">btn</span><span class="s2">&quot; data-clipboard-target=&quot;</span><span class="c1">#foo&quot;&gt;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">img</span> <span class="n">src</span><span class="o">=</span><span class="s2">&quot;assets/clippy.svg&quot;</span> <span class="n">alt</span><span class="o">=</span><span class="s2">&quot;Copy to clipboard&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&lt;</span><span class="sr">/button&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Cut text from another element:</strong> Additionally, you can define a <code>data-clipboard-action</code> attribute to specify if you want to either <code>copy</code> or <code>cut</code> content. If you omit this attribute, <code>copy</code> will be used by default.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;!-- Target --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&lt;textarea id=&quot;bar&quot;&gt;Mussum ipsum cacilds&amp;hellip;&lt;/</span><span class="n">textarea</span><span class="o">&gt;&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;!-- Trigger --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&lt;button class=&quot;btn&quot; data-clipboard-action=&quot;cut&quot; data-clipboard-target=&quot;#bar&quot;&gt;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="no">Cut</span> <span class="n">to</span> <span class="n">clipboard</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&lt;</span><span class="sr">/button&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  As you may expect, the cut action only works on input or textarea elements.
</p>




<p>
  <strong>Copy text from attribute:</strong> Truth is, you don't even need another element to copy its content from. You can just include a <code>data-clipboard-text</code> attribute in your trigger element.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;!-- Trigger --&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;&lt;button class=&quot;btn&quot; data-clipboard-text=&quot;Just because you can doesn&#39;t mean you should — clipboard.js&quot;&gt;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="no">Copy</span> <span class="n">to</span> <span class="n">clipboard</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&lt;</span><span class="sr">/button&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>Events</h3>




<p>
  There are cases where you'd like to show some user feedback or capture what has been selected after a copy/cut operation.
</p>


<p></p>

<p>
  That's why we fire custom events such as success and error for you to listen and implement your custom logic.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">var</span> <span class="n">clipboard</span> <span class="o">=</span> <span class="kp">new</span> <span class="no">Clipboard</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">.</span><span class="n">btn</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;);</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;clipboard.on(&amp;lsquo;success&amp;rsquo;, function(e) {</span>
</span><span class='line'><span class="sr">  console.info(&amp;lsquo;Action:&amp;rsquo;, e.action);</span>
</span><span class='line'><span class="sr">  console.info(&amp;lsquo;Text:&amp;rsquo;, e.text);</span>
</span><span class='line'><span class="sr">  console.info(&amp;lsquo;Trigger:&amp;rsquo;, e.trigger);&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="n">e</span><span class="o">.</span><span class="n">clearSelection</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;clipboard.on(&amp;lsquo;error&amp;rsquo;, function(e) {</span>
</span><span class='line'><span class="sr">  console.error(&amp;lsquo;Action:&amp;rsquo;, e.action);</span>
</span><span class='line'><span class="sr">  console.error(&amp;lsquo;Trigger:&amp;rsquo;, e.trigger);</span>
</span><span class='line'><span class="sr">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  So far so good, That's it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Should I Use ReactJS?]]></title>
    <link href="http://geekhmer.github.io/blog/2016/01/09/should-i-use-reactjs/"/>
    <updated>2016-01-09T10:32:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2016/01/09/should-i-use-reactjs</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/react_flux.jpg" width="600" alt="Should I Use ReactJS?" />
</p>




<p>
  <strong>Short answer is Yes.</strong>
</p>




<p>
  <strong>Long answer is unfortunately, Yes, for most things.</strong>
</p>




<p>
  <strong>Here's why you should use ReactJS:</strong><br/>
  - Works great for teams, strongly enforcing UI and workflow patterns.<br/>
  - UI code is readable and maintainable.<br/>
  - Componentized UI is the future of web development, and you need to start doing it now.
</p>




<p>
  <strong>Here's why you should think twice before you switch:</strong><br/>
  - ReactJS will slow you down tremendously at the start. Understanding how props, state, and component communication works is not straightforward, and the docs are a maze of information. This will be countered, in theory, by a grand speed up when your whole team is on board.<br/>
  - ReactJS does not support any browser below IE8, and never will.<br/>
  - If your application / website doesn't have very much dynamic page updating, you will be implementing a lot of code for a very small benefit.<br/>
  - You will reinvent a lot of wheels. ReactJS is young, and because there's no canonical way to do events / component communication, you'll have to build large component libraries from scratch. Does your application have dropdowns, resizable windows, or lightboxes? You'll probably have to write those all from scratch.
</p>




<p>
  So far go good, That's it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
</feed>
