<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Laravel | GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/blog/categories/laravel/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2017-07-02T20:15:54+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Laravel 5.x.x Create Custom Helper]]></title>
    <link href="http://geekhmer.github.io/blog/2017/07/02/laravel-5-dot-x-x-create-custom-helper/"/>
    <updated>2017-07-02T20:08:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2017/07/02/laravel-5-dot-x-x-create-custom-helper</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/laravel_5.jpg" width="600" alt="Laravel 5.x.x Create Custom Helper" />
</p>




<p>
  In this article I will show you how to create your own custom helpers in Laravel framework.
</p>




<p>
  <strong>Create Project</strong><br/>
  Run the following composer command to create a new Laravel project:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">composer</span> <span class="nx">create</span><span class="o">-</span><span class="nx">project</span> <span class="nx">laravel</span><span class="o">/</span><span class="nx">laravel</span> <span class="nx">laravel_helper</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Customer Helpers’ Dir</strong><br/>
  Customer helpers files will be located in the <code>app</code> dir.
</p>




<p>
  Create a new directory Helpers in <code>app/Helpers</code>
</p>




<p>
  <strong>Define Helper Class</strong><br/>
  Let’s create a simple helper function that will return the user's full name format.
</p>




<p>
  Create a new file <code>UserHelper.php</code> in <code>app/Helpers</code> and add the following codes:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>UserHelper.php </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="o">?</span><span class="nx">php</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="k">namespace</span> <span class="nx">App\Helpers</span><span class="p">;</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">UserHelper</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">full_name</span><span class="p">(</span><span class="nv">$first_name</span><span class="p">,</span> <span class="nv">$last_name</span><span class="p">)</span> <span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="k">return</span> <span class="nv">$first_name</span> <span class="o">.</span> <span class="s1">&#39;, &#39;</span><span class="o">.</span> <span class="nv">$last_name</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  - <code>namespace App\Helpers;</code>: defines the Helpers namespace.<br/>
  - <code>public static function full_name($first_name, $last_name) {...}</code>: defines a static function which return the user's full name.
</p>




<p>
  <strong>Helpers Service Provider Class</strong><br/>
  Service providers are used to auto load classes in Laravel framework. 
</p>




<p>
  We will need to define a service provider that will load all of our helpers classes in <code>app/Helpers</code> directory.
</p>




<p>
  Run the following artisan command to create <code>HelperServiceProvider.php</code> in <code>app/Providers</code> directory:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">php</span> <span class="nx">artisan</span> <span class="nx">make</span><span class="o">:</span><span class="nx">provider</span> <span class="nx">HelperServiceProvider</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  And then add the following code below in <code>HelperServiceProvider.php</code> file:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>HelperServiceProvider.php </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="o">?</span><span class="nx">php</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="k">namespace</span> <span class="nx">App\Providers</span><span class="p">;</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="k">use</span> <span class="nx">Illuminate\Support\ServiceProvider</span><span class="p">;</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">HelperServiceProvider</span> <span class="k">extends</span> <span class="nx">ServiceProvider</span> <span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="o">/&lt;</span><span class="nx">em</span><span class="o">&gt;*</span>
</span><span class='line'>   <span class="o">*</span> <span class="nx">Bootstrap</span> <span class="nx">the</span> <span class="nx">application</span> <span class="nx">services</span><span class="o">.</span>
</span><span class='line'>   <span class="o">*</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="k">return</span> <span class="nx">void</span>
</span><span class='line'>   <span class="o">&lt;/</span><span class="nx">em</span><span class="o">&gt;/</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">boot</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;//</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="o">/&lt;</span><span class="nx">em</span><span class="o">&gt;*</span>
</span><span class='line'>   <span class="o">*</span> <span class="nx">Register</span> <span class="nx">the</span> <span class="nx">application</span> <span class="nx">services</span><span class="o">.</span>
</span><span class='line'>   <span class="o">*</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="k">return</span> <span class="nx">void</span>
</span><span class='line'>   <span class="o">&lt;/</span><span class="nx">em</span><span class="o">&gt;/</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">register</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="k">foreach</span> <span class="p">(</span><span class="nb">glob</span><span class="p">(</span><span class="nx">app_path</span><span class="p">()</span><span class="o">.</span><span class="s1">&#39;/Helpers/*.php&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="nv">$filename</span><span class="p">){</span>
</span><span class='line'>  <span class="k">require_once</span><span class="p">(</span><span class="nv">$filename</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  - <code>namespace App\Providers;</code>: defines the namespace provider.<br/>
  - <code>use Illuminate\Support\ServiceProvider;</code>: imports the ServiceProvider class namespace.<br/>
  - <code>class HelperServiceProvider extends ServiceProvider {...}</code>: defines a HelperServiceProvider class that extends/inherite the ServiceProvider class.
  - <code>public function register() {...}</code> is the function that is used to loads the helpers.<br/>
  - <code>foreach (glob(app_path().'/Helpers/*.php') as $filename) {...}</code>: loops through all the files in <code>app/Helpers</code> directory and loads them.
</p>




<p>
  <strong>Configure Helper Service Provider and Class Alias</strong><br/>
  We need to register the HelperServiceProvider and create an alias for the helpers.
</p>




<p>
  Open up <code>config/app.php</code> file and add the following line in providers array variable.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app.php </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">App\Providers\HelperServiceProvider</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
 And then add the following line in aliases array variable.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>app.php </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">UserHelper</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span> <span class="o">=&gt;</span> <span class="nx">App\Helpers\UserHelper</span><span class="o">::</span><span class="na">class</span><span class="p">,</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Using the Custom Helper</strong><br/>
  Let create a route that will the custom helper function. Open up <code>routes/web.php</code> and add the following codes:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>web.php </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="o">/</span><span class="nx">users</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="k">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">UserHelper</span><span class="o">::</span><span class="na">full_name</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">Bunlong</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">ldquo</span><span class="p">;</span><span class="nx">Van</span><span class="o">&amp;</span><span class="nx">rdquo</span><span class="p">;);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  - <code>return UserHelper::full_name("Bunlong", "Van");</code> calls the static function full_name in UserHelper class.
</p>




<p>
  Open up your browser and type the uri <code>http://localhost:8000/users</code> you will see "Bunlong, Van" text.
</p>




<p>
  So far so good, That's it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Laravel 5.x.x]]></title>
    <link href="http://geekhmer.github.io/blog/2017/06/30/hello-laravel-5-dot-x-x/"/>
    <updated>2017-06-30T21:01:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2017/06/30/hello-laravel-5-dot-x-x</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/laravel_5.jpg" width="600" alt="Hello Laravel 5.x.x" />
</p>




<p>
  In the previous article, We installed and configured a Laravel application. And in this article We will build on the same project to create a simple Hello Laravel application and look at the key components of Laravel framework.
</p>




<p>
  <strong>Artisan Command Line</strong><br/>
  Artisan is the command line that automates common tasks in Laravel framework. The artisan command line can be used to perform the following tasks and much more:
</p>




<p>
  - Generate boilerplate code – it easily create controllers, models... etc.<br/>
  - Database migrations – migrations is used to manipulate database objects and can be used to create and drop tables etc.<br/>
  - Seeding – seeding is a term used to add dummy records to the database.<br/>
  - Routing<br/>
  - Run unit tests.
</p>




<p>
  <strong>The Way to Use the Artisan Command</strong><br/>
  Open the terminator and run the following command to view the list of available commands:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">php</span> <span class="nx">artisan</span> <span class="k">list</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Artisan Command To Generate Codes for a Controller</strong><br/>
  Open the terminator and run the following command to generate codes for Hello Laravel controller:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">php</span> <span class="nx">artisan</span> <span class="nx">make</span><span class="o">:</span><span class="nx">controller</span> <span class="nx">HelloLaravelController</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  - <code>php artisan</code> is used to run the artisan command line.<br/>
  - <code>make:controller HelloLaravelController</code> specifies the command that the should run. This command will create codes for a controller HelloLaravelController in /app/Http/Controllers/HelloLaravelController.php.
</p>




<p>
  And then open up the file <code>HelloLaravelController.php</code> in folder <code>/app/Http/Controllers</code>.
</p>




<p>
  And you will get the following code:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>HelloLaravelController.php </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span><span class="o">?</span><span class="nx">php</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="k">namespace</span> <span class="nx">App\Http\Controllers</span><span class="p">;</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="k">use</span> <span class="nx">Illuminate\Http\Request</span><span class="p">;</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="k">use</span> <span class="nx">App\Http\Requests</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">App\Http\Controllers\Controller</span><span class="p">;</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">HelloLaravelController</span> <span class="k">extends</span> <span class="nx">Controller</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="o">/&lt;</span><span class="nx">em</span><span class="o">&gt;*</span>
</span><span class='line'>   <span class="o">*</span> <span class="nx">Display</span> <span class="nx">a</span> <span class="nx">listing</span> <span class="nx">of</span> <span class="nx">the</span> <span class="nx">resource</span><span class="o">.</span>
</span><span class='line'>   <span class="o">*</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="k">return</span> <span class="nx">Response</span>
</span><span class='line'>   <span class="o">&lt;/</span><span class="nx">em</span><span class="o">&gt;/</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">index</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;//</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="o">/&lt;</span><span class="nx">em</span><span class="o">&gt;*</span>
</span><span class='line'>   <span class="o">*</span> <span class="nx">Show</span> <span class="nx">the</span> <span class="nx">form</span> <span class="k">for</span> <span class="nx">creating</span> <span class="nx">a</span> <span class="k">new</span> <span class="nx">resource</span><span class="o">.</span>
</span><span class='line'>   <span class="o">*</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="k">return</span> <span class="nx">Response</span>
</span><span class='line'>   <span class="o">&lt;/</span><span class="nx">em</span><span class="o">&gt;/</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">create</span><span class="p">()</span>
</span><span class='line'>  <span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;//</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="o">/&lt;</span><span class="nx">em</span><span class="o">&gt;*</span>
</span><span class='line'>   <span class="o">*</span> <span class="nx">Store</span> <span class="nx">a</span> <span class="nx">newly</span> <span class="nx">created</span> <span class="nx">resource</span> <span class="nx">in</span> <span class="nx">storage</span><span class="o">.</span>
</span><span class='line'>   <span class="o">*</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="nx">param</span>  <span class="nx">Request</span>  <span class="nv">$request</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="k">return</span> <span class="nx">Response</span>
</span><span class='line'>   <span class="o">&lt;/</span><span class="nx">em</span><span class="o">&gt;/</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">store</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;//</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="o">/&lt;</span><span class="nx">em</span><span class="o">&gt;*</span>
</span><span class='line'>   <span class="o">*</span> <span class="nx">Display</span> <span class="nx">the</span> <span class="nx">specified</span> <span class="nx">resource</span><span class="o">.</span>
</span><span class='line'>   <span class="o">*</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="nx">param</span>  <span class="nx">int</span>  <span class="nv">$id</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="k">return</span> <span class="nx">Response</span>
</span><span class='line'>   <span class="o">&lt;/</span><span class="nx">em</span><span class="o">&gt;/</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">show</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;//</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="o">/&lt;</span><span class="nx">em</span><span class="o">&gt;*</span>
</span><span class='line'>   <span class="o">*</span> <span class="nx">Show</span> <span class="nx">the</span> <span class="nx">form</span> <span class="k">for</span> <span class="nx">editing</span> <span class="nx">the</span> <span class="nx">specified</span> <span class="nx">resource</span><span class="o">.</span>
</span><span class='line'>   <span class="o">*</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="nx">param</span>  <span class="nx">int</span>  <span class="nv">$id</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="k">return</span> <span class="nx">Response</span>
</span><span class='line'>   <span class="o">&lt;/</span><span class="nx">em</span><span class="o">&gt;/</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">edit</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;//</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="o">/&lt;</span><span class="nx">em</span><span class="o">&gt;*</span>
</span><span class='line'>   <span class="o">*</span> <span class="nx">Update</span> <span class="nx">the</span> <span class="nx">specified</span> <span class="nx">resource</span> <span class="nx">in</span> <span class="nx">storage</span><span class="o">.</span>
</span><span class='line'>   <span class="o">*</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="nx">param</span>  <span class="nx">Request</span>  <span class="nv">$request</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="nx">param</span>  <span class="nx">int</span>  <span class="nv">$id</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="k">return</span> <span class="nx">Response</span>
</span><span class='line'>   <span class="o">&lt;/</span><span class="nx">em</span><span class="o">&gt;/</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">update</span><span class="p">(</span><span class="nx">Request</span> <span class="nv">$request</span><span class="p">,</span> <span class="nv">$id</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;//</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="o">/&lt;</span><span class="nx">em</span><span class="o">&gt;*</span>
</span><span class='line'>   <span class="o">*</span> <span class="nx">Remove</span> <span class="nx">the</span> <span class="nx">specified</span> <span class="nx">resource</span> <span class="nx">from</span> <span class="nx">storage</span><span class="o">.</span>
</span><span class='line'>   <span class="o">*</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="nx">param</span>  <span class="nx">int</span>  <span class="nv">$id</span>
</span><span class='line'>   <span class="o">*</span> <span class="o">@</span><span class="k">return</span> <span class="nx">Response</span>
</span><span class='line'>   <span class="o">&lt;/</span><span class="nx">em</span><span class="o">&gt;/</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">destroy</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
</span><span class='line'>  <span class="p">{</span><span class="o">&lt;/</span><span class="nx">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;//</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nx">code</span><span class="o">&gt;&lt;/</span><span class="nx">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  - <code>namespace App\Http\Controllers;</code>: defines the namespace for the controller.<br/>
  - <code>use Illuminate\Http\Request;</code>: imports namespaces with the required classes to use in the controller.<br/>
  - <code>class HelloLaravelController extends Controller</code>: defines the HelloLaravelController class which extends/inherit the base controller.<br/>
  - <code>public function index(){}</code>: defines the default function for the controller.<br/>
  - <code>public function create(){}</code>: defines the function that is used to render the create form view.<br/>
  - <code>public function store(Request $request)</code>: defines the function that is used to store/save a newly recode into the table/database.<br/>
  - <code>public function show($id)</code>: defines the function that is used to retrieves a single recode/resource based on the id.<br/>
  - <code>public function edit($id)</code>: defines the function that is used to render the edit form based on the id.<br/>
  - <code>public function update(Request $request, $id)</code> defines a function that is used to update a record in the table/database base on the id.<br/>
  - <code>public function destroy($id)</code>: defines the function that is used to remove a recode based on the id.
</p>




<p>
  <strong>Routing</strong><br/>
  We will create a new route that will render Hello Laravel in the browser.
</p>




<p>
  Open up file <code>web.php</code> in folder <code>routes</code> and add the following codes below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>web.php </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="o">/</span><span class="nx">hello_laravel</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span><span class="k">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">Hello</span> <span class="nx">Laravel</span><span class="o">!&amp;</span><span class="nx">rsquo</span><span class="p">;;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <code>Route::get('/hello',function(){...});</code>: responds to the GET method of the URI hello. function() defines an anonymous function that does the actual work for the requested URI.<br/>
  <code>return 'Hello Laravel!';</code>: returns and render Hello Laravel! to the requested browser.
</p>




<p>
  And then go to ther browser and type the uri <code>http://localhost:8000/hello</code> you will get the output "Hellow Laravel!".
</p>




<p>
  <strong>Route To Controller</strong><br/>
  Add the following codes in <code>routes/web.php</code>.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>web.php </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">hello</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">HelloLaravelController</span><span class="o">@</span><span class="nx">index</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  And then open up <code>app/Http/Controllers/HelloLaravelController.php</code> file and add the following codes below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>HelloLaravelController.php </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">index</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">Hello</span> <span class="nx">Laravel</span><span class="o">!&amp;</span><span class="nx">rsquo</span><span class="p">;;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  And then go to ther browser and type the uri <code>http://localhost:8000/hello</code> you will get the output "Hello Laravel!".
</p>




<p>
  <strong>Loading the View from the Controller</strong><br/>
  Open up <code>app/Http/Controllers/HelloLaravelController.php</code> file and edit the following codes below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>HelloLaravelController.php </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="k">public</span> <span class="k">function</span> <span class="nf">index</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">view</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">home</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <code>return view('home');</code>: loads a view named hello.blade.php.
</p>




<p>
  And then create a new file <code>home.blade.php</code> in folder <code>/resources/views</code> and add the following codes below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>home.blade.php </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">Hello</span> <span class="nx">Laravel</span><span class="o">!</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  And then go to ther browser and type the uri <code>http://localhost:8000/hello</code> you will get the output "Hello Laravel!".
</p>


<p></p>

<p>
  So far so good, That's it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel 5.x.x Installation and Configuration]]></title>
    <link href="http://geekhmer.github.io/blog/2017/06/24/laravel-5-dot-x-x-installation-and-configuration/"/>
    <updated>2017-06-24T14:42:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2017/06/24/laravel-5-dot-x-x-installation-and-configuration</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/laravel_5.jpg" width="600" alt="Laravel 5" />
</p>




<p>
  Laravel is a great PHP framework. Currently, it is the most PHP framework which a lot of companies and people all over the world use it to build amazing applications. In this tutorial, I'll show you how easy it is to build a web application with Laravel and add authentication to it.
</p>




<p>
  Laravel is a free, open-source PHP framework designed for building web applications with an expressive and elegant syntax. Laravel saves your time and effort because it come with a lot of features. 
</p>




<p>
  Well, in this article We are going to take a look on installing, configuration Laravel and explore the Laravel directories structures. And pretty sure We will work with a Ubuntu (Linux) machine.
</p>




<p>
  <strong>Pre-requisites for Installing Laravel</strong><br/>
  Before installing Laravel, ensure that you have installed: Web Server, PHP, MySQL, Composer.
</p>




<p>
  <strong>Web Server, PHP & MySQL</strong><br/>
  For this article, We will use Laravel built-in web server. or if you prefer other kind of web server i.e. XAMPP comes with Apache, MySQL and PHP. The good news is XAMPP come cross platform. If you do not have XAMPP, you can download it from this <a href="https://www.apachefriends.org/index.html" target="_blank">link</a>.
</p>




<p>
  <strong>Composer</strong><br/>
  Composer is a dependency manager for PHP. You can read more about composer from their <a href="https://getcomposer.org/" target="_blank">official website</a>. We will not cover how to install composer in this article.
</p>




<p>
  <strong>Create a New Laravel Project Using Composer</strong><br/>
  Laravel use Composer to manage its dependencies. So, before using Laravel, ensure you have Composer installed on your machine.
</p>




<p>
  We can install Laravel by issuing the Composer <code>create-project</code> command in the terminal like so:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">composer</span> <span class="nx">create</span><span class="o">-</span><span class="nx">project</span> <span class="o">&amp;</span><span class="nx">mdash</span><span class="p">;</span><span class="nx">prefer</span><span class="o">-</span><span class="nx">dist</span> <span class="nx">laravel</span><span class="o">/</span><span class="nx">laravel</span> <span class="nx">blog</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Wait for the installation to complete then cd into the project and run the command below for running the Laravel built-in web server:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="nx">php</span> <span class="nx">artisan</span> <span class="nx">serve</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Browser to the following URL <code>http://localhost:300</code> in your web browser.
</p>




<p>
  <strong>Explore Directory Structure</strong><br/>
  Laravel follow the <code>Model-View-Controller</code> design pattern.
</p>




<p>
  <img src="http://geekhmer.github.io/images/mvc-diagram.png" width="600" alt="MVC" />
</p>




<p>
  - Models: query the database and returns the data.<br/>
  - Views: displays the model data, and sends user actions (e.g. button clicks) to the controller.<br/>
  - Controllers: handle user requests from the view, retrieve data from the Models and pass them back into the views.
</p>




<p>
  The following table briefly explains the key Laravel directories that you must know about:
</p>




<table>
  <thead>
    <tr>
      <th>Directories</th>
      <th>Descriptioin</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>app</td>
      <td>contains all of your application code.</td>
    </tr>
    <tr>
      <td>app/Console</td>
      <td>contains all of your artisan commands.</td>
    </tr>
    <tr>
      <td>app/Events</td>
      <td>contains event classes.</td>
    </tr>
    <tr>
      <td>app/Exceptions</td>
      <td>contains exception handling classes.</td>
    </tr>
    <tr>
      <td>app/Http</td>
      <td>contains controllers, filters, and requests.</td>
    </tr>
    <tr>
      <td>app/Jobs</td>
      <td>contains jobs that can be queued.</td>
    </tr>
    <tr>
      <td>app/Listeners</td>
      <td>contains handler classes for events.</td>
    </tr>
    <tr>
      <td>bootstrap</td>
      <td>contains files required by the bootstrap framework.</td>
    </tr>
    <tr>
      <td>config</td>
      <td>contains the application configuration files.</td>
    </tr>
    <tr>
      <td>database</td>
      <td>contains database migrations and seeds. It is also used to store the database for SQLite.</td>
    </tr>
    <tr>
      <td>public</td>
      <td>contains the front controllers and assets such as images, CSS, JavaScript etc.</td>
    </tr>
    <tr>
      <td>storage</td>
      <td>contains compiled blade templates, filed based sessions, etc.</td>
    </tr>
    <tr>
      <td>tests</td>
      <td>contains automated unit tests.</td>
    </tr>
    <tr>
      <td>vendor</td>
      <td>contains composer dependencies.</td>
    </tr>
  </tbody>
</table>




<p>
  <br/>
  <strong>Application Configuration</strong><br/>
  The application configuration information is located in <code>config/app.php</code>. In this section, we are going to: 
</p>




<p>
  1. Set the debugging mode – the debugging mode is used to determine how much information should be displayed when an error occurs.
</p>




<p>
  Open the file <code>config/app.php</code> and upate the following code:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">debug</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">APP_DEBUG</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="k">false</span><span class="p">),</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  To:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">debug</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">APP_DEBUG</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="k">true</span><span class="p">),</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  2. Set the time zone – this setting is used for PHP date and date-time functions. 
</p>




<p>
  Sets the time zone to UTC. This is the default value If you would like to have a different time zone, you can replace UTC with a value of your preferred time zone.
</p>




<p>
  Locate the following code:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">timezone</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span> <span class="o">=&gt;</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">UTC</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  3. Application key – this value is used for encryption purposes.
</p>




<p>
  Update following code:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nb">key</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">APP_KEY</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">SomeRandomString</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;),</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  To:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nb">key</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;</span> <span class="o">=&gt;</span> <span class="nx">env</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">APP_KEY</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">inesindinemwanawabambuyabakoiwe</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;),</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Authentication Configuration</strong><br/>
  The authentication configuration file is located in /config/auth.php. We will leave the default values as they are. If you want you can change them to meet your requirements.
</p>




<p>
  <strong>Database Configuration</strong><br/>
  The database configuration file is located in <code>config/database.php</code>. By default, MySQL will be used as the database engine. You can set it to a different database management system if you want.
</p>




<p>
  So far so good, That's it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
</feed>
