<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Other | GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/blog/categories/other/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2018-04-01T22:21:42+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Import CSS Files into Nextjs]]></title>
    <link href="http://geekhmer.github.io/blog/2018/04/01/import-css-files-into-nextjs/"/>
    <updated>2018-04-01T21:10:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2018/04/01/import-css-files-into-nextjs</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/nextjs.png" width="500" alt="Import CSS Files into Nextjs" />
</p>




<p>
  The way to import css files into Nextjs is very simple:
</p>




<p>
  1. Create a <code>/static</code> folder at the same level of <code>/pages</code> folder.<br/>
  2. In <code>/static</code> folder put your <code>.css</code> files.<br/>
  3. In your pages components import Head and add a CSS <link />.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">import</span> <span class="no">Head</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="k">next</span><span class="o">/</span><span class="n">head</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;export default () =&gt; (</span>
</span><span class='line'><span class="sr">  &lt;div&gt;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="p">;</span><span class="no">Head</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">title</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="no">My</span> <span class="n">styles</span> <span class="n">pages</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">/</span><span class="n">title</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">link</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;http://geekhmer.github.io/statics/styles.css&quot;</span> <span class="n">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">&amp;lt;/</span><span class="no">Head</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="nb">p</span> <span class="n">className</span><span class="o">=</span><span class="s2">&quot;some-class-name&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>  <span class="no">Welcome</span> <span class="n">to</span> <span class="n">my</span> <span class="n">styles</span> <span class="n">pages!</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">/</span><span class="nb">p</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'><span class="sr">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  This way Nextjs render the link tag in the head of the page and the browser will download the CSS and applied it.
</p>




<p>
  So far so good, Thatâ€™s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Import Markdown Files and Serve Its Content in Next.js]]></title>
    <link href="http://geekhmer.github.io/blog/2018/03/29/import-markdown-files-and-serve-its-content-in-next-dot-js/"/>
    <updated>2018-03-29T22:26:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2018/03/29/import-markdown-files-and-serve-its-content-in-next-dot-js</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/nextjs.png" width="600" alt="Import Markdown Files in Next.js" />
</p>




<p>
  As <a href="https://github.com/arunoda" target="_blank">@arunoda</a> (Next.js founder) said Next.js does not support importing markdown files yet. But you can configure the Next.js webpack loaders to load <code>raw-loader</code> modules and import markdown files and return them as strings.
</p>




<p>
  Let get started!
</p>




<p>
  Open the terminal, run the command below to install <code>raw-loader</code> and <code>react-markdown</code> modules (noted: use react-markdown to renders markdown as pure React components):
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">npm</span> <span class="n">install</span> <span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="n">save</span> <span class="n">raw</span><span class="o">-</span><span class="n">loader</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;npm install &amp;mdash;save react-markdown</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Create <code>next.config.js</code> file with content below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>next.config.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">module</span><span class="o">.</span><span class="n">exports</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">webpack</span><span class="p">:</span> <span class="p">(</span><span class="n">config</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;config.module.rules.push(</span>
</span><span class='line'><span class="sr">  {</span>
</span><span class='line'><span class="sr">    test: /</span><span class="p">\</span><span class="o">.</span><span class="n">md</span><span class="vg">$/</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">use</span><span class="p">:</span> <span class="s1">&#39;raw-loader&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="n">config</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">},</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Create <code>docs/about.md</code> file with content below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>about.md </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;About&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">Welcome</span> <span class="n">to</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="no">GeeKhmer</span><span class="o">&lt;</span><span class="sr">/strong&gt;!</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Create <code>pages/about.js</code> file with content below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>about.js </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">import</span> <span class="no">React</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">react</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="n">import</span> <span class="no">ReactMarkdown</span> <span class="n">from</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">react</span><span class="o">-</span><span class="n">markdown</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;export default class extends React.Component {</span>
</span><span class='line'><span class="sr">  static async getInitialProps({ req }) {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">const</span> <span class="n">content</span> <span class="o">=</span> <span class="n">await</span> <span class="nb">require</span><span class="p">(</span><span class="sb">`../docs/about.md`</span><span class="p">)</span>
</span><span class='line'><span class="k">return</span> <span class="p">{</span> <span class="n">content</span> <span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  render() {&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">return</span> <span class="p">(</span>
</span><span class='line'>  <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'>    <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="no">ReactMarkdown</span> <span class="n">source</span><span class="o">=</span><span class="p">{</span><span class="n">this</span><span class="o">.</span><span class="n">props</span><span class="o">.</span><span class="n">content</span><span class="p">}</span> <span class="sr">/&amp;gt;</span>
</span><span class='line'><span class="sr">  &amp;lt;/</span><span class="n">div</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span>
</span><span class='line'><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  So far so good, Thatâ€™s it!!! See ya!!! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Most Popular ReactJs User Interface Frameworks]]></title>
    <link href="http://geekhmer.github.io/blog/2017/11/13/the-most-popular-reactjs-user-interface-frameworks/"/>
    <updated>2017-11-13T21:37:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2017/11/13/the-most-popular-reactjs-user-interface-frameworks</id>
    <content type="html"><![CDATA[<p>
  I was researching for the rich UI frameworks based on ReactJs which give the power of composability through ReactJs components, that you can directly plug in into your ReactJs project. Let go through the list below and pickup the right one.
</p>




<p>
  <strong>Material-UI</strong><br/>
  Material-UI is a set of ReactJs components which implement Google's Material Design. <a href="http://www.material-ui.com" target="_blank">Source</a>
</p>




<p>
  <img src="http://geekhmer.github.io/images/react_material.png" width="600" alt="Material UI" />
</p>




<p>
  <strong>React-Bootstrap</strong><br/>
  Bootstrap is one of the most advanced UI frameworks out there and has got most of the things right. <a href="https://react-bootstrap.github.io" target="_blank">Source</a>
</p>




<p>
  <img src="http://geekhmer.github.io/images/react_bootstrap.png" width="600" alt="React Bootstrap" />
</p>




<p>
  <strong>React-Foundation</strong><br/>
  Foundation from Zurb is a very feature-rich and easily customizable library. <a href="https://foundation.zurb.com" target="_blank">Source</a>
</p>




<p>
  <img src="http://geekhmer.github.io/images/react_foundation.png" width="600" alt="React Foundation" />
</p>




<p>
  <strong>React-Semantic</strong><br/>
  Semantic UI React is the official React integration for Semantic UI. <a href="https://react.semantic-ui.com/introduction" target="_blank">Source</a>
</p>




<p>
  <img src="http://geekhmer.github.io/images/react_semantic.png" width="600" alt="React Semantic" />
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Most Popular ReactJs Data Table]]></title>
    <link href="http://geekhmer.github.io/blog/2017/11/07/the-most-popular-reactjs-data-table/"/>
    <updated>2017-11-07T21:12:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2017/11/07/the-most-popular-reactjs-data-table</id>
    <content type="html"><![CDATA[<p>
  I've been researching this for many days so I can help you at least find the ones out there. I don't have experience with most of these but the one I do have experience with is one I don't recommend as it seems unmaintained. Though I did find it well documented and easy to use. My requirements aren't particularly complicated for a data-grid component, I basically look at filtering, sorting and row selection. If you need anything more complicated you'll have to dig further into the documentations.
</p>




<p>
  <strong>React-Data-Grid</strong><br/>
  Excel-liked grid component built with React, with editors, keyboard navigation, copy & paste, and the like <a href="http://adazzle.github.io/react-data-grid/" target="_blank">http://adazzle.github.io/react-data-grid</a>.
</p>




<p>
  <img src="http://geekhmer.github.io/images/react-data-grid.png" width="600" alt="React-Data-Grid" />
</p>




<p>
  <strong>React-Bootstrap-Table</strong><br/>
  It's a ReactJs table for bootstrap, named react-bootstrap-table. It's a configurable, functional table component and make you build a Bootstrap Table more efficiency and easy in your ReactJs application like <a href="https://allenfang.github.io/react-bootstrap-table/" target="_blank">https://allenfang.github.io/react-bootstrap-table</a>.
</p>




<p>
  <img src="http://geekhmer.github.io/images/react-bootstrap-table.png" width="600" alt="React-Bootstrap-Table" />
</p>




<p>
  <strong>Griddle</strong><br/>
  It's an ultra customizable data-grid component for ReactJs like <a href="http://griddlegriddle.github.io/Griddle/" target="_blank">http://griddlegriddle.github.io/Griddle</a>.
</p>




<p>
  <img src="http://geekhmer.github.io/images/griddle.png" width="600" alt="Griddle" />
</p>




<p>
  <strong>React-Table</strong><br/>
  React-Table is a lightweight, fast and extendable data-grid built for ReactJs like <a href="https://react-table.js.org/" target="_blank">https://react-table.js.org</a>.
</p>




<p>
  <img src="http://geekhmer.github.io/images/react-table.png" width="600" alt="React-Table" />
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create-React-App Vs NextJs]]></title>
    <link href="http://geekhmer.github.io/blog/2017/11/04/create-react-app-vs-nextjs/"/>
    <updated>2017-11-04T22:13:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2017/11/04/create-react-app-vs-nextjs</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/cra_vs_next.png" width="600" alt="Create-React-App Vs NextJs" />
</p>




<p>
  <a href="https://github.com/zeit/next.js/" target="_blank">NextJs</a> is a new project with a lot to offer.
</p>




<p>
  The comparison between NextJs and Create-React-App is an apt one. What NextJs brings is great defaults. Like Create-React-App, NextJs is opinionated. It makes choices for you about what an ideal React setup should look like.
</p>




<p>
  One of the biggest pain points in starting a new javascript App is the tooling. Webpack, babel, and the like can be a pain to setup, especially with the aggressive release cycle of open source javascript projects. As of this writing you're probably already using Webpack syntax that's been deprecated.

</p>




<p>
  Here are the biggest differences between Create-React-App and NextJs.
</p>




<p>
  <strong>Create-React-App Is Ejectable, NextJs Is Extensible</strong><br/>
</p>




<p>
  Create-React-App uses babel, webpack, and eslint but "hides" this tooling and bundles it together in react-scripts. But Create-React-App doesn't lock you in; when you're ready to depart from training wheels you can unmask these dependencies and then configure them.
</p>




<p>
  NextJs, on the other hand, provides great defaults with the option to configure tooling if you want to. For example, you can override (or extend) NextJs's webpack configuration by adding a webpack.config.js file. Or you can add an express server if you don't want to use NextJs' server.
</p>




<p>
  <strong>NextJs is Out Of The Box</strong>
</p>




<p>
  The biggest point of NextJs is server-side rendering.
</p>




<p>
  People will tell you that Google crawls javascript and that it's sufficient to serve up an almost-empty html document with <code>root</code> class along with a massive bundle.js.
</p>




<p>
  It's true that Google crawls javascript. But this just isn't a good approach for apps that are content-focused and need to expose their content to search. 
</p>




<p>
  <strong>Styling is A Pain With NextJs</strong>
</p>




<p>
  NextJs can be a pain with styling. Out of the box, NextJs uses styled-jsx, which is OK. But what if you want to use SASS or styled-components? You're in for a few hours of frustration.
</p>




<p>
  <strong>You Can't make API Calls In Components With NextJs</strong>
</p>




<p>
  Initializing a new NextJs project creates two directores ./pages and ./components.
</p>




<p>
  Pages are like container React components. But they have more significance than simply wrapping other components. Page components are literally rendered into pages with a little help from react-router. That is, http://localhost:3000/about points to ./pages/about.js. This approach has strengthes and limitations. One of the limitations is that you can only make a client-side fetch request in top-level page components.
</p>




<p>
  <strong>Create-React-App Vs NextJs: Comparison Table</strong>
</p>




<table>
  <thead>
    <tr>
      <th></th>
      <th>Create React App</th>
      <th>NextJs</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Dependencies</td>
      <td>One (react-scripts)</td>
      <td>One (next)</td>
    </tr>
    <tr>
      <td>Ejectable</td>
      <td>Yes</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Extensible</td>
      <td>No</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Isomorphic/Universal</td>
      <td>No</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Zero-configuration</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Service workers</td>
      <td>Yes</td>
      <td>No</td>
    </tr>
    <tr>
      <td>Hot-reloading</td>
      <td>Yes</td>
      <td>Yes</td>
    </tr>
    <tr>
      <td>Code-splitting</td>
      <td>Can be configured</td>
      <td>Out of the box</td>
    </tr>
  </tbody>
</table>




<br/>




<p>
  <strong>Conclusion</strong>
</p>




<p>
  NextJs is a good start if you need SSR first, SEO friendly with lots of public content. But if you build a highly dynamic statically deployed Single Page Application client, CRA (Create React App) is better suited for that.
</p>




<p>
  So for blog, news, with lots of public content and shareability, I'll go with NextJs. For dashboard, admin, apps, I'll go with CRA (Create React App)
</p>

]]></content>
  </entry>
  
</feed>
