<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Other | GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/blog/categories/other/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2015-02-22T23:57:52+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Stashing Codes Changes in Git]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/20/stashing-codes-changes-in-git/"/>
    <updated>2015-02-20T19:53:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/20/stashing-codes-changes-in-git</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/logo_git.png" alt="Stashing Codes Changes in Git" />
</p>




<p>
  Using version control, is best to commit your code in small, discrete chunks rather than making large commits. However, What happens when you are working on a large change, and your boss comes to you and tells you they need an urgent bug fixed? With the git stash command you can quickly and easily store your code away and recall it for later use. Let’s run through this with me.
</p>




<p>
  <strong>Stash the Code</strong>
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">stash</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Reapply the Changes You Sent to the Stash Type</strong><br/>
  What if you want to reapply your changes? Use <code>git stash apply</code> to reapply all the changes you stashed away with git stash.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">stash</span> <span class="n">apply</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>List All of the Stashes You've Made Type</strong><br/>
  Git stash supports stashing multiple times. To see a list of all the code you've stashed, use <code>git stash list</code>. The git stash list will show you a list of all the stashes you've made.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">stash</span> <span class="n">list</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Stash Apply From the Earlier List</strong><br/>
  If the first stash is named stash@{1}, you can type <code>git stash apply stash@{1}</code> to apply the changes from that stash.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">stash</span> <span class="n">apply</span> <span class="n">stash</span><span class="err">@</span><span class="p">{</span><span class="mi">1</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  So far so good, That's it! See ya! :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Git with Ruby on Rails Project]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/09/use-git-with-ruby-on-rails-project/"/>
    <updated>2015-02-09T23:31:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/09/use-git-with-ruby-on-rails-project</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/logo_git.png" alt="Install Git on Linux/Ubuntu" />
</p>




<p>
  Well, in the previous article I've shown you "<a href="http://geekhmer.github.io/blog/2015/02/09/install-git-on-linux-slash-ubuntu/">Install Git on Linux/Ubuntu</a>", and in this article I want to show you "Create Ruby on Rails project and using Git". Let’s run through this with me.
</p>




<p>
  <strong>Create Ruby on Rails Project</strong><br/>
  Type command below to create a Rails project:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rails</span> <span class="kp">new</span> <span class="n">todo</span> <span class="o">-</span><span class="n">d</span> <span class="n">mysql</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Initialize Git</strong><br/>
  Type command below to initialize git:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cd</span> <span class="n">todo</span>
</span><span class='line'><span class="n">git</span> <span class="n">init</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Ignore File/Dir</strong><br/>
  Git uses file <code>.gitignore</code> to determine which files and directories to ignore, before you make a commit.
</p>




<p>
  <code>.gitignore</code> file should be committed into your repository, in order to share the ignore rules with any other users that clone the repository.
</p>




<p>
  Type command below to create a <code>.gitignore</code> file:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">vim</span> <span class="o">.</span><span class="n">gitignore</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Then type file/dir or content that you want git to ignore:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>.gitignore </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">log</span><span class="o">/&lt;</span><span class="n">em</span><span class="o">&gt;.</span><span class="n">log</span>
</span><span class='line'><span class="n">tmp</span><span class="o">/**/&lt;</span><span class="sr">/em&gt;</span>
</span><span class='line'><span class="sr">config/</span><span class="n">database</span><span class="o">.</span><span class="n">yml</span>
</span><span class='line'><span class="n">db</span><span class="o">/*.</span><span class="n">mysql</span>
</span><span class='line'><span class="sr">/public/</span><span class="n">assets</span><span class="o">/**</span>
</span><span class='line'><span class="sr">/vendor/</span><span class="n">bundle</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Type command below to add Rails project into git:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">add</span> <span class="o">.</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Type command below to commit into git:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">commit</span> <span class="o">-</span><span class="n">m</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="kp">initialize</span> <span class="n">income</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  And type command below to push to the repository branch master:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">master</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Git on Linux/Ubuntu]]></title>
    <link href="http://geekhmer.github.io/blog/2015/02/09/install-git-on-linux-slash-ubuntu/"/>
    <updated>2015-02-09T22:00:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2015/02/09/install-git-on-linux-slash-ubuntu</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/logo_git.png" alt="Install Git on Linux/Ubuntu" />
</p>




<p>
  <strong>Overview</strong><br/>
  Git is a free and open source distributed version control system with an emphasis on speed, data integrity, and support for distributed, non-linear workflows.
</p>




<p>
  <strong>Installation</strong><br/>
  Use command line below to update local package index and then install the packages:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>
</span><span class='line'><span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">build</span><span class="o">-</span><span class="n">essential</span> <span class="n">libssl</span><span class="o">-</span><span class="n">dev</span> <span class="n">libcurl4</span><span class="o">-</span><span class="n">gnutls</span><span class="o">-</span><span class="n">dev</span> <span class="n">libexpat1</span><span class="o">-</span><span class="n">dev</span> <span class="n">gettext</span> <span class="n">unzip</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>Setting Up Git</strong><br/>
  Now you have git installed, you need to do a few things so that the commit messages that will be generated for you will contain your correct information.
</p>




<p>
  You need to provide your name and email address by using <code>git config</code> because git embeds this information into each commit you do. You can go ahead and add this information by typing:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">config</span> <span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="n">global</span> <span class="n">user</span><span class="o">.</span><span class="n">name</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Your</span> <span class="no">Name</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'><span class="n">git</span> <span class="n">config</span> <span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="n">global</span> <span class="n">user</span><span class="o">.</span><span class="n">email</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#97;&amp;#105;&amp;#x6c;&amp;#116;&amp;#111;&amp;#x3a;&amp;#x79;&amp;#x6f;&amp;#117;&amp;#x72;&amp;#101;&amp;#109;&amp;#97;&amp;#105;&amp;#x6c;&amp;#64;&amp;#100;&amp;#111;&amp;#109;&amp;#x61;&amp;#105;&amp;#110;&amp;#x2e;&amp;#99;&amp;#x6f;&amp;#x6d;&quot;</span><span class="o">&gt;&amp;</span><span class="c1">#121;&amp;#111;&amp;#117;&amp;#114;&amp;#x65;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#64;&amp;#x64;&amp;#x6f;&amp;#109;&amp;#x61;&amp;#105;&amp;#110;&amp;#x2e;&amp;#x63;&amp;#111;&amp;#x6d;&lt;/a&gt;&amp;rdquo;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  You can see all of the configuration items that you have been set by typing command below:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">config</span> <span class="o">&amp;</span><span class="n">mdash</span><span class="p">;</span><span class="n">list</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  What you will see:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">name</span><span class="o">=</span><span class="no">Your</span> <span class="no">Name</span>
</span><span class='line'><span class="n">user</span><span class="o">.</span><span class="n">email</span><span class="o">=&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#x6c;&amp;#116;&amp;#x6f;&amp;#58;&amp;#x79;&amp;#111;&amp;#x75;&amp;#114;&amp;#101;&amp;#x6d;&amp;#97;&amp;#105;&amp;#x6c;&amp;#64;&amp;#x64;&amp;#x6f;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#110;&amp;#x2e;&amp;#99;&amp;#x6f;&amp;#x6d;&quot;</span><span class="o">&gt;&amp;</span><span class="c1">#121;&amp;#111;&amp;#117;&amp;#x72;&amp;#x65;&amp;#x6d;&amp;#97;&amp;#105;&amp;#x6c;&amp;#64;&amp;#100;&amp;#111;&amp;#109;&amp;#x61;&amp;#105;&amp;#110;&amp;#x2e;&amp;#x63;&amp;#x6f;&amp;#109;&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  The information is stored in the configuration file, which you can optionally edit by hand with your text editor like this:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">vim</span> <span class="o">~</span><span class="sr">/.gitconfig</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="n">user</span><span class="o">]</span>
</span><span class='line'>  <span class="nb">name</span> <span class="o">=</span> <span class="no">Your</span> <span class="no">Name</span>
</span><span class='line'>  <span class="n">email</span> <span class="o">=</span> <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;&amp;#x6d;&amp;#97;&amp;#x69;&amp;#108;&amp;#x74;&amp;#111;&amp;#x3a;&amp;#x79;&amp;#x6f;&amp;#117;&amp;#114;&amp;#x65;&amp;#109;&amp;#97;&amp;#105;&amp;#x6c;&amp;#x40;&amp;#100;&amp;#x6f;&amp;#109;&amp;#97;&amp;#105;&amp;#110;&amp;#46;&amp;#x63;&amp;#x6f;&amp;#x6d;&quot;</span><span class="o">&gt;&amp;</span><span class="c1">#121;&amp;#111;&amp;#117;&amp;#114;&amp;#x65;&amp;#109;&amp;#97;&amp;#105;&amp;#x6c;&amp;#64;&amp;#x64;&amp;#111;&amp;#x6d;&amp;#x61;&amp;#x69;&amp;#110;&amp;#x2e;&amp;#x63;&amp;#111;&amp;#109;&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  So far so good, now you should have git installed and ready to use on your system. To learn more about how to use Git, check out these: <a href="https://try.github.io/levels/1/challenges/1" target="_blank">www.try.github.io</a>
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tips to Improve the Performance of Ruby on Rails Application]]></title>
    <link href="http://geekhmer.github.io/blog/2014/12/01/tips-to-improve-the-performance-of-ruby-on-rails-application/"/>
    <updated>2014-12-01T22:06:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/12/01/tips-to-improve-the-performance-of-ruby-on-rails-application</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/ruby_on_rails.png" alt="Tips to Improve the Performance of Ruby on Rails Application" />
</p>




<p>
   In this article, I will show you tips to improve performance of Ruby on Rails application. let’s dive into those.
</p>




<p>
  <strong>1. Limit Amount of Data in a Controller Method</strong><br/>
  Thin controllers are easy to test and has a good performance profile because there’s some overhead involved in passing the controller instance variable around. In short, you need to follow "Thin controller and fat model".
</p>




<p>
  <strong>2. Split View in Separate Partials</strong><br/>
  n this way, views will be easier to read and easier to cache.
</p>




<p>
  <strong>3. Choose Right Session Storage</strong><br/>
  Based on your level of need, choose your session storage carefully. Here are what rails provide:<br/>
  - CookieStore – Stores everything on the client.<br/>
  - DRbStore – Stores the data on a DRb server.<br/>
  - MemCacheStore – Stores the data in a memcache.<br/>
  - ActiveRecordStore – Stores the data in a database using Active Record.
</p>




<p>
  <strong>4. DRY (Don't Repeat Yourself)</strong><br/>
  This is the most common things programmers tend to listen and don’t follow. Here is very basic example:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="no">Listing</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Bambo</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span>
</span><span class='line'>  <span class="k">return</span> <span class="no">Listing</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="k">return</span> <span class="kp">nil</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  It should be written by:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">listing</span> <span class="o">=</span> <span class="no">Listing</span><span class="o">.</span><span class="n">find_by_id</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="k">if</span> <span class="n">listing</span><span class="o">.</span><span class="n">name</span> <span class="o">==</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="no">Bambp</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="k">then</span> <span class="n">listing</span> <span class="k">else</span> <span class="kp">nil</span> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>4. Eager Loading</strong><br/>
  Eager loading is a way to solve the classic N + 1 query performance problem caused by inefficient use of child objects.
</p>




<p>
  Let’s look at the following code. It will fetch zip of 10 users.
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">all</span><span class="p">(</span><span class="ss">:limit</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;users.each do |user|</span>
</span><span class='line'><span class="sr">  puts user.address.zip</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  11 queries will be executed, 1 for the top and 10. The solution is to rewrite it to eager load address:
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:address</span><span class="p">)</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;users.each do |user|</span>
</span><span class='line'><span class="sr">  puts user.address.zip</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  <strong>5. Indexing</strong><br/>
  Database indexing is one of the simplest ways to improve database performance. The insert operation will become slower but will boost up fetching data which is more frequently used in web application.
</p>




<p>
  <strong>6. Avoid Dynamism</strong><br/>
  Although find_by and find_all_by dynamic methods are really cool, the are also kind of slow because each one needs to run through method_missing and parse the filename against the list of columns in database table.
</p>




<p>
  <strong>7. Caching</strong><br/>
  This is the purest way to speed up a rails application. Here are a short example of different types of caching:<br/>
  - Page Caching<br/>
  - Action Caching<br/>
  - Fragment Caching<br/>
  - SQL Caching<br/>
  - Asset Caching<br/>
</p>




<p>
  <strong>8. Image Spriting</strong><br/>
  In websites, a significant times are consumed for loading large number of images. One way of minimizing is to sprite your images. This will reduce number of images to be served significantly.
</p>




<p>
  <strong>9. Minify and GZIP Stylesheets and Javascripts</strong><br/>
  This is the last point, but an important one. You can reduce size of the stylesheets and javascripts significantly by Minifying it and serve as GZip format. It will improve the performance significantly by reducing request/response time.
</p>




<p>
  So far so good, these are pretty basic guidelines but surely help you to improve your application. Now, the bounce rate of your site should be less and you are expected to be a happier product owner. :)
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tools for Monitoring Performance in Ruby on Rails Application]]></title>
    <link href="http://geekhmer.github.io/blog/2014/11/29/tools-for-monitoring-performance-in-ruby-on-rails-application/"/>
    <updated>2014-11-29T22:31:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/11/29/tools-for-monitoring-performance-in-ruby-on-rails-application</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/move_to_rails.png" alt="Tools for Monitoring Performance in Ruby on Rails Application" />
</p>




<p>
  Here are some tips for you to monitor performance in a Ruby on Rails application. Some tools and tips are equally applicable for other web applications:
</p>




<p>
  <strong>1. Rails Logger</strong><br/>
  The simplest way to get information about performance is to analyze rails log. It will provide you information of the time spent processing each request, broken down into rendering and SQL time. You can also find whether a particular part are cached or the occurrence of cache expiry.
</p>




<p>
  <strong>2. Rails Performance Test - Profiling</strong><br/>
  Profiling helps you to see the details of a performance test and provide an in-depth picture of the slow and memory hungry parts. Each test case is run 1 time in profiling mode.
</p>




<p>
  <strong>3. Rails Performance Test - Benchmarking</strong><br/>
  Through Rails performance test, source of application’s memory or speed bottleneck and can be found. Benchmarking helps find out how fast each performance test runs. Each test case is run 4 times in benchmarking mode.
</p>




<p>
  <strong>4. <a href="https://github.com/wvanbergen/request-log-analyzer" target="_blank">Rails Analyzer</a></strong><br/>
  The Rails Analyzer project contains a collection of tools (The Production Log Analyzer, The Action Profiler, Rails Analyzer Tools, The SQL Dependency Grapher) for Rails that let you discover biggest slow spots in your applications allowing you to best focus optimization efforts.
</p>




<p>
  <strong>5. <a href="https://github.com/josevalim/rails-footnotes" target="_blank">Rails Footnote</a></strong><br/>
  It is a rails plugin which displays footnotes in your application for easy debugging, such as sessions, request parameters, cookies, filter chain, routes, queries, etc. Even more, it contains links to open files directly in your editor including your backtrace lines.
</p>




<p>
  <strong>6. <a href="https://github.com/nesquena/query_reviewer" target="_blank">Query Reviewer</a></strong><br/>
  Query Reviewer is an advanced SQL query analyzer. It generates a page with explanation output of all SELECT queries, rate a page’s SQL usage, display interactive summary on page.
</p>




<p>
  <strong>7. <a href="https://github.com/sdsykes/slim_scrooge" target="_blank">Slim Scrooge</a></strong></strong><br/>
  SlimScrooge is an optimization layer to ensure your application only fetches the database content needed to minimize wire traffic, excessive SQL queries and reduce conversion overheads to native Ruby types.<br/>
  SlimScrooge implements inline query optimization, automatically restricting the columns fetched based on what was used during previous passes through the same part of your code.
</p>




<p>
  <strong>8. <a href="http://newrelic.com" target="_blank">New Relic</a></strong><br/>
  New Relic is the all-in-one web application performance tool that lets you see performance from the end user experience down to the line of application code. It will also list the errors if such occurrence occur.
</p>




<p>
  <strong>9. <a href="https://github.com/brynary/rack-bug" target="_blank">Rack-Bug</a></strong><br/>
  It is a debugging toolbar for Rack applications implemented as middleware.
</p>




<p>
  <strong>10. <a href="https://github.com/mperham/sidekiq" target="_blank">Sidekiq</a></strong><br/>
  Sidekiq uses threads to handle many jobs at the same time in the same process. It does not require Rails but will integrate tightly with Rails 3/4 to make background processing dead simple.
</p>




<p>
  <strong>11. <a href="http://getfirebug.com" target="_blank">Firebug</a></strong><br/>
  Firebug is a firefox plugin and a very powerful tool. Apart from many outstanding features, it helps to monitor network performance. You can see the load time of each files (when they started to load and when they are completed), filter it by type (e.g. javascript or CSS) and examining http headers.
</p>




<p>
  So far so good, you can suggest more. These are a mere introduction. You can try those out and examine the health of your application. I have a plan to write another one with tips regarding enhancing performance based on the generated health report of a web application. Stay tuned for that!
</p>

]]></content>
  </entry>
  
</feed>
