<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Websocket | GeeKhmer]]></title>
  <link href="http://geekhmer.github.io/blog/categories/websocket/atom.xml" rel="self"/>
  <link href="http://geekhmer.github.io/"/>
  <updated>2014-07-24T14:43:10+07:00</updated>
  <id>http://geekhmer.github.io/</id>
  <author>
    <name><![CDATA[Bunlong Van]]></name>
    <email><![CDATA[bunlong.van@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ruby websocket and real-time app tutorial]]></title>
    <link href="http://geekhmer.github.io/blog/2014/02/04/ruby-websocket-and-real-time-app-tutorial/"/>
    <updated>2014-02-04T21:12:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/02/04/ruby-websocket-and-real-time-app-tutorial</id>
    <content type="html"><![CDATA[<p>
  In this post I would like to present a small tutorial, I hope it will serve as a good introduction to web-socket api.
</p>




<p>
  <strong>Websocket Server</strong><br/>
  In the part we focus on server part. In ruby we use eventmachine, em-websocket gem to install websocket server.<br/>
  To install eventmachine run <code>gem install eventmachine</code><br/>
  To install em-websocket run <code>gem install em-websocket</code><br/>
  Make a file server.rb and implement codes below:<br/>
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>server.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">eventmachine</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="nb">require</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">em</span><span class="o">-</span><span class="n">websocket</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;EventMachine.run {</span>
</span><span class='line'><span class="sr">  EventMachine::WebSocket.start(:host =&gt; &amp;ldquo;0.0.0.0&amp;rdquo;, :port =&gt; 8080) do |ws|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">ws</span><span class="o">.</span><span class="n">onopen</span> <span class="p">{</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;WebSocket connection open&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">ws</span><span class="o">.</span><span class="n">onmessage</span> <span class="p">{</span> <span class="o">|</span><span class="n">msg</span><span class="o">|</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="n">msg</span>
</span><span class='line'>  <span class="n">ws</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">msg</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">ws</span><span class="o">.</span><span class="n">onclose</span> <span class="p">{</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;WebSocket connection closed&quot;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  What the code does is creates a websocket-server which listens at localhost:8080. Callbacks have been provided for open and close events, so when a client creates a connection or a connection gets closed the associated callbacks print an appropriate message to the terminal. And callbacks have been provided for message event when a client send the message.<br/><br/>
  To run websocket server run <code>ruby sever.rb</code>
</p>




<p>
  <strong>Websocket Client</strong><br/>
  So far, so good. But the main purpose of a websocket server is to get the message from client and relay data to the client. How do we do that? Turns out that is pretty simple too.<br/>
  Make a file index.html and implement codes below:<br/>
</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>index.html </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>Websocket GeeKhmer<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span><span class="kd">var</span> <span class="nx">ws</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ws</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">WebSocket</span><span class="p">(</span><span class="s2">&quot;ws://localhost:8080&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">ws</span><span class="p">.</span><span class="nx">onopen</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Connection is opened&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">ws</span><span class="p">.</span><span class="nx">onclose</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Connection is closed&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">ws</span><span class="p">.</span><span class="nx">onmessage</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">msg</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">send</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ws</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;txt&quot;</span><span class="p">).</span><span class="nx">value</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>  <span class="nt">&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body</span> <span class="na">onload=</span><span class="s">&quot;init();&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;h2&gt;</span>WebSocket GeeKhmer<span class="nt">&lt;/h2&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">id=</span><span class="s">&quot;txt&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">onclick=</span><span class="s">&quot;send();&quot;</span> <span class="na">value=</span><span class="s">&quot;Send&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">&quot;display&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>
  Feel free to provide your suggestions and to point out errors.
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What is Websocket?]]></title>
    <link href="http://geekhmer.github.io/blog/2014/01/31/what-is-websocket/"/>
    <updated>2014-01-31T13:05:00+07:00</updated>
    <id>http://geekhmer.github.io/blog/2014/01/31/what-is-websocket</id>
    <content type="html"><![CDATA[<p>
  <img src="http://geekhmer.github.io/images/websocket_ajax_.gif" /><br/>
  WebSocket is a new standard for realtime communication for the Web & Mobile apps.
</p>




<p>
  <strong>Websocket Benefit</strong><br/>
  - Websocket enables the server to push data to the connected clients.<br/>
  - Reduce unnecessary network traffic and latency using full-duplex through a single connection (instead of two).<br/>
  - Streaming through proxies and firewalls, supporting simultaneously upstream and downstream communication.
  - Backward compatible with the pre-WebSocket world by switching from an HTTP connection to WebSockets.
</p>




<p>
  <strong>Apps that should use Websocket</strong><br/>
  - Multi-User Apps.<br/>
  - Real-Time Apps.<br/>
  - Apps where live data is needed, like a stock market app...
</p>




<p>
  <strong>Websocket Client</strong><br/>
  On web, websocket support in browsers such as Google Chrome, Firefox, Opera.<br/>
  On mobile, websocket support in iOS & Android.<br/>
  Websocket client on Web use javascript for requesting to Websocket Server. Let try <a href="http://www.w3schools.com/html/html5_webworkers.asp" target="_blank">w3schools</a>, <a href="http://www.tutorialspoint.com/html5/html5_websocket.htm" target="_blank">tutorialspoint</a>
</p>




<p>
  <strong>Websocket Server</strong><br/>
  On Server, websocket support in Ruby, Java, Objective-C, PHP, .NET, node.js, ActionScript and many other languages. Let try <a href="https://github.com/igrigorik/em-websocket" target="_blank">Ruby</a>, <a href="https://github.com/Atmosphere/atmosphere" target="_blank">Java</a>, <a href="https://github.com/square/SocketRocket" target="_blank">Objective-C(iOS)</a>, <a href="https://github.com/hoaproject/Websocket" target="_blank">PHP</a>, <a href="http://xsockets.net/" target="_blank">.NET</a>, <a href="https://github.com/Worlize/WebSocket-Node" target="_blank">node.js</a>
</p>




<p>
  <strong>Processing</strong><br/><br/>
  <a class="fancybox" href="http://geekhmer.github.io/images/websocket_processing.png"><img src="http://geekhmer.github.io/images/websocket_processing.png" width="680" /></a><br/>
</p>

]]></content>
  </entry>
  
</feed>
